/// autogenerated analytical inverse kinematics code from ikfast program part of OpenRAVE
/// \author Rosen Diankov
///
/// Licensed under the Apache License, Version 2.0 (the "License");
/// you may not use this file except in compliance with the License.
/// You may obtain a copy of the License at
///     http://www.apache.org/licenses/LICENSE-2.0
/// 
/// Unless required by applicable law or agreed to in writing, software
/// distributed under the License is distributed on an "AS IS" BASIS,
/// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
/// See the License for the specific language governing permissions and
/// limitations under the License.
///
/// ikfast version 0x10000049 generated on 2022-02-27 00:16:57.452006
/// To compile with gcc:
///     gcc -lstdc++ ik.cpp
/// To compile without any main function as a shared object (might need -llapack):
///     gcc -fPIC -lstdc++ -DIKFAST_NO_MAIN -DIKFAST_CLIBRARY -shared -Wl,-soname,libik.so -o libik.so ik.cpp
#define IKFAST_HAS_LIBRARY
#include "ikfast.h" // found inside share/openrave-X.Y/python/ikfast.h
using namespace ikfast;

// check if the included ikfast version matches what this file was compiled with
#define IKFAST_COMPILE_ASSERT(x) extern int __dummy[(int)x]
IKFAST_COMPILE_ASSERT(IKFAST_VERSION==0x10000049);

#include <cmath>
#include <vector>
#include <limits>
#include <algorithm>
#include <complex>

#ifndef IKFAST_ASSERT
#include <stdexcept>
#include <sstream>
#include <iostream>

#ifdef _MSC_VER
#ifndef __PRETTY_FUNCTION__
#define __PRETTY_FUNCTION__ __FUNCDNAME__
#endif
#endif

#ifndef __PRETTY_FUNCTION__
#define __PRETTY_FUNCTION__ __func__
#endif

#define IKFAST_ASSERT(b) { if( !(b) ) { std::stringstream ss; ss << "ikfast exception: " << __FILE__ << ":" << __LINE__ << ": " <<__PRETTY_FUNCTION__ << ": Assertion '" << #b << "' failed"; throw std::runtime_error(ss.str()); } }

#endif

#if defined(_MSC_VER)
#define IKFAST_ALIGNED16(x) __declspec(align(16)) x
#else
#define IKFAST_ALIGNED16(x) x __attribute((aligned(16)))
#endif

#define IK2PI  ((IkReal)6.28318530717959)
#define IKPI  ((IkReal)3.14159265358979)
#define IKPI_2  ((IkReal)1.57079632679490)

#ifdef _MSC_VER
#ifndef isnan
#define isnan _isnan
#endif
#ifndef isinf
#define isinf _isinf
#endif
//#ifndef isfinite
//#define isfinite _isfinite
//#endif
#endif // _MSC_VER

// lapack routines
extern "C" {
  void dgetrf_ (const int* m, const int* n, double* a, const int* lda, int* ipiv, int* info);
  void zgetrf_ (const int* m, const int* n, std::complex<double>* a, const int* lda, int* ipiv, int* info);
  void dgetri_(const int* n, const double* a, const int* lda, int* ipiv, double* work, const int* lwork, int* info);
  void dgesv_ (const int* n, const int* nrhs, double* a, const int* lda, int* ipiv, double* b, const int* ldb, int* info);
  void dgetrs_(const char *trans, const int *n, const int *nrhs, double *a, const int *lda, int *ipiv, double *b, const int *ldb, int *info);
  void dgeev_(const char *jobvl, const char *jobvr, const int *n, double *a, const int *lda, double *wr, double *wi,double *vl, const int *ldvl, double *vr, const int *ldvr, double *work, const int *lwork, int *info);
}

using namespace std; // necessary to get std math routines

#ifdef IKFAST_NAMESPACE
namespace IKFAST_NAMESPACE {
#endif

inline float IKabs(float f) { return fabsf(f); }
inline double IKabs(double f) { return fabs(f); }

inline float IKsqr(float f) { return f*f; }
inline double IKsqr(double f) { return f*f; }

inline float IKlog(float f) { return logf(f); }
inline double IKlog(double f) { return log(f); }

// allows asin and acos to exceed 1. has to be smaller than thresholds used for branch conds and evaluation
#ifndef IKFAST_SINCOS_THRESH
#define IKFAST_SINCOS_THRESH ((IkReal)1e-7)
#endif

// used to check input to atan2 for degenerate cases. has to be smaller than thresholds used for branch conds and evaluation
#ifndef IKFAST_ATAN2_MAGTHRESH
#define IKFAST_ATAN2_MAGTHRESH ((IkReal)1e-7)
#endif

// minimum distance of separate solutions
#ifndef IKFAST_SOLUTION_THRESH
#define IKFAST_SOLUTION_THRESH ((IkReal)1e-6)
#endif

// there are checkpoints in ikfast that are evaluated to make sure they are 0. This threshold speicfies by how much they can deviate
#ifndef IKFAST_EVALCOND_THRESH
#define IKFAST_EVALCOND_THRESH ((IkReal)0.00001)
#endif


inline float IKasin(float f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return float(-IKPI_2);
else if( f >= 1 ) return float(IKPI_2);
return asinf(f);
}
inline double IKasin(double f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return -IKPI_2;
else if( f >= 1 ) return IKPI_2;
return asin(f);
}

// return positive value in [0,y)
inline float IKfmod(float x, float y)
{
    while(x < 0) {
        x += y;
    }
    return fmodf(x,y);
}

// return positive value in [0,y)
inline double IKfmod(double x, double y)
{
    while(x < 0) {
        x += y;
    }
    return fmod(x,y);
}

inline float IKacos(float f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return float(IKPI);
else if( f >= 1 ) return float(0);
return acosf(f);
}
inline double IKacos(double f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return IKPI;
else if( f >= 1 ) return 0;
return acos(f);
}
inline float IKsin(float f) { return sinf(f); }
inline double IKsin(double f) { return sin(f); }
inline float IKcos(float f) { return cosf(f); }
inline double IKcos(double f) { return cos(f); }
inline float IKtan(float f) { return tanf(f); }
inline double IKtan(double f) { return tan(f); }
inline float IKsqrt(float f) { if( f <= 0.0f ) return 0.0f; return sqrtf(f); }
inline double IKsqrt(double f) { if( f <= 0.0 ) return 0.0; return sqrt(f); }
inline float IKatan2Simple(float fy, float fx) {
    return atan2f(fy,fx);
}
inline float IKatan2(float fy, float fx) {
    if( isnan(fy) ) {
        IKFAST_ASSERT(!isnan(fx)); // if both are nan, probably wrong value will be returned
        return float(IKPI_2);
    }
    else if( isnan(fx) ) {
        return 0;
    }
    return atan2f(fy,fx);
}
inline double IKatan2Simple(double fy, double fx) {
    return atan2(fy,fx);
}
inline double IKatan2(double fy, double fx) {
    if( isnan(fy) ) {
        IKFAST_ASSERT(!isnan(fx)); // if both are nan, probably wrong value will be returned
        return IKPI_2;
    }
    else if( isnan(fx) ) {
        return 0;
    }
    return atan2(fy,fx);
}

template <typename T>
struct CheckValue
{
    T value;
    bool valid;
};

template <typename T>
inline CheckValue<T> IKatan2WithCheck(T fy, T fx, T epsilon)
{
    CheckValue<T> ret;
    ret.valid = false;
    ret.value = 0;
    if( !isnan(fy) && !isnan(fx) ) {
        if( IKabs(fy) >= IKFAST_ATAN2_MAGTHRESH || IKabs(fx) > IKFAST_ATAN2_MAGTHRESH ) {
            ret.value = IKatan2Simple(fy,fx);
            ret.valid = true;
        }
    }
    return ret;
}

inline float IKsign(float f) {
    if( f > 0 ) {
        return float(1);
    }
    else if( f < 0 ) {
        return float(-1);
    }
    return 0;
}

inline double IKsign(double f) {
    if( f > 0 ) {
        return 1.0;
    }
    else if( f < 0 ) {
        return -1.0;
    }
    return 0;
}

template <typename T>
inline CheckValue<T> IKPowWithIntegerCheck(T f, int n)
{
    CheckValue<T> ret;
    ret.valid = true;
    if( n == 0 ) {
        ret.value = 1.0;
        return ret;
    }
    else if( n == 1 )
    {
        ret.value = f;
        return ret;
    }
    else if( n < 0 )
    {
        if( f == 0 )
        {
            ret.valid = false;
            ret.value = (T)1.0e30;
            return ret;
        }
        if( n == -1 ) {
            ret.value = T(1.0)/f;
            return ret;
        }
    }

    int num = n > 0 ? n : -n;
    if( num == 2 ) {
        ret.value = f*f;
    }
    else if( num == 3 ) {
        ret.value = f*f*f;
    }
    else {
        ret.value = 1.0;
        while(num>0) {
            if( num & 1 ) {
                ret.value *= f;
            }
            num >>= 1;
            f *= f;
        }
    }
    
    if( n < 0 ) {
        ret.value = T(1.0)/ret.value;
    }
    return ret;
}

/// solves the forward kinematics equations.
/// \param pfree is an array specifying the free joints of the chain.
IKFAST_API void ComputeFk(const IkReal* j, IkReal* eetrans, IkReal* eerot) {

// necessary for local/global translation3d
eerot[0] = eerot[4] = eerot[8] = 0;
IkReal r00 = 0, r11 = 0, r22 = 0;
IkReal x0,x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13,x14,x15,x16,x17,x18,x19,x20,x21;
x0=IKsin(j[0]);
x1=IKcos(j[1]);
x2=IKsin(j[1]);
x3=IKcos(j[3]);
x4=IKsin(j[3]);
x5=IKcos(j[0]);
x6=IKcos(j[2]);
x7=IKsin(j[2]);
x8=IKcos(j[4]);
x9=IKsin(j[4]);
x10=(x0*x1);
x11=(x0*x2);
x12=(x5*x6);
x13=((0.117190077688363)*x10);
x14=((0.99310950337382)*x11);
x15=((((-1.0)*x13))+x14);
x16=((((0.99310950337382)*x10))+(((0.117190077688363)*x11)));
x17=(x15*x7);
x18=(x16*x4);
x19=(x12+x17);
x20=(((x5*x7))+((x6*(((((-1.0)*x14))+x13)))));
x21=(x19*x3);
eetrans[0]=(((r00*((((x8*((x18+x21))))+((x20*x9))))))+(((-0.003)*x12))+((r11*((((x9*(((((-1.0)*x21))+(((-1.0)*x18))))))+((x20*x8))))))+((x4*(((((-0.235)*x17))+(((-0.235)*x12))))))+((r22*((((x19*x4))+(((-1.0)*x16*x3))))))+((x4*(((((0.00357519421214575)*x10))+(((0.000421884279678108)*x11))))))+((x3*(((((0.233380733292848)*x10))+(((0.0275396682567654)*x11))))))+(((0.0298834698105326)*x11))+((x7*(((((0.00035157023306509)*x10))+(((-0.00297932851012146)*x11))))))+(((0.0052)*x5))+((x3*(((((0.0036)*x12))+(((0.0036)*x17))))))+(((0.253242923360324)*x10)));
eetrans[1]=((-0.1728)+(((((((4.12005429258139e-5)*(IKcos(j[0]))*(IKcos(j[1]))))+(((-0.00034914773956029)*(IKcos(j[0]))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((((((-0.000421884279678108)*(IKcos(j[2]))*(IKsin(j[0]))))+(((-0.117190077688363)*(((((0.000421884279678108)*(IKcos(j[0]))*(IKcos(j[1]))))+(((-0.00357519421214575)*(IKcos(j[0]))*(IKsin(j[1]))))))*(IKsin(j[2]))))))*(IKcos(j[3]))))+(((0.251497953851306)*(IKsin(j[1]))))+(((0.00350204614869418)*(IKcos(j[0]))*(IKsin(j[1]))))+(((((((0.231772624137478)*(IKcos(j[1]))))+(((0.027349906265556)*(IKsin(j[1]))))))*(IKsin(j[2]))*(IKsin(j[3]))))+(((((((-0.000418977287472348)*(IKsin(j[1]))))+(((-0.00355055934848902)*(IKcos(j[1]))))))*(IKcos(j[3]))*(IKsin(j[2]))))+(((((((0.027349906265556)*(IKcos(j[0]))*(IKcos(j[1]))))+(((0.00322737586252209)*(IKcos(j[0]))*(IKsin(j[1]))))))*(IKcos(j[3]))))+(((-0.99310950337382)*r22*(((((((((0.99310950337382)*(IKcos(j[1]))))+(((0.117190077688363)*(IKsin(j[1]))))))*(IKsin(j[2]))*(IKsin(j[3]))))+(((((((0.99310950337382)*(IKsin(j[1]))))+(((-0.117190077688363)*(IKcos(j[1]))))))*(IKcos(j[3]))))))))+(((((((0.00295879945707419)*(IKcos(j[1]))))+(((0.00034914773956029)*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((-0.117190077688363)*r00*(((((((((((((-0.99310950337382)*(IKcos(j[0]))*(IKcos(j[1]))))+(((-0.117190077688363)*(IKcos(j[0]))*(IKsin(j[1]))))))*(IKsin(j[3]))))+(((((((((((0.117190077688363)*(IKcos(j[0]))*(IKcos(j[1]))))+(((-0.99310950337382)*(IKcos(j[0]))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((IKcos(j[2]))*(IKsin(j[0]))))))*(IKcos(j[3]))))))*(IKcos(j[4]))))+(((((((IKsin(j[0]))*(IKsin(j[2]))))+(((((((0.99310950337382)*(IKcos(j[0]))*(IKsin(j[1]))))+(((-0.117190077688363)*(IKcos(j[0]))*(IKcos(j[1]))))))*(IKcos(j[2]))))))*(IKsin(j[4]))))))))+(((-0.117190077688363)*r22*(((((((((((((0.117190077688363)*(IKcos(j[0]))*(IKcos(j[1]))))+(((-0.99310950337382)*(IKcos(j[0]))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((IKcos(j[2]))*(IKsin(j[0]))))))*(IKsin(j[3]))))+(((((((0.117190077688363)*(IKcos(j[0]))*(IKsin(j[1]))))+(((0.99310950337382)*(IKcos(j[0]))*(IKcos(j[1]))))))*(IKcos(j[3]))))))))+(((-0.99310950337382)*r00*(((((((((((((0.117190077688363)*(IKcos(j[1]))))+(((-0.99310950337382)*(IKsin(j[1]))))))*(IKsin(j[3]))))+(((((((0.99310950337382)*(IKcos(j[1]))))+(((0.117190077688363)*(IKsin(j[1]))))))*(IKcos(j[3]))*(IKsin(j[2]))))))*(IKcos(j[4]))))+(((((((-0.117190077688363)*(IKsin(j[1]))))+(((-0.99310950337382)*(IKcos(j[1]))))))*(IKcos(j[2]))*(IKsin(j[4]))))))))+(((0.0296775578626246)*(IKcos(j[0]))*(IKcos(j[1]))))+(((-0.99310950337382)*r11*(((((((((-0.117190077688363)*(IKsin(j[1]))))+(((-0.99310950337382)*(IKcos(j[1]))))))*(IKcos(j[2]))*(IKcos(j[4]))))+(((((((((((0.99310950337382)*(IKsin(j[1]))))+(((-0.117190077688363)*(IKcos(j[1]))))))*(IKsin(j[3]))))+(((((((-0.117190077688363)*(IKsin(j[1]))))+(((-0.99310950337382)*(IKcos(j[1]))))))*(IKcos(j[3]))*(IKsin(j[2]))))))*(IKsin(j[4]))))))))+(((((((0.0275396682567654)*(IKcos(j[2]))*(IKsin(j[0]))))+(((-0.117190077688363)*(((((-0.0275396682567654)*(IKcos(j[0]))*(IKcos(j[1]))))+(((0.233380733292848)*(IKcos(j[0]))*(IKsin(j[1]))))))*(IKsin(j[2]))))))*(IKsin(j[3]))))+(((-0.000609388403979489)*(IKsin(j[0]))))+(((((((0.231772624137478)*(IKsin(j[1]))))+(((-0.027349906265556)*(IKcos(j[1]))))))*(IKcos(j[3]))))+(((0.00035157023306509)*(IKcos(j[2]))*(IKsin(j[0]))))+(((((((0.00355055934848902)*(IKsin(j[1]))))+(((-0.000418977287472348)*(IKcos(j[1]))))))*(IKsin(j[3]))))+(((-0.117190077688363)*r11*(((((((((((((-1.0)*(IKcos(j[2]))*(IKsin(j[0]))))+(((-1.0)*(((((0.117190077688363)*(IKcos(j[0]))*(IKcos(j[1]))))+(((-0.99310950337382)*(IKcos(j[0]))*(IKsin(j[1]))))))*(IKsin(j[2]))))))*(IKcos(j[3]))))+(((((((0.117190077688363)*(IKcos(j[0]))*(IKsin(j[1]))))+(((0.99310950337382)*(IKcos(j[0]))*(IKcos(j[1]))))))*(IKsin(j[3]))))))*(IKsin(j[4]))))+(((((((IKsin(j[0]))*(IKsin(j[2]))))+(((((((0.99310950337382)*(IKcos(j[0]))*(IKsin(j[1]))))+(((-0.117190077688363)*(IKcos(j[0]))*(IKcos(j[1]))))))*(IKcos(j[2]))))))*(IKcos(j[4]))))))))+(((((((0.000418977287472348)*(IKcos(j[0]))*(IKcos(j[1]))))+(((4.94406515109767e-5)*(IKcos(j[0]))*(IKsin(j[1]))))))*(IKsin(j[3]))))+(((-0.0296775578626246)*(IKcos(j[1])))));
eetrans[2]=((((((((0.00357519421214575)*(IKcos(j[2]))*(IKsin(j[0]))))+(((0.99310950337382)*(((((0.000421884279678108)*(IKcos(j[0]))*(IKcos(j[1]))))+(((-0.00357519421214575)*(IKcos(j[0]))*(IKsin(j[1]))))))*(IKsin(j[2]))))))*(IKcos(j[3]))))+(((-0.0296775578626246)*(IKcos(j[0]))*(IKsin(j[1]))))+(((((((0.027349906265556)*(IKcos(j[1]))))+(((0.00322737586252209)*(IKsin(j[1]))))))*(IKsin(j[2]))*(IKsin(j[3]))))+(((((((0.00034914773956029)*(IKcos(j[1]))))+(((4.12005429258139e-5)*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((((((-4.94406515109767e-5)*(IKsin(j[1]))))+(((-0.000418977287472348)*(IKcos(j[1]))))))*(IKcos(j[3]))*(IKsin(j[2]))))+(((-0.00350204614869418)*(IKcos(j[1]))))+(((-0.00297932851012146)*(IKcos(j[2]))*(IKsin(j[0]))))+(((((((-0.231772624137478)*(IKcos(j[0]))*(IKcos(j[1]))))+(((-0.027349906265556)*(IKcos(j[0]))*(IKsin(j[1]))))))*(IKcos(j[3]))))+(((0.00516416941754386)*(IKsin(j[0]))))+(((((((0.027349906265556)*(IKsin(j[1]))))+(((-0.00322737586252209)*(IKcos(j[1]))))))*(IKcos(j[3]))))+(((0.99310950337382)*r22*(((((((((((((0.117190077688363)*(IKcos(j[0]))*(IKcos(j[1]))))+(((-0.99310950337382)*(IKcos(j[0]))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((IKcos(j[2]))*(IKsin(j[0]))))))*(IKsin(j[3]))))+(((((((0.117190077688363)*(IKcos(j[0]))*(IKsin(j[1]))))+(((0.99310950337382)*(IKcos(j[0]))*(IKcos(j[1]))))))*(IKcos(j[3]))))))))+(((((((-4.94406515109767e-5)*(IKcos(j[1]))))+(((0.000418977287472348)*(IKsin(j[1]))))))*(IKsin(j[3]))))+(((((((-0.000418977287472348)*(IKcos(j[0]))*(IKsin(j[1]))))+(((-0.00355055934848902)*(IKcos(j[0]))*(IKcos(j[1]))))))*(IKsin(j[3]))))+(((0.99310950337382)*r00*(((((((((((((-0.99310950337382)*(IKcos(j[0]))*(IKcos(j[1]))))+(((-0.117190077688363)*(IKcos(j[0]))*(IKsin(j[1]))))))*(IKsin(j[3]))))+(((((((((((0.117190077688363)*(IKcos(j[0]))*(IKcos(j[1]))))+(((-0.99310950337382)*(IKcos(j[0]))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((IKcos(j[2]))*(IKsin(j[0]))))))*(IKcos(j[3]))))))*(IKcos(j[4]))))+(((((((IKsin(j[0]))*(IKsin(j[2]))))+(((((((0.99310950337382)*(IKcos(j[0]))*(IKsin(j[1]))))+(((-0.117190077688363)*(IKcos(j[0]))*(IKcos(j[1]))))))*(IKcos(j[2]))))))*(IKsin(j[4]))))))))+(((0.0296775578626246)*(IKsin(j[1]))))+(((((((-0.233380733292848)*(IKcos(j[2]))*(IKsin(j[0]))))+(((0.99310950337382)*(((((-0.0275396682567654)*(IKcos(j[0]))*(IKcos(j[1]))))+(((0.233380733292848)*(IKcos(j[0]))*(IKsin(j[1]))))))*(IKsin(j[2]))))))*(IKsin(j[3]))))+(((-0.117190077688363)*r11*(((((((((-0.117190077688363)*(IKsin(j[1]))))+(((-0.99310950337382)*(IKcos(j[1]))))))*(IKcos(j[2]))*(IKcos(j[4]))))+(((((((((((0.99310950337382)*(IKsin(j[1]))))+(((-0.117190077688363)*(IKcos(j[1]))))))*(IKsin(j[3]))))+(((((((-0.117190077688363)*(IKsin(j[1]))))+(((-0.99310950337382)*(IKcos(j[1]))))))*(IKcos(j[3]))*(IKsin(j[2]))))))*(IKsin(j[4]))))))))+(((((((-0.00034914773956029)*(IKcos(j[0]))*(IKcos(j[1]))))+(((0.00295879945707419)*(IKcos(j[0]))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((-0.117190077688363)*r00*(((((((((((((0.117190077688363)*(IKcos(j[1]))))+(((-0.99310950337382)*(IKsin(j[1]))))))*(IKsin(j[3]))))+(((((((0.99310950337382)*(IKcos(j[1]))))+(((0.117190077688363)*(IKsin(j[1]))))))*(IKcos(j[3]))*(IKsin(j[2]))))))*(IKcos(j[4]))))+(((((((-0.117190077688363)*(IKsin(j[1]))))+(((-0.99310950337382)*(IKcos(j[1]))))))*(IKcos(j[2]))*(IKsin(j[4]))))))))+(((0.99310950337382)*r11*(((((((((((((-1.0)*(IKcos(j[2]))*(IKsin(j[0]))))+(((-1.0)*(((((0.117190077688363)*(IKcos(j[0]))*(IKcos(j[1]))))+(((-0.99310950337382)*(IKcos(j[0]))*(IKsin(j[1]))))))*(IKsin(j[2]))))))*(IKcos(j[3]))))+(((((((0.117190077688363)*(IKcos(j[0]))*(IKsin(j[1]))))+(((0.99310950337382)*(IKcos(j[0]))*(IKcos(j[1]))))))*(IKsin(j[3]))))))*(IKsin(j[4]))))+(((((((IKsin(j[0]))*(IKsin(j[2]))))+(((((((0.99310950337382)*(IKcos(j[0]))*(IKsin(j[1]))))+(((-0.117190077688363)*(IKcos(j[0]))*(IKcos(j[1]))))))*(IKcos(j[2]))))))*(IKcos(j[4]))))))))+(((-0.117190077688363)*r22*(((((((((0.99310950337382)*(IKcos(j[1]))))+(((0.117190077688363)*(IKsin(j[1]))))))*(IKsin(j[2]))*(IKsin(j[3]))))+(((((((0.99310950337382)*(IKsin(j[1]))))+(((-0.117190077688363)*(IKcos(j[1]))))))*(IKcos(j[3]))))))))+(((-0.251497953851306)*(IKcos(j[0]))*(IKcos(j[1])))));
}

IKFAST_API int GetNumFreeParameters() { return 2; }
IKFAST_API int* GetFreeParameters() { static int freeparams[] = {3, 4}; return freeparams; }
IKFAST_API int GetNumJoints() { return 5; }

IKFAST_API int GetIkRealSize() { return sizeof(IkReal); }

IKFAST_API int GetIkType() { return 0x3600000a; }

class IKSolver {
public:
IkReal j9,cj9,sj9,htj9,j9mul,j10,cj10,sj10,htj10,j10mul,j11,cj11,sj11,htj11,j11mul,j12,cj12,sj12,htj12,j13,cj13,sj13,htj13,new_r00,r00,rxp0_0,new_r01,r01,rxp0_1,new_r02,r02,rxp0_2,new_r10,r10,rxp1_0,new_r11,r11,rxp1_1,new_r12,r12,rxp1_2,new_r20,r20,rxp2_0,new_r21,r21,rxp2_1,new_r22,r22,rxp2_2,new_px,px,npx,new_py,py,npy,new_pz,pz,npz,pp;
unsigned char _ij9[2], _nj9,_ij10[2], _nj10,_ij11[2], _nj11,_ij12[2], _nj12,_ij13[2], _nj13;

IkReal j100, cj100, sj100;
unsigned char _ij100[2], _nj100;
bool ComputeIk(const IkReal* eetrans, const IkReal* eerot, const IkReal* pfree, IkSolutionListBase<IkReal>& solutions) {
j9=numeric_limits<IkReal>::quiet_NaN(); _ij9[0] = -1; _ij9[1] = -1; _nj9 = -1; j10=numeric_limits<IkReal>::quiet_NaN(); _ij10[0] = -1; _ij10[1] = -1; _nj10 = -1; j11=numeric_limits<IkReal>::quiet_NaN(); _ij11[0] = -1; _ij11[1] = -1; _nj11 = -1;  _ij12[0] = -1; _ij12[1] = -1; _nj12 = 0;  _ij13[0] = -1; _ij13[1] = -1; _nj13 = 0; 
for(int dummyiter = 0; dummyiter < 1; ++dummyiter) {
    solutions.Clear();
j12=pfree[0]; cj12=cos(pfree[0]); sj12=sin(pfree[0]);
j13=pfree[1]; cj13=cos(pfree[1]); sj13=sin(pfree[1]);
r00 = eerot[0];
r11 = eerot[4];
r22 = eerot[8];
px = eetrans[0]; py = eetrans[1]; pz = eetrans[2];

new_px=px;
new_py=((-0.0202504454245492)+(((-0.117190077688363)*py))+(((0.99310950337382)*pz)));
new_pz=((-0.171609322182996)+(((-0.117190077688363)*pz))+(((-0.99310950337382)*py)));
px = new_px; py = new_py; pz = new_pz;
pp=((px*px)+(py*py)+(pz*pz));
{
IkReal j11eval[2];
IkReal x22=cj13*cj13;
IkReal x23=cj12*cj12;
IkReal x24=r11*r11;
IkReal x25=sj12*sj12;
IkReal x26=r00*r00;
IkReal x27=sj13*sj13;
IkReal x28=(r11*sj13);
IkReal x29=(cj12*sj12);
IkReal x30=((666.666666666667)*cj12);
IkReal x31=(cj13*r00);
IkReal x32=((0.0104)*cj12);
IkReal x33=(r22*sj12);
IkReal x34=((222222.222222222)*x31);
IkReal x35=((111111.111111111)*x26);
IkReal x36=((111111.111111111)*x24);
IkReal x37=((800.0)*x23);
j11eval[0]=((IKabs(((-3.12e-5)+(((0.0104)*x33))+(((-1.0)*x28*x32))+(((3.744e-5)*cj12))+((x31*x32))+(((-0.002444)*sj12)))))+(IKabs(((((0.0104)*r00*sj13))+(((0.0104)*cj13*r11))))));
j11eval[1]=((1.0)+(((-188.0)*x29))+((x22*x23*x35))+((x27*x35))+((x23*x27*x36))+(((6136.11111111111)*x25))+(((-1.0)*x30*x31))+(((-1.0)*x28*x37))+(((-52222.2222222222)*r22*x25))+((x28*x30))+((x28*x34))+(((-666.666666666667)*x33))+(((-2.4)*cj12))+(((111111.111111111)*x25*(r22*r22)))+((x22*x36))+((r22*x29*x34))+(((800.0)*r22*x29))+(((1.44)*x23))+(((-222222.222222222)*r22*x28*x29))+(((156.666666666667)*sj12))+((x31*x37))+(((-52222.2222222222)*x29*x31))+(((52222.2222222222)*x28*x29))+(((-1.0)*x23*x28*x34)));
if( IKabs(j11eval[0]) < 0.0000010000000000  || IKabs(j11eval[1]) < 0.0000010000000000  )
{
continue; // no branches [j9, j10, j11]

} else
{
{
IkReal j11array[2], cj11array[2], sj11array[2];
bool j11valid[2]={false};
_nj11 = 2;
IkReal x38=(r11*sj13);
IkReal x39=((0.51)*sj12);
IkReal x40=((0.006)*cj12);
IkReal x41=(r22*sj12);
IkReal x42=(cj13*r00);
IkReal x43=((0.0104)*cj12);
IkReal x44=((((0.0104)*r00*sj13))+(((0.0104)*cj13*r11)));
IkReal x45=((-3.12e-5)+(((0.0104)*x41))+(((-1.0)*x38*x43))+((x42*x43))+(((3.744e-5)*cj12))+(((-0.002444)*sj12)));
CheckValue<IkReal> x48 = IKatan2WithCheck(IkReal(x45),IkReal(x44),IKFAST_ATAN2_MAGTHRESH);
if(!x48.valid){
continue;
}
IkReal x46=((1.0)*(x48.value));
if((((x44*x44)+(x45*x45))) < -0.00001)
continue;
CheckValue<IkReal> x49=IKPowWithIntegerCheck(IKabs(IKsqrt(((x44*x44)+(x45*x45)))),-1);
if(!x49.valid){
continue;
}
if( (((x49.value)*(((0.120299)+(((-1.0)*(px*px)))+(((-1.0)*x38*x39))+(r22*r22)+(r11*r11)+((x38*x40))+(((-0.0072)*x38))+((x39*x42))+(((-1.0)*x40*x42))+(((-0.51)*cj12*r22))+(((0.0072)*x42))+(((-0.006)*x41))+(r00*r00)+(((-0.47)*r22))+(((0.003246)*sj12))+(((-1.0)*(pz*pz)))+(((-1.0)*(py*py)))+(((0.1198284)*cj12)))))) < -1-IKFAST_SINCOS_THRESH || (((x49.value)*(((0.120299)+(((-1.0)*(px*px)))+(((-1.0)*x38*x39))+(r22*r22)+(r11*r11)+((x38*x40))+(((-0.0072)*x38))+((x39*x42))+(((-1.0)*x40*x42))+(((-0.51)*cj12*r22))+(((0.0072)*x42))+(((-0.006)*x41))+(r00*r00)+(((-0.47)*r22))+(((0.003246)*sj12))+(((-1.0)*(pz*pz)))+(((-1.0)*(py*py)))+(((0.1198284)*cj12)))))) > 1+IKFAST_SINCOS_THRESH )
    continue;
IkReal x47=IKasin(((x49.value)*(((0.120299)+(((-1.0)*(px*px)))+(((-1.0)*x38*x39))+(r22*r22)+(r11*r11)+((x38*x40))+(((-0.0072)*x38))+((x39*x42))+(((-1.0)*x40*x42))+(((-0.51)*cj12*r22))+(((0.0072)*x42))+(((-0.006)*x41))+(r00*r00)+(((-0.47)*r22))+(((0.003246)*sj12))+(((-1.0)*(pz*pz)))+(((-1.0)*(py*py)))+(((0.1198284)*cj12))))));
j11array[0]=((((-1.0)*x47))+(((-1.0)*x46)));
sj11array[0]=IKsin(j11array[0]);
cj11array[0]=IKcos(j11array[0]);
j11array[1]=((3.14159265358979)+(((-1.0)*x46))+x47);
sj11array[1]=IKsin(j11array[1]);
cj11array[1]=IKcos(j11array[1]);
if( j11array[0] > IKPI )
{
    j11array[0]-=IK2PI;
}
else if( j11array[0] < -IKPI )
{    j11array[0]+=IK2PI;
}
j11valid[0] = true;
if( j11array[1] > IKPI )
{
    j11array[1]-=IK2PI;
}
else if( j11array[1] < -IKPI )
{    j11array[1]+=IK2PI;
}
j11valid[1] = true;
for(int ij11 = 0; ij11 < 2; ++ij11)
{
if( !j11valid[ij11] )
{
    continue;
}
_ij11[0] = ij11; _ij11[1] = -1;
for(int iij11 = ij11+1; iij11 < 2; ++iij11)
{
if( j11valid[iij11] && IKabs(cj11array[ij11]-cj11array[iij11]) < IKFAST_SOLUTION_THRESH && IKabs(sj11array[ij11]-sj11array[iij11]) < IKFAST_SOLUTION_THRESH )
{
    j11valid[iij11]=false; _ij11[1] = iij11; break; 
}
}
j11 = j11array[ij11]; cj11 = cj11array[ij11]; sj11 = sj11array[ij11];

{
IkReal j9eval[2];
j9eval[0]=((px*px)+(py*py));
j9eval[1]=((IKabs(px))+(IKabs(py)));
if( IKabs(j9eval[0]) < 0.0000010000000000  || IKabs(j9eval[1]) < 0.0000010000000000  )
{
{
IkReal j9eval[4];
IkReal x50=px*px;
IkReal x51=py*py;
j9eval[0]=0.000106674583092381;
j9eval[1]=px;
j9eval[2]=(x51+x50);
j9eval[3]=((x50*x50)+((x50*x51)));
if( IKabs(j9eval[0]) < 0.0000010000000000  || IKabs(j9eval[1]) < 0.0000010000000000  || IKabs(j9eval[2]) < 0.0000010000000000  || IKabs(j9eval[3]) < 0.0000010000000000  )
{
{
IkReal j9eval[4];
IkReal x52=px*px;
IkReal x53=py*py;
j9eval[0]=1.48541690761868e-6;
j9eval[1]=px;
j9eval[2]=(x53+x52);
j9eval[3]=(((x52*x53))+(x52*x52));
if( IKabs(j9eval[0]) < 0.0000010000000000  || IKabs(j9eval[1]) < 0.0000010000000000  || IKabs(j9eval[2]) < 0.0000010000000000  || IKabs(j9eval[3]) < 0.0000010000000000  )
{
{
IkReal evalcond[1];
bool bgotonextstatement = true;
do
{
evalcond[0]=((px*px)+(py*py));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j10eval[2];
px=0;
py=0;
pp=pz*pz;
j10eval[0]=pz;
j10eval[1]=IKsign(pz);
if( IKabs(j10eval[0]) < 0.0000010000000000  || IKabs(j10eval[1]) < 0.0000010000000000  )
{
{
IkReal j10eval[2];
px=0;
py=0;
pp=pz*pz;
IkReal x54=(cj11*pz);
IkReal x55=(r00*sj13);
IkReal x56=(cj12*pz);
IkReal x57=((7.87490646429454e+16)*r11);
IkReal x58=(pz*sj11);
IkReal x59=(sj11*sj13);
IkReal x60=((2353.98556241903)*r11);
IkReal x61=(pz*sj12);
IkReal x62=(r11*sj13);
IkReal x63=(cj13*r00);
IkReal x64=(sj12*x58);
IkReal x65=(sj11*x63);
j10eval[0]=((((-2353.98556241903)*r22*x64))+(((-277.777777777778)*r22*x56))+(((553.186607168473)*x64))+(((-8.47434802470852)*sj11*x56))+(((-2353.98556241903)*x56*x65))+((x56*x59*x60))+(((70.8333333333333)*pz))+(((277.777777777778)*x61*x63))+(((65.2777777777778)*x56))+x61+(((-277.777777777778)*x61*x62))+(((7.0619566872571)*x58))+((cj13*x54*x60))+(((2353.98556241903)*x54*x55)));
j10eval[1]=IKsign((((cj13*x54*x57))+(((1.85060301910922e+16)*x64))+(((9.29263990732243e+15)*x61*x63))+(((-7.87490646429454e+16)*x56*x65))+(((33453503666360.8)*x61))+(((2.18377037822077e+15)*x56))+(((236247193928836.0)*x58))+(((-9.29263990732243e+15)*r22*x56))+(((-283496632714604.0)*sj11*x56))+((x56*x57*x59))+(((-9.29263990732243e+15)*x61*x62))+(((7.87490646429454e+16)*x54*x55))+(((2.36962317636722e+15)*pz))+(((-7.87490646429454e+16)*r22*x64))));
if( IKabs(j10eval[0]) < 0.0000010000000000  || IKabs(j10eval[1]) < 0.0000010000000000  )
{
{
IkReal j10eval[2];
px=0;
py=0;
pp=pz*pz;
IkReal x66=(cj13*r11);
IkReal x67=(pz*sj11);
IkReal x68=(r00*sj13);
IkReal x69=(pz*sj12);
IkReal x70=(r22*sj12);
IkReal x71=(r11*sj13);
IkReal x72=(cj13*r00);
IkReal x73=(cj12*pz);
IkReal x74=((333.333333333333)*cj11*pz);
IkReal x75=(r22*x73);
IkReal x76=(cj12*x72);
IkReal x77=((9.29263990732243e+15)*cj11*pz);
j10eval[0]=((((2824.78267490284)*x69*x72))+(((-1.0)*x66*x74))+(((10.1692176296502)*x69))+(((-333.333333333333)*cj12*x67*x71))+(((-2824.78267490284)*x69*x71))+(((333.333333333333)*x67*x70))+(((333.333333333333)*x67*x76))+(((663.823928602168)*x73))+(((720.319582100224)*pz))+(((-2824.78267490284)*x75))+(((-78.3333333333333)*sj12*x67))+(((1.2)*cj12*x67))+(((-1.0)*x68*x74))+(((-1.0)*x67)));
j10eval[1]=IKsign(((((7.87490646429454e+16)*x69*x72))+(((-7.87490646429454e+16)*x75))+(((33453503666360.8)*cj12*x67))+(((-1.0)*x66*x77))+(((283496632714604.0)*x69))+(((2.00810114839511e+16)*pz))+(((-7.87490646429454e+16)*x69*x71))+(((-9.29263990732243e+15)*cj12*x67*x71))+(((9.29263990732243e+15)*x67*x70))+(((9.29263990732243e+15)*x67*x76))+(((1.85060301910922e+16)*x73))+(((-27877919721967.3)*x67))+(((-1.0)*x68*x77))+(((-2.18377037822077e+15)*sj12*x67))));
if( IKabs(j10eval[0]) < 0.0000010000000000  || IKabs(j10eval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[1];
bool bgotonextstatement = true;
do
{
evalcond[0]=IKabs(pz);
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j10array[2], cj10array[2], sj10array[2];
bool j10valid[2]={false};
_nj10 = 2;
IkReal x78=((1.0)*cj12);
IkReal x79=(cj12*sj11);
IkReal x80=(cj13*r00);
IkReal x81=(r11*sj13);
IkReal x82=(sj11*sj12);
CheckValue<IkReal> x84 = IKatan2WithCheck(IkReal(((((-0.0036)*x79))+((x79*x81))+(((0.003)*sj11))+(((0.235)*x82))+(((-1.0)*r22*x82))+((cj11*cj13*r11))+((cj11*r00*sj13))+(((-1.0)*sj11*x78*x80)))),IkReal(((0.255)+(((-1.0)*r22*x78))+((sj12*x80))+(((-1.0)*sj12*x81))+(((0.235)*cj12))+(((0.0036)*sj12)))),IKFAST_ATAN2_MAGTHRESH);
if(!x84.valid){
continue;
}
IkReal x83=x84.value;
j10array[0]=((-1.0)*x83);
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
j10array[1]=((3.14159265358979)+(((-1.0)*x83)));
sj10array[1]=IKsin(j10array[1]);
cj10array[1]=IKcos(j10array[1]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
if( j10array[1] > IKPI )
{
    j10array[1]-=IK2PI;
}
else if( j10array[1] < -IKPI )
{    j10array[1]+=IK2PI;
}
j10valid[1] = true;
for(int ij10 = 0; ij10 < 2; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 2; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[1];
IkReal x85=IKsin(j10);
IkReal x86=IKcos(j10);
IkReal x87=(cj13*r00);
IkReal x88=(cj12*x86);
IkReal x89=(sj11*x85);
IkReal x90=((1.0)*r11*sj13);
IkReal x91=(sj12*x86);
IkReal x92=((1.0)*cj11*x85);
evalcond[0]=(((x87*x91))+(((-0.235)*sj12*x89))+(((0.235)*x88))+(((-1.0)*x90*x91))+(((0.0036)*x91))+(((-1.0)*r22*x88))+((r22*sj12*x89))+(((0.255)*x86))+(((-1.0)*r00*sj13*x92))+(((-1.0)*cj12*x89*x90))+((cj12*x87*x89))+(((-1.0)*cj13*r11*x92))+(((-0.003)*x89))+(((0.0036)*cj12*x89)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j9array[1], cj9array[1], sj9array[1];
bool j9valid[1]={false};
_nj9 = 1;
j9array[0]=0;
sj9array[0]=IKsin(j9array[0]);
cj9array[0]=IKcos(j9array[0]);
if( j9array[0] > IKPI )
{
    j9array[0]-=IK2PI;
}
else if( j9array[0] < -IKPI )
{    j9array[0]+=IK2PI;
}
j9valid[0] = true;
for(int ij9 = 0; ij9 < 1; ++ij9)
{
if( !j9valid[ij9] )
{
    continue;
}
_ij9[0] = ij9; _ij9[1] = -1;
for(int iij9 = ij9+1; iij9 < 1; ++iij9)
{
if( j9valid[iij9] && IKabs(cj9array[ij9]-cj9array[iij9]) < IKFAST_SOLUTION_THRESH && IKabs(sj9array[ij9]-sj9array[iij9]) < IKFAST_SOLUTION_THRESH )
{
    j9valid[iij9]=false; _ij9[1] = iij9; break; 
}
}
j9 = j9array[ij9]; cj9 = cj9array[ij9]; sj9 = sj9array[ij9];

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(5);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j9, j10]

}
} while(0);
if( bgotonextstatement )
{
}
}
}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
CheckValue<IkReal> x93 = IKatan2WithCheck(IkReal(((-5.15721428390906e+15)+(((-7.92954496713775e+16)*(cj13*cj13)*(r00*r00)))+(((1.58590899342755e+17)*cj12*cj13*r00*r22*sj12))+(((570927237633918.0)*cj13*r00*(cj12*cj12)))+(((7.92954496713775e+16)*(cj12*cj12)*(r11*r11)))+(((-7.92954496713775e+16)*(cj12*cj12)*(cj13*cj13)*(r11*r11)))+(((1.0890051926691e+15)*(pz*pz)))+(((-4.04406793324025e+16)*cj13*r00*sj12))+(((570927237633918.0)*cj12*r22*sj12))+(((-570927237633918.0)*r11*sj13*(cj12*cj12)))+(((4.04406793324025e+16)*r11*sj12*sj13))+(((3.72688613455474e+16)*r22*(cj12*cj12)))+(((3.72688613455474e+16)*cj12*r11*sj12*sj13))+(((-145586445596649.0)*sj12))+(((-7.92954496713775e+16)*(r11*r11)))+(((-570927237633918.0)*cj13*r00))+(((1.58590899342755e+17)*cj13*r00*r11*sj13))+(((-3.72688613455474e+16)*cj12*cj13*r00*sj12))+(((-7.92954496713775e+16)*(cj12*cj12)*(r22*r22)))+(((-134167900843971.0)*cj12*sj12))+(((-4.37806353907408e+15)*(cj12*cj12)))+(((570927237633918.0)*r11*sj13))+(((4.04406793324025e+16)*cj12*r22))+(((-1.58590899342755e+17)*cj13*r00*r11*sj13*(cj12*cj12)))+(((7.92954496713775e+16)*(cj12*cj12)*(cj13*cj13)*(r00*r00)))+(((-9.50355964311459e+15)*cj12))+(((-1.58590899342755e+17)*cj12*r11*r22*sj12*sj13))+(((7.92954496713775e+16)*(cj13*cj13)*(r11*r11))))),IkReal(((((2.02203396662013e+16)*r22*sj11*sj12))+(((-127744969420589.0)*sj11))+(((134167900843971.0)*sj11*(cj12*cj12)))+(((-1.86344306727737e+16)*cj11*cj12*cj13*r11))+(((-2.02203396662013e+16)*cj11*cj13*r11))+(((9.22860900339272e+15)*(pz*pz)))+(((-7.92954496713775e+16)*cj11*cj13*sj12*sj13*(r00*r00)))+(((1.86344306727737e+16)*r11*sj11*sj13))+(((-570927237633918.0)*cj12*r11*sj11*sj12*sj13))+(((-3.72688613455474e+16)*r11*sj11*sj13*(cj12*cj12)))+(((-285463618816959.0)*cj11*r00*sj12*sj13))+(((-1.58590899342755e+17)*cj12*cj13*r00*r11*sj11*sj12*sj13))+(((-7.92954496713775e+16)*cj12*sj11*sj12*(cj13*cj13)*(r11*r11)))+(((-570927237633918.0)*r22*sj11*(cj12*cj12)))+(((237886349014132.0)*cj12*r22*sj11))+(((-237886349014132.0)*cj13*r00*sj11*sj12))+(((-285463618816959.0)*cj11*cj13*r11*sj12))+(((7.92954496713775e+16)*cj11*r00*r11*sj12))+(((16889930780003.4)*cj12*sj11))+(((-4.75263621241375e+15)*sj11*sj12))+(((7.92954496713775e+16)*cj13*r00*r22*sj11))+(((7.92954496713775e+16)*cj11*cj13*sj12*sj13*(r11*r11)))+(((-4.37806353907408e+15)*cj12*sj11*sj12))+(((-7.92954496713775e+16)*r11*r22*sj11*sj13))+(((-2.02203396662013e+16)*cj11*r00*sj13))+(((-1.58590899342755e+17)*cj13*r00*r22*sj11*(cj12*cj12)))+(((7.92954496713775e+16)*cj11*cj12*r00*r22*sj13))+(((3.72688613455474e+16)*cj12*r22*sj11*sj12))+(((-2.02203396662013e+16)*cj12*r11*sj11*sj13))+(((-1.86344306727737e+16)*cj11*cj12*r00*sj13))+(((1.58590899342755e+17)*r11*r22*sj11*sj13*(cj12*cj12)))+(((570927237633918.0)*cj12*cj13*r00*sj11*sj12))+(((7.92954496713775e+16)*cj12*sj11*sj12*(cj13*cj13)*(r00*r00)))+(((-7.92954496713775e+16)*cj12*sj11*sj12*(r22*r22)))+(((2.02203396662013e+16)*cj12*cj13*r00*sj11))+(((285463618816959.0)*r22*sj11))+(((-1.58590899342755e+17)*cj11*r00*r11*sj12*(cj13*cj13)))+(((3.72688613455474e+16)*cj13*r00*sj11*(cj12*cj12)))+(((7.92954496713775e+16)*cj12*sj11*sj12*(r11*r11)))+(((7.92954496713775e+16)*cj11*cj12*cj13*r11*r22))+(((237886349014132.0)*r11*sj11*sj12*sj13))+(((-1.86344306727737e+16)*cj13*r00*sj11)))),IKFAST_ATAN2_MAGTHRESH);
if(!x93.valid){
continue;
}
CheckValue<IkReal> x94=IKPowWithIntegerCheck(IKsign(((((33453503666360.8)*cj12*pz*sj11))+(((-7.87490646429454e+16)*pz*r11*sj12*sj13))+(((-2.18377037822077e+15)*pz*sj11*sj12))+(((-7.87490646429454e+16)*cj12*pz*r22))+(((9.29263990732243e+15)*cj12*cj13*pz*r00*sj11))+(((-9.29263990732243e+15)*cj11*cj13*pz*r11))+(((9.29263990732243e+15)*pz*r22*sj11*sj12))+(((2.00810114839511e+16)*pz))+(((283496632714604.0)*pz*sj12))+(((7.87490646429454e+16)*cj13*pz*r00*sj12))+(((1.85060301910922e+16)*cj12*pz))+(((-9.29263990732243e+15)*cj12*pz*r11*sj11*sj13))+(((-9.29263990732243e+15)*cj11*pz*r00*sj13))+(((-27877919721967.3)*pz*sj11)))),-1);
if(!x94.valid){
continue;
}
j10array[0]=((-1.5707963267949)+(x93.value)+(((1.5707963267949)*(x94.value))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[5];
IkReal x95=IKsin(j10);
IkReal x96=IKcos(j10);
IkReal x97=(sj11*sj12);
IkReal x98=((0.235)*cj12);
IkReal x99=((1.0)*r22);
IkReal x100=(cj13*r00);
IkReal x101=((1.0)*r11);
IkReal x102=(sj12*sj13);
IkReal x103=(cj11*cj13);
IkReal x104=((0.0036)*sj12);
IkReal x105=((0.117190077688363)*pz);
IkReal x106=(cj12*sj11);
IkReal x107=(cj12*r11*sj13);
IkReal x108=((1.0)*x95);
IkReal x109=(cj11*r00*sj13);
IkReal x110=(sj12*x95);
IkReal x111=(pz*x95);
IkReal x112=(sj11*x95);
IkReal x113=(sj11*x96);
IkReal x114=(pz*x96);
evalcond[0]=((0.255)+(((-1.0)*x101*x102))+(((0.99310950337382)*x111))+x104+(((-1.0)*x105*x96))+x98+((sj12*x100))+(((-1.0)*cj12*x99)));
evalcond[1]=((((-1.0)*x101*x103))+(((-0.99310950337382)*x114))+(((-1.0)*x105*x95))+(((-0.235)*x97))+(((-0.003)*sj11))+(((0.0036)*x106))+(((-1.0)*sj13*x101*x106))+((r22*x97))+(((-1.0)*x109))+((x100*x106)));
evalcond[2]=((-0.00980508)+(((-0.006)*r22*sj12))+(((0.006)*x107))+(r22*r22)+(r11*r11)+(((-0.506485846720648)*x111))+(((-0.006)*cj12*x100))+(r00*r00)+(((-0.0072)*r11*sj13))+(((0.0597669396210653)*x114))+(((-0.47)*r22))+(((-1.0)*(pz*pz)))+(((0.00141)*sj12))+(((-2.16e-5)*cj12))+(((0.0072)*x100)));
evalcond[3]=((((-1.0)*cj12*x95*x99))+(((0.003)*x113))+((r11*sj13*x106*x96))+((x100*x110))+(((0.255)*x95))+(((-1.0)*x100*x106*x96))+(((-1.0)*x96*x97*x99))+(((-1.0)*x101*x102*x95))+((r11*x103*x96))+(((0.99310950337382)*pz))+(((-0.0036)*x106*x96))+((x109*x96))+((x95*x98))+(((0.235)*x96*x97))+((x104*x95)));
evalcond[4]=(((x96*x98))+(((-1.0)*sj13*x101*x106*x95))+(((-0.003)*x112))+(((-1.0)*x105))+(((-1.0)*cj12*x96*x99))+(((0.255)*x96))+((sj12*x100*x96))+((x100*x106*x95))+((r22*x95*x97))+(((-0.235)*x95*x97))+(((-1.0)*x101*x102*x96))+(((-1.0)*x101*x103*x95))+(((-1.0)*x108*x109))+(((0.0036)*x106*x95))+((x104*x96)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j9array[1], cj9array[1], sj9array[1];
bool j9valid[1]={false};
_nj9 = 1;
j9array[0]=0;
sj9array[0]=IKsin(j9array[0]);
cj9array[0]=IKcos(j9array[0]);
if( j9array[0] > IKPI )
{
    j9array[0]-=IK2PI;
}
else if( j9array[0] < -IKPI )
{    j9array[0]+=IK2PI;
}
j9valid[0] = true;
for(int ij9 = 0; ij9 < 1; ++ij9)
{
if( !j9valid[ij9] )
{
    continue;
}
_ij9[0] = ij9; _ij9[1] = -1;
for(int iij9 = ij9+1; iij9 < 1; ++iij9)
{
if( j9valid[iij9] && IKabs(cj9array[ij9]-cj9array[iij9]) < IKFAST_SOLUTION_THRESH && IKabs(sj9array[ij9]-sj9array[iij9]) < IKFAST_SOLUTION_THRESH )
{
    j9valid[iij9]=false; _ij9[1] = iij9; break; 
}
}
j9 = j9array[ij9]; cj9 = cj9array[ij9]; sj9 = sj9array[ij9];

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(5);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
CheckValue<IkReal> x115 = IKatan2WithCheck(IkReal(((((2.02203396662013e+16)*r22*sj11*sj12))+(((-127744969420589.0)*sj11))+(((134167900843971.0)*sj11*(cj12*cj12)))+(((-1.86344306727737e+16)*cj11*cj12*cj13*r11))+(((-2.02203396662013e+16)*cj11*cj13*r11))+(((-7.92954496713775e+16)*cj11*cj13*sj12*sj13*(r00*r00)))+(((1.86344306727737e+16)*r11*sj11*sj13))+(((-570927237633918.0)*cj12*r11*sj11*sj12*sj13))+(((-3.72688613455474e+16)*r11*sj11*sj13*(cj12*cj12)))+(((-285463618816959.0)*cj11*r00*sj12*sj13))+(((-1.58590899342755e+17)*cj12*cj13*r00*r11*sj11*sj12*sj13))+(((-7.92954496713775e+16)*cj12*sj11*sj12*(cj13*cj13)*(r11*r11)))+(((-570927237633918.0)*r22*sj11*(cj12*cj12)))+(((237886349014132.0)*cj12*r22*sj11))+(((-237886349014132.0)*cj13*r00*sj11*sj12))+(((-285463618816959.0)*cj11*cj13*r11*sj12))+(((7.92954496713775e+16)*cj11*r00*r11*sj12))+(((16889930780003.4)*cj12*sj11))+(((-4.75263621241375e+15)*sj11*sj12))+(((7.92954496713775e+16)*cj13*r00*r22*sj11))+(((7.92954496713775e+16)*cj11*cj13*sj12*sj13*(r11*r11)))+(((-4.37806353907408e+15)*cj12*sj11*sj12))+(((-7.92954496713775e+16)*r11*r22*sj11*sj13))+(((-2.02203396662013e+16)*cj11*r00*sj13))+(((-1.58590899342755e+17)*cj13*r00*r22*sj11*(cj12*cj12)))+(((7.92954496713775e+16)*cj11*cj12*r00*r22*sj13))+(((3.72688613455474e+16)*cj12*r22*sj11*sj12))+(((-2.02203396662013e+16)*cj12*r11*sj11*sj13))+(((-1.86344306727737e+16)*cj11*cj12*r00*sj13))+(((1.58590899342755e+17)*r11*r22*sj11*sj13*(cj12*cj12)))+(((570927237633918.0)*cj12*cj13*r00*sj11*sj12))+(((7.92954496713775e+16)*cj12*sj11*sj12*(cj13*cj13)*(r00*r00)))+(((-7.92954496713775e+16)*cj12*sj11*sj12*(r22*r22)))+(((2.02203396662013e+16)*cj12*cj13*r00*sj11))+(((285463618816959.0)*r22*sj11))+(((-1.58590899342755e+17)*cj11*r00*r11*sj12*(cj13*cj13)))+(((-9.22860900339272e+15)*(pz*pz)))+(((3.72688613455474e+16)*cj13*r00*sj11*(cj12*cj12)))+(((7.92954496713775e+16)*cj12*sj11*sj12*(r11*r11)))+(((7.92954496713775e+16)*cj11*cj12*cj13*r11*r22))+(((237886349014132.0)*r11*sj11*sj12*sj13))+(((-1.86344306727737e+16)*cj13*r00*sj11)))),IkReal(((5.15721428390906e+15)+(((134167900843971.0)*cj12*sj12))+(((-3.72688613455474e+16)*r22*(cj12*cj12)))+(((7.92954496713775e+16)*(r11*r11)))+(((-4.04406793324025e+16)*cj12*r22))+(((3.72688613455474e+16)*cj12*cj13*r00*sj12))+(((-570927237633918.0)*cj12*r22*sj12))+(((-570927237633918.0)*r11*sj13))+(((145586445596649.0)*sj12))+(((1.58590899342755e+17)*cj13*r00*r11*sj13*(cj12*cj12)))+(((-7.92954496713775e+16)*(cj12*cj12)*(cj13*cj13)*(r00*r00)))+(((-7.92954496713775e+16)*(cj13*cj13)*(r11*r11)))+(((-1.58590899342755e+17)*cj12*cj13*r00*r22*sj12))+(((-7.92954496713775e+16)*(cj12*cj12)*(r11*r11)))+(((4.37806353907408e+15)*(cj12*cj12)))+(((-3.72688613455474e+16)*cj12*r11*sj12*sj13))+(((-4.04406793324025e+16)*r11*sj12*sj13))+(((7.92954496713775e+16)*(cj12*cj12)*(cj13*cj13)*(r11*r11)))+(((-1.58590899342755e+17)*cj13*r00*r11*sj13))+(((4.04406793324025e+16)*cj13*r00*sj12))+(((-570927237633918.0)*cj13*r00*(cj12*cj12)))+(((7.92954496713775e+16)*(cj13*cj13)*(r00*r00)))+(((570927237633918.0)*r11*sj13*(cj12*cj12)))+(((7.92954496713775e+16)*(cj12*cj12)*(r22*r22)))+(((-7.82064444787084e+16)*(pz*pz)))+(((1.58590899342755e+17)*cj12*r11*r22*sj12*sj13))+(((9.50355964311459e+15)*cj12))+(((570927237633918.0)*cj13*r00)))),IKFAST_ATAN2_MAGTHRESH);
if(!x115.valid){
continue;
}
CheckValue<IkReal> x116=IKPowWithIntegerCheck(IKsign(((((1.85060301910922e+16)*pz*sj11*sj12))+(((-7.87490646429454e+16)*pz*r22*sj11*sj12))+(((236247193928836.0)*pz*sj11))+(((-9.29263990732243e+15)*cj12*pz*r22))+(((33453503666360.8)*pz*sj12))+(((7.87490646429454e+16)*cj12*pz*r11*sj11*sj13))+(((2.18377037822077e+15)*cj12*pz))+(((7.87490646429454e+16)*cj11*cj13*pz*r11))+(((9.29263990732243e+15)*cj13*pz*r00*sj12))+(((7.87490646429454e+16)*cj11*pz*r00*sj13))+(((-9.29263990732243e+15)*pz*r11*sj12*sj13))+(((-283496632714604.0)*cj12*pz*sj11))+(((2.36962317636722e+15)*pz))+(((-7.87490646429454e+16)*cj12*cj13*pz*r00*sj11)))),-1);
if(!x116.valid){
continue;
}
j10array[0]=((-1.5707963267949)+(x115.value)+(((1.5707963267949)*(x116.value))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[5];
IkReal x117=IKsin(j10);
IkReal x118=IKcos(j10);
IkReal x119=(sj11*sj12);
IkReal x120=((0.235)*cj12);
IkReal x121=((1.0)*r22);
IkReal x122=(cj13*r00);
IkReal x123=((1.0)*r11);
IkReal x124=(sj12*sj13);
IkReal x125=(cj11*cj13);
IkReal x126=((0.0036)*sj12);
IkReal x127=((0.117190077688363)*pz);
IkReal x128=(cj12*sj11);
IkReal x129=(cj12*r11*sj13);
IkReal x130=((1.0)*x117);
IkReal x131=(cj11*r00*sj13);
IkReal x132=(sj12*x117);
IkReal x133=(pz*x117);
IkReal x134=(sj11*x117);
IkReal x135=(sj11*x118);
IkReal x136=(pz*x118);
evalcond[0]=((0.255)+(((-1.0)*x118*x127))+(((-1.0)*x123*x124))+(((0.99310950337382)*x133))+x126+x120+((sj12*x122))+(((-1.0)*cj12*x121)));
evalcond[1]=((((-0.235)*x119))+(((-1.0)*x123*x125))+((r22*x119))+(((-0.99310950337382)*x136))+((x122*x128))+(((-1.0)*x117*x127))+(((0.0036)*x128))+(((-1.0)*x131))+(((-0.003)*sj11))+(((-1.0)*sj13*x123*x128)));
evalcond[2]=((-0.00980508)+(((-0.006)*r22*sj12))+(((0.0072)*x122))+(((-0.506485846720648)*x133))+(r22*r22)+(r11*r11)+(((0.0597669396210653)*x136))+(((-0.006)*cj12*x122))+(r00*r00)+(((-0.0072)*r11*sj13))+(((-0.47)*r22))+(((-1.0)*(pz*pz)))+(((0.00141)*sj12))+(((-2.16e-5)*cj12))+(((0.006)*x129)));
evalcond[3]=(((x117*x126))+((x117*x120))+(((-1.0)*cj12*x117*x121))+(((0.235)*x118*x119))+(((0.003)*x135))+(((-1.0)*x118*x119*x121))+((r11*sj13*x118*x128))+((x122*x132))+((r11*x118*x125))+(((-1.0)*x117*x123*x124))+(((0.99310950337382)*pz))+(((-1.0)*x118*x122*x128))+(((0.255)*x117))+((x118*x131))+(((-0.0036)*x118*x128)));
evalcond[4]=((((-1.0)*x118*x123*x124))+(((-0.235)*x117*x119))+(((-1.0)*x127))+((x117*x122*x128))+(((0.0036)*x117*x128))+(((-1.0)*cj12*x118*x121))+(((-1.0)*x117*x123*x125))+((r22*x117*x119))+(((-1.0)*sj13*x117*x123*x128))+(((0.255)*x118))+((x118*x120))+((x118*x126))+(((-1.0)*x130*x131))+(((-0.003)*x134))+((sj12*x118*x122)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j9array[1], cj9array[1], sj9array[1];
bool j9valid[1]={false};
_nj9 = 1;
j9array[0]=0;
sj9array[0]=IKsin(j9array[0]);
cj9array[0]=IKcos(j9array[0]);
if( j9array[0] > IKPI )
{
    j9array[0]-=IK2PI;
}
else if( j9array[0] < -IKPI )
{    j9array[0]+=IK2PI;
}
j9valid[0] = true;
for(int ij9 = 0; ij9 < 1; ++ij9)
{
if( !j9valid[ij9] )
{
    continue;
}
_ij9[0] = ij9; _ij9[1] = -1;
for(int iij9 = ij9+1; iij9 < 1; ++iij9)
{
if( j9valid[iij9] && IKabs(cj9array[ij9]-cj9array[iij9]) < IKFAST_SOLUTION_THRESH && IKabs(sj9array[ij9]-sj9array[iij9]) < IKFAST_SOLUTION_THRESH )
{
    j9valid[iij9]=false; _ij9[1] = iij9; break; 
}
}
j9 = j9array[ij9]; cj9 = cj9array[ij9]; sj9 = sj9array[ij9];

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(5);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x137=((21629991710.9083)*r11);
IkReal x138=(sj12*sj13);
IkReal x139=((183300077529.798)*r22);
IkReal x140=(cj12*sj11);
IkReal x141=(sj11*sj12);
IkReal x142=(cj11*cj13);
IkReal x143=((21629991710.9083)*r22);
IkReal x144=((183300077529.798)*r11);
IkReal x145=((183300077529.798)*cj13*r00);
IkReal x146=(cj11*r00*sj13);
IkReal x147=((21629991710.9083)*cj13*r00);
CheckValue<IkReal> x148 = IKatan2WithCheck(IkReal(((-46741519770.0984)+((x140*x147))+(((-1.0)*x137*x142))+(((-659880279.107271)*sj12))+(((77867970.1592699)*x140))+((x138*x144))+(((-64889975.1327249)*sj11))+((cj12*x139))+((x141*x143))+(((-43075518219.5024)*cj12))+(((-5083048052.06345)*x141))+(((-21629991710.9083)*x146))+(((-1.0)*sj13*x137*x140))+(((-1.0)*sj12*x145)))),IkReal(((5515647886.28162)+((x140*x145))+(((77867970.1592699)*sj12))+(((-549900232.589393)*sj11))+(((-1.0)*x142*x144))+(((659880279.107271)*x140))+(((-1.0)*x137*x138))+(((5083048052.06345)*cj12))+(((-183300077529.798)*x146))+((sj12*x147))+(((-43075518219.5024)*x141))+(((-1.0)*sj13*x140*x144))+(((-1.0)*cj12*x143))+((x139*x141)))),IKFAST_ATAN2_MAGTHRESH);
if(!x148.valid){
continue;
}
CheckValue<IkReal> x149=IKPowWithIntegerCheck(IKsign(pz),-1);
if(!x149.valid){
continue;
}
j10array[0]=((-1.5707963267949)+(x148.value)+(((1.5707963267949)*(x149.value))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[5];
IkReal x150=IKsin(j10);
IkReal x151=IKcos(j10);
IkReal x152=(sj11*sj12);
IkReal x153=((0.235)*cj12);
IkReal x154=((1.0)*r22);
IkReal x155=(cj13*r00);
IkReal x156=((1.0)*r11);
IkReal x157=(sj12*sj13);
IkReal x158=(cj11*cj13);
IkReal x159=((0.0036)*sj12);
IkReal x160=((0.117190077688363)*pz);
IkReal x161=(cj12*sj11);
IkReal x162=(cj12*r11*sj13);
IkReal x163=((1.0)*x150);
IkReal x164=(cj11*r00*sj13);
IkReal x165=(sj12*x150);
IkReal x166=(pz*x150);
IkReal x167=(sj11*x150);
IkReal x168=(sj11*x151);
IkReal x169=(pz*x151);
evalcond[0]=((0.255)+x153+x159+(((-1.0)*x151*x160))+((sj12*x155))+(((0.99310950337382)*x166))+(((-1.0)*x156*x157))+(((-1.0)*cj12*x154)));
evalcond[1]=((((-0.99310950337382)*x169))+(((-0.235)*x152))+(((-1.0)*x150*x160))+(((-1.0)*x164))+((x155*x161))+(((-1.0)*x156*x158))+(((-0.003)*sj11))+((r22*x152))+(((0.0036)*x161))+(((-1.0)*sj13*x156*x161)));
evalcond[2]=((-0.00980508)+(((-0.006)*r22*sj12))+(((0.0072)*x155))+(r22*r22)+(((0.006)*x162))+(r11*r11)+(r00*r00)+(((-0.506485846720648)*x166))+(((-0.0072)*r11*sj13))+(((-0.006)*cj12*x155))+(((-0.47)*r22))+(((0.0597669396210653)*x169))+(((-1.0)*(pz*pz)))+(((0.00141)*sj12))+(((-2.16e-5)*cj12)));
evalcond[3]=((((-1.0)*x150*x156*x157))+(((0.255)*x150))+(((0.235)*x151*x152))+((r11*x151*x158))+(((-0.0036)*x151*x161))+((x151*x164))+((x150*x159))+((x150*x153))+(((-1.0)*x151*x155*x161))+((x155*x165))+(((0.99310950337382)*pz))+(((-1.0)*x151*x152*x154))+(((-1.0)*cj12*x150*x154))+(((0.003)*x168))+((r11*sj13*x151*x161)));
evalcond[4]=((((-1.0)*x150*x156*x158))+(((0.255)*x151))+(((-1.0)*x160))+(((-0.003)*x167))+(((-1.0)*x163*x164))+((r22*x150*x152))+(((-1.0)*cj12*x151*x154))+((x151*x153))+((x151*x159))+(((-1.0)*x151*x156*x157))+((sj12*x151*x155))+(((-1.0)*sj13*x150*x156*x161))+(((-0.235)*x150*x152))+(((0.0036)*x150*x161))+((x150*x155*x161)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j9array[1], cj9array[1], sj9array[1];
bool j9valid[1]={false};
_nj9 = 1;
j9array[0]=0;
sj9array[0]=IKsin(j9array[0]);
cj9array[0]=IKcos(j9array[0]);
if( j9array[0] > IKPI )
{
    j9array[0]-=IK2PI;
}
else if( j9array[0] < -IKPI )
{    j9array[0]+=IK2PI;
}
j9valid[0] = true;
for(int ij9 = 0; ij9 < 1; ++ij9)
{
if( !j9valid[ij9] )
{
    continue;
}
_ij9[0] = ij9; _ij9[1] = -1;
for(int iij9 = ij9+1; iij9 < 1; ++iij9)
{
if( j9valid[iij9] && IKabs(cj9array[ij9]-cj9array[iij9]) < IKFAST_SOLUTION_THRESH && IKabs(sj9array[ij9]-sj9array[iij9]) < IKFAST_SOLUTION_THRESH )
{
    j9valid[iij9]=false; _ij9[1] = iij9; break; 
}
}
j9 = j9array[ij9]; cj9 = cj9array[ij9]; sj9 = sj9array[ij9];

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(5);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((IKabs(px))+(IKabs(py)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j10eval[2];
px=0;
py=0;
pp=pz*pz;
j10eval[0]=pz;
j10eval[1]=IKsign(pz);
if( IKabs(j10eval[0]) < 0.0000010000000000  || IKabs(j10eval[1]) < 0.0000010000000000  )
{
{
IkReal j10eval[2];
px=0;
py=0;
pp=pz*pz;
IkReal x170=(cj11*pz);
IkReal x171=(r00*sj13);
IkReal x172=(cj12*pz);
IkReal x173=((7.87490646429454e+16)*r11);
IkReal x174=(pz*sj11);
IkReal x175=(sj11*sj13);
IkReal x176=((2353.98556241903)*r11);
IkReal x177=(pz*sj12);
IkReal x178=(r11*sj13);
IkReal x179=(cj13*r00);
IkReal x180=(sj12*x174);
IkReal x181=(sj11*x179);
j10eval[0]=((((-8.47434802470852)*sj11*x172))+(((-277.777777777778)*r22*x172))+(((-2353.98556241903)*r22*x180))+(((-2353.98556241903)*x172*x181))+(((-277.777777777778)*x177*x178))+(((70.8333333333333)*pz))+x177+(((7.0619566872571)*x174))+((x172*x175*x176))+((cj13*x170*x176))+(((277.777777777778)*x177*x179))+(((553.186607168473)*x180))+(((2353.98556241903)*x170*x171))+(((65.2777777777778)*x172)));
j10eval[1]=IKsign(((((2.18377037822077e+15)*x172))+(((33453503666360.8)*x177))+(((-283496632714604.0)*sj11*x172))+(((7.87490646429454e+16)*x170*x171))+(((-9.29263990732243e+15)*r22*x172))+((x172*x173*x175))+((cj13*x170*x173))+(((-7.87490646429454e+16)*r22*x180))+(((-9.29263990732243e+15)*x177*x178))+(((9.29263990732243e+15)*x177*x179))+(((236247193928836.0)*x174))+(((2.36962317636722e+15)*pz))+(((1.85060301910922e+16)*x180))+(((-7.87490646429454e+16)*x172*x181))));
if( IKabs(j10eval[0]) < 0.0000010000000000  || IKabs(j10eval[1]) < 0.0000010000000000  )
{
{
IkReal j10eval[2];
px=0;
py=0;
pp=pz*pz;
IkReal x182=(cj13*r11);
IkReal x183=(pz*sj11);
IkReal x184=(r00*sj13);
IkReal x185=(pz*sj12);
IkReal x186=(r22*sj12);
IkReal x187=(r11*sj13);
IkReal x188=(cj13*r00);
IkReal x189=(cj12*pz);
IkReal x190=((333.333333333333)*cj11*pz);
IkReal x191=(r22*x189);
IkReal x192=(cj12*x188);
IkReal x193=((9.29263990732243e+15)*cj11*pz);
j10eval[0]=((((-78.3333333333333)*sj12*x183))+(((10.1692176296502)*x185))+(((333.333333333333)*x183*x192))+(((-1.0)*x183))+(((333.333333333333)*x183*x186))+(((720.319582100224)*pz))+(((-1.0)*x184*x190))+(((-2824.78267490284)*x191))+(((663.823928602168)*x189))+(((2824.78267490284)*x185*x188))+(((-333.333333333333)*cj12*x183*x187))+(((-1.0)*x182*x190))+(((-2824.78267490284)*x185*x187))+(((1.2)*cj12*x183)));
j10eval[1]=IKsign(((((7.87490646429454e+16)*x185*x188))+(((-7.87490646429454e+16)*x191))+(((9.29263990732243e+15)*x183*x192))+(((283496632714604.0)*x185))+(((2.00810114839511e+16)*pz))+(((9.29263990732243e+15)*x183*x186))+(((-27877919721967.3)*x183))+(((-1.0)*x184*x193))+(((-9.29263990732243e+15)*cj12*x183*x187))+(((-2.18377037822077e+15)*sj12*x183))+(((33453503666360.8)*cj12*x183))+(((-1.0)*x182*x193))+(((1.85060301910922e+16)*x189))+(((-7.87490646429454e+16)*x185*x187))));
if( IKabs(j10eval[0]) < 0.0000010000000000  || IKabs(j10eval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[1];
bool bgotonextstatement = true;
do
{
evalcond[0]=IKabs(pz);
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j10array[2], cj10array[2], sj10array[2];
bool j10valid[2]={false};
_nj10 = 2;
IkReal x194=((1.0)*cj12);
IkReal x195=(cj12*sj11);
IkReal x196=(cj13*r00);
IkReal x197=(r11*sj13);
IkReal x198=(sj11*sj12);
CheckValue<IkReal> x200 = IKatan2WithCheck(IkReal(((((0.003)*sj11))+(((0.235)*x198))+(((-1.0)*sj11*x194*x196))+((cj11*cj13*r11))+(((-0.0036)*x195))+((x195*x197))+(((-1.0)*r22*x198))+((cj11*r00*sj13)))),IkReal(((0.255)+(((-1.0)*r22*x194))+((sj12*x196))+(((-1.0)*sj12*x197))+(((0.235)*cj12))+(((0.0036)*sj12)))),IKFAST_ATAN2_MAGTHRESH);
if(!x200.valid){
continue;
}
IkReal x199=x200.value;
j10array[0]=((-1.0)*x199);
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
j10array[1]=((3.14159265358979)+(((-1.0)*x199)));
sj10array[1]=IKsin(j10array[1]);
cj10array[1]=IKcos(j10array[1]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
if( j10array[1] > IKPI )
{
    j10array[1]-=IK2PI;
}
else if( j10array[1] < -IKPI )
{    j10array[1]+=IK2PI;
}
j10valid[1] = true;
for(int ij10 = 0; ij10 < 2; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 2; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[1];
IkReal x201=IKsin(j10);
IkReal x202=IKcos(j10);
IkReal x203=(cj13*r00);
IkReal x204=(cj12*x202);
IkReal x205=(sj11*x201);
IkReal x206=((1.0)*r11*sj13);
IkReal x207=(sj12*x202);
IkReal x208=((1.0)*cj11*x201);
evalcond[0]=((((-1.0)*cj13*r11*x208))+(((-1.0)*r22*x204))+(((-1.0)*cj12*x205*x206))+(((-1.0)*r00*sj13*x208))+(((0.255)*x202))+(((-1.0)*x206*x207))+(((0.0036)*x207))+((x203*x207))+(((0.235)*x204))+(((-0.003)*x205))+((r22*sj12*x205))+(((-0.235)*sj12*x205))+((cj12*x203*x205))+(((0.0036)*cj12*x205)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j9array[1], cj9array[1], sj9array[1];
bool j9valid[1]={false};
_nj9 = 1;
j9array[0]=0;
sj9array[0]=IKsin(j9array[0]);
cj9array[0]=IKcos(j9array[0]);
if( j9array[0] > IKPI )
{
    j9array[0]-=IK2PI;
}
else if( j9array[0] < -IKPI )
{    j9array[0]+=IK2PI;
}
j9valid[0] = true;
for(int ij9 = 0; ij9 < 1; ++ij9)
{
if( !j9valid[ij9] )
{
    continue;
}
_ij9[0] = ij9; _ij9[1] = -1;
for(int iij9 = ij9+1; iij9 < 1; ++iij9)
{
if( j9valid[iij9] && IKabs(cj9array[ij9]-cj9array[iij9]) < IKFAST_SOLUTION_THRESH && IKabs(sj9array[ij9]-sj9array[iij9]) < IKFAST_SOLUTION_THRESH )
{
    j9valid[iij9]=false; _ij9[1] = iij9; break; 
}
}
j9 = j9array[ij9]; cj9 = cj9array[ij9]; sj9 = sj9array[ij9];

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(5);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j9, j10]

}
} while(0);
if( bgotonextstatement )
{
}
}
}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
CheckValue<IkReal> x209 = IKatan2WithCheck(IkReal(((-5.15721428390906e+15)+(((-7.92954496713775e+16)*(cj13*cj13)*(r00*r00)))+(((1.58590899342755e+17)*cj12*cj13*r00*r22*sj12))+(((570927237633918.0)*cj13*r00*(cj12*cj12)))+(((7.92954496713775e+16)*(cj12*cj12)*(r11*r11)))+(((-7.92954496713775e+16)*(cj12*cj12)*(cj13*cj13)*(r11*r11)))+(((1.0890051926691e+15)*(pz*pz)))+(((-4.04406793324025e+16)*cj13*r00*sj12))+(((570927237633918.0)*cj12*r22*sj12))+(((-570927237633918.0)*r11*sj13*(cj12*cj12)))+(((4.04406793324025e+16)*r11*sj12*sj13))+(((3.72688613455474e+16)*r22*(cj12*cj12)))+(((3.72688613455474e+16)*cj12*r11*sj12*sj13))+(((-145586445596649.0)*sj12))+(((-7.92954496713775e+16)*(r11*r11)))+(((-570927237633918.0)*cj13*r00))+(((1.58590899342755e+17)*cj13*r00*r11*sj13))+(((-3.72688613455474e+16)*cj12*cj13*r00*sj12))+(((-7.92954496713775e+16)*(cj12*cj12)*(r22*r22)))+(((-134167900843971.0)*cj12*sj12))+(((-4.37806353907408e+15)*(cj12*cj12)))+(((570927237633918.0)*r11*sj13))+(((4.04406793324025e+16)*cj12*r22))+(((-1.58590899342755e+17)*cj13*r00*r11*sj13*(cj12*cj12)))+(((7.92954496713775e+16)*(cj12*cj12)*(cj13*cj13)*(r00*r00)))+(((-9.50355964311459e+15)*cj12))+(((-1.58590899342755e+17)*cj12*r11*r22*sj12*sj13))+(((7.92954496713775e+16)*(cj13*cj13)*(r11*r11))))),IkReal(((((2.02203396662013e+16)*r22*sj11*sj12))+(((-127744969420589.0)*sj11))+(((134167900843971.0)*sj11*(cj12*cj12)))+(((-1.86344306727737e+16)*cj11*cj12*cj13*r11))+(((-2.02203396662013e+16)*cj11*cj13*r11))+(((9.22860900339272e+15)*(pz*pz)))+(((-7.92954496713775e+16)*cj11*cj13*sj12*sj13*(r00*r00)))+(((1.86344306727737e+16)*r11*sj11*sj13))+(((-570927237633918.0)*cj12*r11*sj11*sj12*sj13))+(((-3.72688613455474e+16)*r11*sj11*sj13*(cj12*cj12)))+(((-285463618816959.0)*cj11*r00*sj12*sj13))+(((-1.58590899342755e+17)*cj12*cj13*r00*r11*sj11*sj12*sj13))+(((-7.92954496713775e+16)*cj12*sj11*sj12*(cj13*cj13)*(r11*r11)))+(((-570927237633918.0)*r22*sj11*(cj12*cj12)))+(((237886349014132.0)*cj12*r22*sj11))+(((-237886349014132.0)*cj13*r00*sj11*sj12))+(((-285463618816959.0)*cj11*cj13*r11*sj12))+(((7.92954496713775e+16)*cj11*r00*r11*sj12))+(((16889930780003.4)*cj12*sj11))+(((-4.75263621241375e+15)*sj11*sj12))+(((7.92954496713775e+16)*cj13*r00*r22*sj11))+(((7.92954496713775e+16)*cj11*cj13*sj12*sj13*(r11*r11)))+(((-4.37806353907408e+15)*cj12*sj11*sj12))+(((-7.92954496713775e+16)*r11*r22*sj11*sj13))+(((-2.02203396662013e+16)*cj11*r00*sj13))+(((-1.58590899342755e+17)*cj13*r00*r22*sj11*(cj12*cj12)))+(((7.92954496713775e+16)*cj11*cj12*r00*r22*sj13))+(((3.72688613455474e+16)*cj12*r22*sj11*sj12))+(((-2.02203396662013e+16)*cj12*r11*sj11*sj13))+(((-1.86344306727737e+16)*cj11*cj12*r00*sj13))+(((1.58590899342755e+17)*r11*r22*sj11*sj13*(cj12*cj12)))+(((570927237633918.0)*cj12*cj13*r00*sj11*sj12))+(((7.92954496713775e+16)*cj12*sj11*sj12*(cj13*cj13)*(r00*r00)))+(((-7.92954496713775e+16)*cj12*sj11*sj12*(r22*r22)))+(((2.02203396662013e+16)*cj12*cj13*r00*sj11))+(((285463618816959.0)*r22*sj11))+(((-1.58590899342755e+17)*cj11*r00*r11*sj12*(cj13*cj13)))+(((3.72688613455474e+16)*cj13*r00*sj11*(cj12*cj12)))+(((7.92954496713775e+16)*cj12*sj11*sj12*(r11*r11)))+(((7.92954496713775e+16)*cj11*cj12*cj13*r11*r22))+(((237886349014132.0)*r11*sj11*sj12*sj13))+(((-1.86344306727737e+16)*cj13*r00*sj11)))),IKFAST_ATAN2_MAGTHRESH);
if(!x209.valid){
continue;
}
CheckValue<IkReal> x210=IKPowWithIntegerCheck(IKsign(((((33453503666360.8)*cj12*pz*sj11))+(((-7.87490646429454e+16)*pz*r11*sj12*sj13))+(((-2.18377037822077e+15)*pz*sj11*sj12))+(((-7.87490646429454e+16)*cj12*pz*r22))+(((9.29263990732243e+15)*cj12*cj13*pz*r00*sj11))+(((-9.29263990732243e+15)*cj11*cj13*pz*r11))+(((9.29263990732243e+15)*pz*r22*sj11*sj12))+(((2.00810114839511e+16)*pz))+(((283496632714604.0)*pz*sj12))+(((7.87490646429454e+16)*cj13*pz*r00*sj12))+(((1.85060301910922e+16)*cj12*pz))+(((-9.29263990732243e+15)*cj12*pz*r11*sj11*sj13))+(((-9.29263990732243e+15)*cj11*pz*r00*sj13))+(((-27877919721967.3)*pz*sj11)))),-1);
if(!x210.valid){
continue;
}
j10array[0]=((-1.5707963267949)+(x209.value)+(((1.5707963267949)*(x210.value))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[5];
IkReal x211=IKsin(j10);
IkReal x212=IKcos(j10);
IkReal x213=(sj11*sj12);
IkReal x214=((0.235)*cj12);
IkReal x215=((1.0)*r22);
IkReal x216=(cj13*r00);
IkReal x217=((1.0)*r11);
IkReal x218=(sj12*sj13);
IkReal x219=(cj11*cj13);
IkReal x220=((0.0036)*sj12);
IkReal x221=((0.117190077688363)*pz);
IkReal x222=(cj12*sj11);
IkReal x223=(cj12*r11*sj13);
IkReal x224=((1.0)*x211);
IkReal x225=(cj11*r00*sj13);
IkReal x226=(sj12*x211);
IkReal x227=(pz*x211);
IkReal x228=(sj11*x211);
IkReal x229=(sj11*x212);
IkReal x230=(pz*x212);
evalcond[0]=((0.255)+x214+x220+(((-1.0)*x217*x218))+(((-1.0)*x212*x221))+(((0.99310950337382)*x227))+((sj12*x216))+(((-1.0)*cj12*x215)));
evalcond[1]=(((x216*x222))+(((-1.0)*sj13*x217*x222))+(((-1.0)*x217*x219))+(((-0.235)*x213))+((r22*x213))+(((-0.99310950337382)*x230))+(((-0.003)*sj11))+(((0.0036)*x222))+(((-1.0)*x211*x221))+(((-1.0)*x225)));
evalcond[2]=((-0.00980508)+(((-0.006)*r22*sj12))+(((-0.506485846720648)*x227))+(r22*r22)+(r11*r11)+(((0.006)*x223))+(r00*r00)+(((0.0072)*x216))+(((-0.0072)*r11*sj13))+(((-0.006)*cj12*x216))+(((-0.47)*r22))+(((-1.0)*(pz*pz)))+(((0.00141)*sj12))+(((0.0597669396210653)*x230))+(((-2.16e-5)*cj12)));
evalcond[3]=((((0.003)*x229))+((x216*x226))+(((0.235)*x212*x213))+(((-1.0)*x212*x213*x215))+((x211*x214))+(((-1.0)*x211*x217*x218))+(((-1.0)*cj12*x211*x215))+(((0.255)*x211))+((r11*sj13*x212*x222))+(((0.99310950337382)*pz))+(((-0.0036)*x212*x222))+(((-1.0)*x212*x216*x222))+((r11*x212*x219))+((x212*x225))+((x211*x220)));
evalcond[4]=((((-1.0)*x224*x225))+(((-0.235)*x211*x213))+(((-0.003)*x228))+((r22*x211*x213))+(((-1.0)*sj13*x211*x217*x222))+((x212*x214))+(((-1.0)*x211*x217*x219))+(((0.255)*x212))+(((0.0036)*x211*x222))+((x211*x216*x222))+(((-1.0)*x212*x217*x218))+(((-1.0)*cj12*x212*x215))+((sj12*x212*x216))+(((-1.0)*x221))+((x212*x220)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j9array[1], cj9array[1], sj9array[1];
bool j9valid[1]={false};
_nj9 = 1;
j9array[0]=0;
sj9array[0]=IKsin(j9array[0]);
cj9array[0]=IKcos(j9array[0]);
if( j9array[0] > IKPI )
{
    j9array[0]-=IK2PI;
}
else if( j9array[0] < -IKPI )
{    j9array[0]+=IK2PI;
}
j9valid[0] = true;
for(int ij9 = 0; ij9 < 1; ++ij9)
{
if( !j9valid[ij9] )
{
    continue;
}
_ij9[0] = ij9; _ij9[1] = -1;
for(int iij9 = ij9+1; iij9 < 1; ++iij9)
{
if( j9valid[iij9] && IKabs(cj9array[ij9]-cj9array[iij9]) < IKFAST_SOLUTION_THRESH && IKabs(sj9array[ij9]-sj9array[iij9]) < IKFAST_SOLUTION_THRESH )
{
    j9valid[iij9]=false; _ij9[1] = iij9; break; 
}
}
j9 = j9array[ij9]; cj9 = cj9array[ij9]; sj9 = sj9array[ij9];

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(5);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
CheckValue<IkReal> x231 = IKatan2WithCheck(IkReal(((((2.02203396662013e+16)*r22*sj11*sj12))+(((-127744969420589.0)*sj11))+(((134167900843971.0)*sj11*(cj12*cj12)))+(((-1.86344306727737e+16)*cj11*cj12*cj13*r11))+(((-2.02203396662013e+16)*cj11*cj13*r11))+(((-7.92954496713775e+16)*cj11*cj13*sj12*sj13*(r00*r00)))+(((1.86344306727737e+16)*r11*sj11*sj13))+(((-570927237633918.0)*cj12*r11*sj11*sj12*sj13))+(((-3.72688613455474e+16)*r11*sj11*sj13*(cj12*cj12)))+(((-285463618816959.0)*cj11*r00*sj12*sj13))+(((-1.58590899342755e+17)*cj12*cj13*r00*r11*sj11*sj12*sj13))+(((-7.92954496713775e+16)*cj12*sj11*sj12*(cj13*cj13)*(r11*r11)))+(((-570927237633918.0)*r22*sj11*(cj12*cj12)))+(((237886349014132.0)*cj12*r22*sj11))+(((-237886349014132.0)*cj13*r00*sj11*sj12))+(((-285463618816959.0)*cj11*cj13*r11*sj12))+(((7.92954496713775e+16)*cj11*r00*r11*sj12))+(((16889930780003.4)*cj12*sj11))+(((-4.75263621241375e+15)*sj11*sj12))+(((7.92954496713775e+16)*cj13*r00*r22*sj11))+(((7.92954496713775e+16)*cj11*cj13*sj12*sj13*(r11*r11)))+(((-4.37806353907408e+15)*cj12*sj11*sj12))+(((-7.92954496713775e+16)*r11*r22*sj11*sj13))+(((-2.02203396662013e+16)*cj11*r00*sj13))+(((-1.58590899342755e+17)*cj13*r00*r22*sj11*(cj12*cj12)))+(((7.92954496713775e+16)*cj11*cj12*r00*r22*sj13))+(((3.72688613455474e+16)*cj12*r22*sj11*sj12))+(((-2.02203396662013e+16)*cj12*r11*sj11*sj13))+(((-1.86344306727737e+16)*cj11*cj12*r00*sj13))+(((1.58590899342755e+17)*r11*r22*sj11*sj13*(cj12*cj12)))+(((570927237633918.0)*cj12*cj13*r00*sj11*sj12))+(((7.92954496713775e+16)*cj12*sj11*sj12*(cj13*cj13)*(r00*r00)))+(((-7.92954496713775e+16)*cj12*sj11*sj12*(r22*r22)))+(((2.02203396662013e+16)*cj12*cj13*r00*sj11))+(((285463618816959.0)*r22*sj11))+(((-1.58590899342755e+17)*cj11*r00*r11*sj12*(cj13*cj13)))+(((-9.22860900339272e+15)*(pz*pz)))+(((3.72688613455474e+16)*cj13*r00*sj11*(cj12*cj12)))+(((7.92954496713775e+16)*cj12*sj11*sj12*(r11*r11)))+(((7.92954496713775e+16)*cj11*cj12*cj13*r11*r22))+(((237886349014132.0)*r11*sj11*sj12*sj13))+(((-1.86344306727737e+16)*cj13*r00*sj11)))),IkReal(((5.15721428390906e+15)+(((134167900843971.0)*cj12*sj12))+(((-3.72688613455474e+16)*r22*(cj12*cj12)))+(((7.92954496713775e+16)*(r11*r11)))+(((-4.04406793324025e+16)*cj12*r22))+(((3.72688613455474e+16)*cj12*cj13*r00*sj12))+(((-570927237633918.0)*cj12*r22*sj12))+(((-570927237633918.0)*r11*sj13))+(((145586445596649.0)*sj12))+(((1.58590899342755e+17)*cj13*r00*r11*sj13*(cj12*cj12)))+(((-7.92954496713775e+16)*(cj12*cj12)*(cj13*cj13)*(r00*r00)))+(((-7.92954496713775e+16)*(cj13*cj13)*(r11*r11)))+(((-1.58590899342755e+17)*cj12*cj13*r00*r22*sj12))+(((-7.92954496713775e+16)*(cj12*cj12)*(r11*r11)))+(((4.37806353907408e+15)*(cj12*cj12)))+(((-3.72688613455474e+16)*cj12*r11*sj12*sj13))+(((-4.04406793324025e+16)*r11*sj12*sj13))+(((7.92954496713775e+16)*(cj12*cj12)*(cj13*cj13)*(r11*r11)))+(((-1.58590899342755e+17)*cj13*r00*r11*sj13))+(((4.04406793324025e+16)*cj13*r00*sj12))+(((-570927237633918.0)*cj13*r00*(cj12*cj12)))+(((7.92954496713775e+16)*(cj13*cj13)*(r00*r00)))+(((570927237633918.0)*r11*sj13*(cj12*cj12)))+(((7.92954496713775e+16)*(cj12*cj12)*(r22*r22)))+(((-7.82064444787084e+16)*(pz*pz)))+(((1.58590899342755e+17)*cj12*r11*r22*sj12*sj13))+(((9.50355964311459e+15)*cj12))+(((570927237633918.0)*cj13*r00)))),IKFAST_ATAN2_MAGTHRESH);
if(!x231.valid){
continue;
}
CheckValue<IkReal> x232=IKPowWithIntegerCheck(IKsign(((((1.85060301910922e+16)*pz*sj11*sj12))+(((-7.87490646429454e+16)*pz*r22*sj11*sj12))+(((236247193928836.0)*pz*sj11))+(((-9.29263990732243e+15)*cj12*pz*r22))+(((33453503666360.8)*pz*sj12))+(((7.87490646429454e+16)*cj12*pz*r11*sj11*sj13))+(((2.18377037822077e+15)*cj12*pz))+(((7.87490646429454e+16)*cj11*cj13*pz*r11))+(((9.29263990732243e+15)*cj13*pz*r00*sj12))+(((7.87490646429454e+16)*cj11*pz*r00*sj13))+(((-9.29263990732243e+15)*pz*r11*sj12*sj13))+(((-283496632714604.0)*cj12*pz*sj11))+(((2.36962317636722e+15)*pz))+(((-7.87490646429454e+16)*cj12*cj13*pz*r00*sj11)))),-1);
if(!x232.valid){
continue;
}
j10array[0]=((-1.5707963267949)+(x231.value)+(((1.5707963267949)*(x232.value))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[5];
IkReal x233=IKsin(j10);
IkReal x234=IKcos(j10);
IkReal x235=(sj11*sj12);
IkReal x236=((0.235)*cj12);
IkReal x237=((1.0)*r22);
IkReal x238=(cj13*r00);
IkReal x239=((1.0)*r11);
IkReal x240=(sj12*sj13);
IkReal x241=(cj11*cj13);
IkReal x242=((0.0036)*sj12);
IkReal x243=((0.117190077688363)*pz);
IkReal x244=(cj12*sj11);
IkReal x245=(cj12*r11*sj13);
IkReal x246=((1.0)*x233);
IkReal x247=(cj11*r00*sj13);
IkReal x248=(sj12*x233);
IkReal x249=(pz*x233);
IkReal x250=(sj11*x233);
IkReal x251=(sj11*x234);
IkReal x252=(pz*x234);
evalcond[0]=((0.255)+(((-1.0)*x234*x243))+((sj12*x238))+(((0.99310950337382)*x249))+(((-1.0)*cj12*x237))+x236+x242+(((-1.0)*x239*x240)));
evalcond[1]=((((-0.235)*x235))+(((-1.0)*x247))+(((0.0036)*x244))+((x238*x244))+(((-0.99310950337382)*x252))+(((-1.0)*x233*x243))+(((-0.003)*sj11))+(((-1.0)*sj13*x239*x244))+(((-1.0)*x239*x241))+((r22*x235)));
evalcond[2]=((-0.00980508)+(((-0.006)*r22*sj12))+(((0.0072)*x238))+(((0.0597669396210653)*x252))+(r22*r22)+(r11*r11)+(((-0.506485846720648)*x249))+(((0.006)*x245))+(r00*r00)+(((-0.0072)*r11*sj13))+(((-0.47)*r22))+(((-1.0)*(pz*pz)))+(((0.00141)*sj12))+(((-0.006)*cj12*x238))+(((-2.16e-5)*cj12)));
evalcond[3]=(((r11*sj13*x234*x244))+(((0.003)*x251))+((x233*x242))+(((-1.0)*x234*x238*x244))+((x234*x247))+(((-1.0)*cj12*x233*x237))+((x238*x248))+(((0.255)*x233))+(((-1.0)*x234*x235*x237))+((x233*x236))+(((-1.0)*x233*x239*x240))+(((0.99310950337382)*pz))+(((-0.0036)*x234*x244))+(((0.235)*x234*x235))+((r11*x234*x241)));
evalcond[4]=((((-1.0)*sj13*x233*x239*x244))+((x234*x236))+((sj12*x234*x238))+((r22*x233*x235))+(((-1.0)*x234*x239*x240))+((x234*x242))+(((-0.003)*x250))+(((0.255)*x234))+(((-1.0)*cj12*x234*x237))+(((-1.0)*x233*x239*x241))+(((0.0036)*x233*x244))+(((-0.235)*x233*x235))+(((-1.0)*x243))+(((-1.0)*x246*x247))+((x233*x238*x244)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j9array[1], cj9array[1], sj9array[1];
bool j9valid[1]={false};
_nj9 = 1;
j9array[0]=0;
sj9array[0]=IKsin(j9array[0]);
cj9array[0]=IKcos(j9array[0]);
if( j9array[0] > IKPI )
{
    j9array[0]-=IK2PI;
}
else if( j9array[0] < -IKPI )
{    j9array[0]+=IK2PI;
}
j9valid[0] = true;
for(int ij9 = 0; ij9 < 1; ++ij9)
{
if( !j9valid[ij9] )
{
    continue;
}
_ij9[0] = ij9; _ij9[1] = -1;
for(int iij9 = ij9+1; iij9 < 1; ++iij9)
{
if( j9valid[iij9] && IKabs(cj9array[ij9]-cj9array[iij9]) < IKFAST_SOLUTION_THRESH && IKabs(sj9array[ij9]-sj9array[iij9]) < IKFAST_SOLUTION_THRESH )
{
    j9valid[iij9]=false; _ij9[1] = iij9; break; 
}
}
j9 = j9array[ij9]; cj9 = cj9array[ij9]; sj9 = sj9array[ij9];

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(5);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x253=((21629991710.9083)*r11);
IkReal x254=(sj12*sj13);
IkReal x255=((183300077529.798)*r22);
IkReal x256=(cj12*sj11);
IkReal x257=(sj11*sj12);
IkReal x258=(cj11*cj13);
IkReal x259=((21629991710.9083)*r22);
IkReal x260=((183300077529.798)*r11);
IkReal x261=((183300077529.798)*cj13*r00);
IkReal x262=(cj11*r00*sj13);
IkReal x263=((21629991710.9083)*cj13*r00);
CheckValue<IkReal> x264 = IKatan2WithCheck(IkReal(((-46741519770.0984)+(((-5083048052.06345)*x257))+(((-659880279.107271)*sj12))+((x257*x259))+((cj12*x255))+((x254*x260))+(((-64889975.1327249)*sj11))+(((77867970.1592699)*x256))+(((-43075518219.5024)*cj12))+(((-1.0)*sj13*x253*x256))+((x256*x263))+(((-1.0)*sj12*x261))+(((-1.0)*x253*x258))+(((-21629991710.9083)*x262)))),IkReal(((5515647886.28162)+(((77867970.1592699)*sj12))+(((-1.0)*sj13*x256*x260))+(((-549900232.589393)*sj11))+(((-1.0)*x258*x260))+(((-183300077529.798)*x262))+(((5083048052.06345)*cj12))+(((-1.0)*cj12*x259))+(((-43075518219.5024)*x257))+((sj12*x263))+((x256*x261))+((x255*x257))+(((-1.0)*x253*x254))+(((659880279.107271)*x256)))),IKFAST_ATAN2_MAGTHRESH);
if(!x264.valid){
continue;
}
CheckValue<IkReal> x265=IKPowWithIntegerCheck(IKsign(pz),-1);
if(!x265.valid){
continue;
}
j10array[0]=((-1.5707963267949)+(x264.value)+(((1.5707963267949)*(x265.value))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[5];
IkReal x266=IKsin(j10);
IkReal x267=IKcos(j10);
IkReal x268=(sj11*sj12);
IkReal x269=((0.235)*cj12);
IkReal x270=((1.0)*r22);
IkReal x271=(cj13*r00);
IkReal x272=((1.0)*r11);
IkReal x273=(sj12*sj13);
IkReal x274=(cj11*cj13);
IkReal x275=((0.0036)*sj12);
IkReal x276=((0.117190077688363)*pz);
IkReal x277=(cj12*sj11);
IkReal x278=(cj12*r11*sj13);
IkReal x279=((1.0)*x266);
IkReal x280=(cj11*r00*sj13);
IkReal x281=(sj12*x266);
IkReal x282=(pz*x266);
IkReal x283=(sj11*x266);
IkReal x284=(sj11*x267);
IkReal x285=(pz*x267);
evalcond[0]=((0.255)+(((-1.0)*x272*x273))+(((0.99310950337382)*x282))+x269+x275+((sj12*x271))+(((-1.0)*cj12*x270))+(((-1.0)*x267*x276)));
evalcond[1]=((((-1.0)*x272*x274))+((x271*x277))+((r22*x268))+(((0.0036)*x277))+(((-1.0)*sj13*x272*x277))+(((-1.0)*x280))+(((-0.003)*sj11))+(((-1.0)*x266*x276))+(((-0.235)*x268))+(((-0.99310950337382)*x285)));
evalcond[2]=((-0.00980508)+(((-0.006)*r22*sj12))+(r22*r22)+(r11*r11)+(((-0.506485846720648)*x282))+(((0.0597669396210653)*x285))+(((-0.006)*cj12*x271))+(r00*r00)+(((0.006)*x278))+(((-0.0072)*r11*sj13))+(((-0.47)*r22))+(((-1.0)*(pz*pz)))+(((0.00141)*sj12))+(((0.0072)*x271))+(((-2.16e-5)*cj12)));
evalcond[3]=((((-1.0)*cj12*x266*x270))+(((0.235)*x267*x268))+((x266*x269))+(((0.255)*x266))+(((-0.0036)*x267*x277))+((x266*x275))+((x271*x281))+((r11*sj13*x267*x277))+(((-1.0)*x267*x271*x277))+(((0.99310950337382)*pz))+((r11*x267*x274))+(((-1.0)*x267*x268*x270))+(((0.003)*x284))+((x267*x280))+(((-1.0)*x266*x272*x273)));
evalcond[4]=(((x267*x269))+(((0.255)*x267))+((sj12*x267*x271))+(((-1.0)*cj12*x267*x270))+(((-0.003)*x283))+(((0.0036)*x266*x277))+(((-1.0)*x267*x272*x273))+((r22*x266*x268))+(((-1.0)*sj13*x266*x272*x277))+(((-1.0)*x276))+((x266*x271*x277))+(((-0.235)*x266*x268))+(((-1.0)*x279*x280))+((x267*x275))+(((-1.0)*x266*x272*x274)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j9array[1], cj9array[1], sj9array[1];
bool j9valid[1]={false};
_nj9 = 1;
j9array[0]=0;
sj9array[0]=IKsin(j9array[0]);
cj9array[0]=IKcos(j9array[0]);
if( j9array[0] > IKPI )
{
    j9array[0]-=IK2PI;
}
else if( j9array[0] < -IKPI )
{    j9array[0]+=IK2PI;
}
j9valid[0] = true;
for(int ij9 = 0; ij9 < 1; ++ij9)
{
if( !j9valid[ij9] )
{
    continue;
}
_ij9[0] = ij9; _ij9[1] = -1;
for(int iij9 = ij9+1; iij9 < 1; ++iij9)
{
if( j9valid[iij9] && IKabs(cj9array[ij9]-cj9array[iij9]) < IKFAST_SOLUTION_THRESH && IKabs(sj9array[ij9]-sj9array[iij9]) < IKFAST_SOLUTION_THRESH )
{
    j9valid[iij9]=false; _ij9[1] = iij9; break; 
}
}
j9 = j9array[ij9]; cj9 = cj9array[ij9]; sj9 = sj9array[ij9];

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(5);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j9, j10]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}

} else
{
{
IkReal j9array[2], cj9array[2], sj9array[2];
bool j9valid[2]={false};
_nj9 = 2;
IkReal x286=py*py;
IkReal x287=px*px;
IkReal x288=((0.0597669396210653)*sj12);
IkReal x289=((0.00070314046613018)*cj12);
IkReal x290=((0.117190077688363)*px);
IkReal x291=(cj12*px);
IkReal x292=(px*sj12);
IkReal x293=(cj13*px*r00);
IkReal x294=(px*r11*sj13);
CheckValue<IkReal> x297 = IKatan2WithCheck(IkReal(((0.00121877680795898)*x287)),IkReal(((0.00121877680795898)*px*py)),IKFAST_ATAN2_MAGTHRESH);
if(!x297.valid){
continue;
}
IkReal x295=((1.0)*(x297.value));
if((((((1.48541690761868e-6)*(x287*x287)))+(((1.48541690761868e-6)*x286*x287)))) < -0.00001)
continue;
CheckValue<IkReal> x298=IKPowWithIntegerCheck(IKabs(IKsqrt(((((1.48541690761868e-6)*(x287*x287)))+(((1.48541690761868e-6)*x286*x287))))),-1);
if(!x298.valid){
continue;
}
if( (((x298.value)*(((((-0.0550793365135308)*px*r22))+(((-0.00070314046613018)*r22*x292))+((x289*x294))+(((0.014091511516431)*px))+(((-1.0)*x289*x293))+(((0.000843768559356216)*x293))+(((-1.0)*x286*x290))+(((-1.0)*x290*(pz*pz)))+(((-0.000843768559356216)*x294))+((x290*(r00*r00)))+((x290*(r22*r22)))+((x290*(r11*r11)))+(((-1.0)*x290*(px*px)))+(((-1.0)*x288*x294))+(((-0.0597669396210653)*r22*x291))+(((0.0140426995052723)*x291))+(((0.000380398992176427)*x292))+((x288*x293)))))) < -1-IKFAST_SINCOS_THRESH || (((x298.value)*(((((-0.0550793365135308)*px*r22))+(((-0.00070314046613018)*r22*x292))+((x289*x294))+(((0.014091511516431)*px))+(((-1.0)*x289*x293))+(((0.000843768559356216)*x293))+(((-1.0)*x286*x290))+(((-1.0)*x290*(pz*pz)))+(((-0.000843768559356216)*x294))+((x290*(r00*r00)))+((x290*(r22*r22)))+((x290*(r11*r11)))+(((-1.0)*x290*(px*px)))+(((-1.0)*x288*x294))+(((-0.0597669396210653)*r22*x291))+(((0.0140426995052723)*x291))+(((0.000380398992176427)*x292))+((x288*x293)))))) > 1+IKFAST_SINCOS_THRESH )
    continue;
IkReal x296=IKasin(((x298.value)*(((((-0.0550793365135308)*px*r22))+(((-0.00070314046613018)*r22*x292))+((x289*x294))+(((0.014091511516431)*px))+(((-1.0)*x289*x293))+(((0.000843768559356216)*x293))+(((-1.0)*x286*x290))+(((-1.0)*x290*(pz*pz)))+(((-0.000843768559356216)*x294))+((x290*(r00*r00)))+((x290*(r22*r22)))+((x290*(r11*r11)))+(((-1.0)*x290*(px*px)))+(((-1.0)*x288*x294))+(((-0.0597669396210653)*r22*x291))+(((0.0140426995052723)*x291))+(((0.000380398992176427)*x292))+((x288*x293))))));
j9array[0]=((((-1.0)*x296))+(((-1.0)*x295)));
sj9array[0]=IKsin(j9array[0]);
cj9array[0]=IKcos(j9array[0]);
j9array[1]=((3.14159265358979)+(((-1.0)*x295))+x296);
sj9array[1]=IKsin(j9array[1]);
cj9array[1]=IKcos(j9array[1]);
if( j9array[0] > IKPI )
{
    j9array[0]-=IK2PI;
}
else if( j9array[0] < -IKPI )
{    j9array[0]+=IK2PI;
}
j9valid[0] = true;
if( j9array[1] > IKPI )
{
    j9array[1]-=IK2PI;
}
else if( j9array[1] < -IKPI )
{    j9array[1]+=IK2PI;
}
j9valid[1] = true;
for(int ij9 = 0; ij9 < 2; ++ij9)
{
if( !j9valid[ij9] )
{
    continue;
}
_ij9[0] = ij9; _ij9[1] = -1;
for(int iij9 = ij9+1; iij9 < 2; ++iij9)
{
if( j9valid[iij9] && IKabs(cj9array[ij9]-cj9array[iij9]) < IKFAST_SOLUTION_THRESH && IKabs(sj9array[ij9]-sj9array[iij9]) < IKFAST_SOLUTION_THRESH )
{
    j9valid[iij9]=false; _ij9[1] = iij9; break; 
}
}
j9 = j9array[ij9]; cj9 = cj9array[ij9]; sj9 = sj9array[ij9];
{
IkReal evalcond[4];
IkReal x299=IKsin(j9);
IkReal x300=IKcos(j9);
IkReal x301=px*px;
IkReal x302=pz*pz;
IkReal x303=r00*r00;
IkReal x304=py*py;
IkReal x305=r22*r22;
IkReal x306=r11*r11;
IkReal x307=py*py*py;
IkReal x308=((0.99310950337382)*px);
IkReal x309=(cj12*px);
IkReal x310=(cj13*r00);
IkReal x311=((0.000843768559356216)*py);
IkReal x312=(py*sj12);
IkReal x313=(r11*sj13);
IkReal x314=((0.0071503884242915)*px);
IkReal x315=((0.99310950337382)*py);
IkReal x316=((0.466761466585695)*r22);
IkReal x317=((0.117190077688363)*py);
IkReal x318=((0.0071503884242915)*py);
IkReal x319=(cj12*py);
IkReal x320=(cj11*cj12);
IkReal x321=((0.00595865702024292)*r22);
IkReal x322=((0.506485846720648)*r22);
IkReal x323=(px*sj12);
IkReal x324=(cj11*sj12);
IkReal x325=(px*x300);
IkReal x326=((0.00595865702024292)*x319);
IkReal x327=(py*x305);
IkReal x328=((0.506485846720648)*x323);
IkReal x329=(py*x299);
IkReal x330=(x299*x304);
evalcond[0]=((0.0052)+(((0.0036)*x320))+((x310*x320))+(((-1.0)*x313*x320))+((cj13*r11*sj11))+(((-1.0)*x329))+(((-1.0)*x325))+(((-0.003)*cj11))+(((-0.235)*x324))+((r22*x324))+((r00*sj11*sj13)));
evalcond[1]=(((x310*x314))+(((-1.0)*x313*x314))+(((-1.0)*x309*x322))+(((-0.00595865702024292)*x309*x310))+(((0.0103283388350877)*px*x329))+(((-1.0)*x321*x323))+((x310*x328))+(((0.0103283388350877)*x300*x301))+((x303*x308))+(((-1.0)*x302*x308))+(((0.00595865702024292)*x309*x313))+(((-1.0)*x308*(px*px)))+(((0.119002722814079)*x309))+(((0.00322363344795142)*x323))+((x305*x308))+(((0.119416372784425)*px))+(((-1.0)*x304*x308))+(((-1.0)*x313*x328))+(((-1.0)*px*x316))+((x306*x308)));
evalcond[2]=(((x302*x315))+(((-1.0)*x310*x318))+(((0.506485846720648)*x312*x313))+((x310*x326))+(((-0.119002722814079)*x319))+(((-1.0)*x303*x315))+((x301*x315))+((x312*x321))+(((-0.0103283388350877)*x330))+(((-1.0)*x306*x315))+(((-1.0)*x305*x315))+(((-0.00322363344795142)*x312))+((py*x316))+(((-0.506485846720648)*x310*x312))+(((-0.0103283388350877)*py*x325))+(((-0.119416372784425)*py))+(((-1.0)*x313*x326))+((x319*x322))+(((0.99310950337382)*x307))+((x313*x318)));
evalcond[3]=(((x302*x317))+(((-1.0)*x310*x311))+(((-1.0)*x303*x317))+((x301*x317))+(((-0.0140426995052723)*x319))+(((0.0597669396210653)*r22*x319))+(((0.0550793365135308)*py*r22))+(((-1.0)*x306*x317))+(((-1.0)*x305*x317))+(((-0.00121877680795898)*py*x325))+(((-0.00121877680795898)*x330))+((x311*x313))+(((-0.00070314046613018)*x313*x319))+(((-0.0597669396210653)*x310*x312))+(((-0.000380398992176427)*x312))+(((0.00070314046613018)*r22*x312))+(((0.0597669396210653)*x312*x313))+(((0.117190077688363)*x307))+(((0.00070314046613018)*x310*x319))+(((-0.014091511516431)*py)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j10eval[2];
IkReal x331=cj9*cj9;
IkReal x332=px*px;
IkReal x333=(((x331*(py*py)))+(((-2.0)*cj9*px*py*sj9))+x332+(pz*pz)+(((-1.0)*x331*x332)));
j10eval[0]=x333;
j10eval[1]=IKsign(x333);
if( IKabs(j10eval[0]) < 0.0000010000000000  || IKabs(j10eval[1]) < 0.0000010000000000  )
{
{
IkReal j10eval[2];
IkReal x334=(cj13*pz);
IkReal x335=(cj11*r11);
IkReal x336=(cj9*py);
IkReal x337=((2824.78267490284)*sj11);
IkReal x338=(cj13*r00);
IkReal x339=((0.99310950337382)*sj12);
IkReal x340=(cj12*pz);
IkReal x341=((333.333333333333)*sj13);
IkReal x342=(r11*sj11);
IkReal x343=((0.117190077688363)*pz);
IkReal x344=(cj11*r00);
IkReal x345=(px*sj9);
IkReal x346=((0.000421884279678108)*sj12);
IkReal x347=(sj11*sj12);
IkReal x348=((10.1692176296502)*sj11);
IkReal x349=((0.99310950337382)*sj13);
IkReal x350=((0.00297932851012146)*sj11);
IkReal x351=(r11*sj13);
IkReal x352=((1.2)*sj12);
IkReal x353=((333.333333333333)*r22);
IkReal x354=((2824.78267490284)*sj13);
IkReal x355=((0.99310950337382)*sj11);
IkReal x356=((8.47434802470852)*sj11);
IkReal x357=(pz*sj11);
IkReal x358=(r22*sj11);
IkReal x359=((2824.78267490284)*sj12);
IkReal x360=((0.117190077688363)*r22);
IkReal x361=((0.99310950337382)*cj13);
IkReal x362=(r22*sj12);
IkReal x363=(pz*sj12);
IkReal x364=(r11*sj12);
IkReal x365=((333.333333333333)*sj12);
IkReal x366=((2824.78267490284)*cj13);
IkReal x367=((0.117190077688363)*sj12);
IkReal x368=((0.00357519421214575)*sj11);
IkReal x369=(cj12*x345);
IkReal x370=(cj12*r00*sj11);
j10eval[0]=((((-1.0)*x336*x338*x365))+(((-85.0)*x336))+(((78.3333333333333)*pz*x347))+((x345*x352))+((x345*x356))+(((-1.0)*x353*x369))+((cj12*x336*x348))+((cj12*x336*x337*x338))+((x336*x341*x364))+(((-1.0)*x337*x345*x362))+((x336*x337*x362))+(((85.0)*x345))+(((-1.0)*x337*x338*x369))+(((2824.78267490284)*r22*x340))+x357+(((-720.319582100224)*pz))+((x338*x345*x365))+(((-1.0)*x341*x345*x364))+(((-663.823928602168)*x340))+(((-1.0)*x336*x344*x354))+((x337*x351*x369))+(((-1.0)*x348*x369))+((x344*x345*x354))+((pz*x351*x359))+(((78.3333333333333)*x369))+(((-1.0)*r00*x334*x359))+((x340*x341*x342))+(((-1.0)*x335*x336*x366))+(((-1.0)*x336*x356))+(((-1.0)*x336*x352))+(((-663.823928602168)*x336*x347))+(((-78.3333333333333)*cj12*x336))+(((-10.1692176296502)*x363))+((pz*x341*x344))+(((663.823928602168)*x345*x347))+(((333.333333333333)*x334*x335))+((cj12*x336*x353))+(((-333.333333333333)*x334*x370))+(((-1.0)*pz*x347*x353))+((x335*x345*x366))+(((-1.0)*cj12*x336*x337*x351))+(((-1.2)*sj11*x340)));
j10eval[1]=IKsign(((((-1.0)*x336*x338*x367))+(((0.117190077688363)*x334*x335))+((sj13*x343*x344))+(((0.0275396682567654)*x369))+((x345*x350))+(((-1.0)*x338*x355*x369))+(((-1.0)*x336*x346))+(((-1.0)*x339*x345*x358))+(((-1.0)*x360*x369))+(((-1.0)*x345*x351*x367))+(((-0.0275396682567654)*cj12*x336))+(((-0.233380733292848)*x336*x347))+(((0.0275396682567654)*pz*x347))+(((0.233380733292848)*x345*x347))+(((0.00035157023306509)*x357))+(((-0.117190077688363)*x334*x370))+((x345*x346))+((x338*x345*x367))+((x336*x351*x367))+((x344*x345*x349))+(((-0.000421884279678108)*sj11*x340))+((cj12*x336*x338*x355))+((x336*x339*x358))+(((-1.0)*x335*x336*x361))+((pz*x339*x351))+(((-0.0298834698105326)*x336))+((cj12*x336*x360))+((cj12*x336*x368))+(((-1.0)*x336*x350))+(((-1.0)*r00*x334*x339))+(((-1.0)*x336*x344*x349))+(((-0.253242923360324)*pz))+(((0.99310950337382)*r22*x340))+(((-1.0)*r22*x343*x347))+(((-1.0)*cj12*x336*x342*x349))+(((-0.233380733292848)*x340))+(((0.117190077688363)*sj13*x340*x342))+(((-0.00357519421214575)*x363))+((x335*x345*x361))+(((0.0298834698105326)*x345))+((x342*x349*x369))+(((-1.0)*x368*x369))));
if( IKabs(j10eval[0]) < 0.0000010000000000  || IKabs(j10eval[1]) < 0.0000010000000000  )
{
{
IkReal j10eval[2];
IkReal x371=((2824.78267490284)*sj13);
IkReal x372=(px*sj9);
IkReal x373=(r11*sj12);
IkReal x374=(cj11*r00);
IkReal x375=(cj12*sj11);
IkReal x376=(cj9*py);
IkReal x377=(pz*sj11);
IkReal x378=((333.333333333333)*sj13);
IkReal x379=(cj12*r22);
IkReal x380=((333.333333333333)*cj13);
IkReal x381=(cj11*r11);
IkReal x382=(sj11*sj12);
IkReal x383=((0.117190077688363)*r22);
IkReal x384=((0.99310950337382)*sj13);
IkReal x385=((0.117190077688363)*sj13);
IkReal x386=(cj13*r00);
IkReal x387=((2824.78267490284)*sj12);
IkReal x388=(pz*sj12);
IkReal x389=((663.823928602168)*cj12);
IkReal x390=((0.99310950337382)*pz);
IkReal x391=((333.333333333333)*r22);
IkReal x392=(pz*r11);
IkReal x393=((0.00035157023306509)*sj11);
IkReal x394=((0.99310950337382)*sj12);
IkReal x395=(cj12*pz);
IkReal x396=((0.117190077688363)*cj13);
IkReal x397=((0.00357519421214575)*sj12);
IkReal x398=((2824.78267490284)*pz);
IkReal x399=((0.233380733292848)*cj12);
IkReal x400=((10.1692176296502)*sj12);
j10eval[0]=(((x376*x400))+((r11*x372*x375*x378))+(((-78.3333333333333)*x376*x382))+((x372*x374*x378))+(((-1.0)*x372*x400))+(((-1.0)*r11*x375*x376*x378))+(((-720.319582100224)*x372))+(((-1.0)*cj13*x381*x398))+((x376*x389))+(((-1.0)*r00*x372*x375*x380))+((r00*x375*x376*x380))+((x376*x386*x387))+((sj11*x372))+(((10.1692176296502)*pz*x375))+(((2824.78267490284)*x372*x379))+(((-1.0)*x371*x373*x376))+(((-1.0)*r00*x380*x388))+(((-663.823928602168)*sj12*x377))+(((-1.0)*pz*x371*x374))+(((-1.0)*sj11*x376))+((x372*x380*x381))+((r22*x377*x387))+(((78.3333333333333)*x372*x382))+(((-1.0)*x372*x386*x387))+(((-85.0)*pz))+(((-1.0)*x376*x380*x381))+(((-8.47434802470852)*x377))+(((-1.0)*x371*x375*x392))+(((-78.3333333333333)*x395))+(((333.333333333333)*pz*x379))+((x371*x372*x373))+((pz*x373*x378))+(((-1.0)*x374*x376*x378))+(((-1.2)*x388))+(((-1.2)*x372*x375))+(((720.319582100224)*x376))+(((1.2)*x375*x376))+(((-2824.78267490284)*x376*x379))+(((-1.0)*x372*x382*x391))+((x376*x382*x391))+((x375*x386*x398))+(((-1.0)*x372*x389)));
j10eval[1]=IKsign(((((0.0275396682567654)*x372*x382))+(((-1.0)*cj13*x381*x390))+(((-0.0275396682567654)*x376*x382))+(((-1.0)*x374*x376*x385))+(((0.00357519421214575)*pz*x375))+(((-0.99310950337382)*x376*x379))+(((-1.0)*x372*x382*x383))+(((-0.117190077688363)*x372*x375*x386))+(((-0.000421884279678108)*x372*x375))+(((-0.00297932851012146)*x377))+((x376*x382*x383))+((pz*x373*x385))+(((-1.0)*x372*x397))+(((-1.0)*x372*x399))+((x372*x373*x384))+(((-0.0298834698105326)*pz))+(((-0.0275396682567654)*x395))+(((0.253242923360324)*x376))+((r11*x372*x375*x385))+((x372*x381*x396))+((x376*x397))+((x376*x399))+((x376*x386*x394))+(((0.000421884279678108)*x375*x376))+((x372*x374*x385))+((x372*x393))+(((-1.0)*r11*x375*x376*x385))+(((-1.0)*x375*x384*x392))+(((-0.000421884279678108)*x388))+((r22*x377*x394))+(((-1.0)*x372*x386*x394))+(((0.117190077688363)*x375*x376*x386))+(((-1.0)*x373*x376*x384))+(((-0.253242923360324)*x372))+(((0.117190077688363)*pz*x379))+(((-1.0)*x376*x393))+(((-0.117190077688363)*x386*x388))+(((-1.0)*x376*x381*x396))+((x375*x386*x390))+(((0.99310950337382)*x372*x379))+(((-0.233380733292848)*sj12*x377))+(((-1.0)*pz*x374*x384))));
if( IKabs(j10eval[0]) < 0.0000010000000000  || IKabs(j10eval[1]) < 0.0000010000000000  )
{
continue; // no branches [j10]

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
CheckValue<IkReal> x401 = IKatan2WithCheck(IkReal(((((0.23276515970686)*cj9*px*py*sj9))+(((2.0)*cj12*cj13*r00*r11*sj11*sj12*sj13))+(((-1.0)*cj11*cj12*r00*r22*sj13))+((cj12*sj11*sj12*(r22*r22)))+(((-0.0072)*cj12*cj13*r00*sj11*sj12))+(((-2.0)*r11*r22*sj11*sj13*(cj12*cj12)))+(((0.255)*cj11*r00*sj13))+(((-1.0)*cj11*cj12*cj13*r11*r22))+(((-1.0)*cj13*r00*r22*sj11))+(((-0.47)*cj12*r22*sj11*sj12))+(((0.0036)*cj11*r00*sj12*sj13))+(((-0.972532971382791)*cj9*py*pz))+(((-0.003)*r11*sj11*sj12*sj13))+(((-0.11638257985343)*(cj9*cj9)*(py*py)))+(((-1.0)*cj12*sj11*sj12*(r11*r11)))+(((-0.000213)*cj12*sj11))+(((0.0599358)*sj11*sj12))+(((-0.0036)*r22*sj11))+((cj12*sj11*sj12*(cj13*cj13)*(r11*r11)))+(((2.0)*cj11*r00*r11*sj12*(cj13*cj13)))+(((0.0072)*cj12*r11*sj11*sj12*sj13))+((r11*r22*sj11*sj13))+(((-0.47)*cj13*r00*sj11*(cj12*cj12)))+(((0.0036)*cj11*cj13*r11*sj12))+(((-0.001692)*sj11*(cj12*cj12)))+(((-1.0)*cj12*sj11*sj12*(cj13*cj13)*(r00*r00)))+(((0.001611)*sj11))+(((0.972532971382791)*px*pz*sj9))+(((0.11638257985343)*(cj9*cj9)*(px*px)))+(((0.235)*cj13*r00*sj11))+(((-0.235)*r11*sj11*sj13))+((cj11*cj13*sj12*sj13*(r00*r00)))+(((-0.003)*cj12*r22*sj11))+(((0.05521204)*cj12*sj11*sj12))+(((0.255)*cj11*cj13*r11))+(((-0.11638257985343)*(px*px)))+(((0.235)*cj11*cj12*cj13*r11))+(((0.255)*cj12*r11*sj11*sj13))+(((-1.0)*cj11*r00*r11*sj12))+(((-0.255)*cj12*cj13*r00*sj11))+(((2.0)*cj13*r00*r22*sj11*(cj12*cj12)))+(((0.003)*cj13*r00*sj11*sj12))+(((0.235)*cj11*cj12*r00*sj13))+(((-1.0)*cj11*cj13*sj12*sj13*(r11*r11)))+(((0.47)*r11*sj11*sj13*(cj12*cj12)))+(((0.0072)*r22*sj11*(cj12*cj12)))+(((0.11638257985343)*(pz*pz)))+(((-0.255)*r22*sj11*sj12)))),IkReal(((-0.06503796)+(((-1.0)*(cj13*cj13)*(r00*r00)))+(((2.0)*cj12*cj13*r00*r22*sj12))+(((0.23276515970686)*cj9*py*pz))+(((-1.0)*(cj12*cj12)*(r22*r22)))+(((cj13*cj13)*(r11*r11)))+(((-2.0)*cj13*r00*r11*sj13*(cj12*cj12)))+(((0.47)*r22*(cj12*cj12)))+(((-0.0274670286172093)*cj9*px*py*sj9))+(((0.0072)*r11*sj13))+(((-0.23276515970686)*px*pz*sj9))+(((-0.0072)*r11*sj13*(cj12*cj12)))+(((0.0072)*cj12*r22*sj12))+(((0.986266485691395)*(pz*pz)))+(((0.0137335143086046)*(px*px)))+(((2.0)*cj13*r00*r11*sj13))+(((0.0137335143086046)*(cj9*cj9)*(py*py)))+(((-0.11985)*cj12))+(((0.0072)*cj13*r00*(cj12*cj12)))+(((-1.0)*(r11*r11)))+(((0.51)*r11*sj12*sj13))+(((0.47)*cj12*r11*sj12*sj13))+(((cj12*cj12)*(cj13*cj13)*(r00*r00)))+(((0.51)*cj12*r22))+(((-0.05521204)*(cj12*cj12)))+(((-1.0)*(cj12*cj12)*(cj13*cj13)*(r11*r11)))+(((-0.47)*cj12*cj13*r00*sj12))+(((-0.0137335143086046)*(cj9*cj9)*(px*px)))+(((-0.001692)*cj12*sj12))+(((-0.001836)*sj12))+(((cj12*cj12)*(r11*r11)))+(((-2.0)*cj12*r11*r22*sj12*sj13))+(((-0.51)*cj13*r00*sj12))+(((-0.0072)*cj13*r00)))),IKFAST_ATAN2_MAGTHRESH);
if(!x401.valid){
continue;
}
CheckValue<IkReal> x402=IKPowWithIntegerCheck(IKsign(((((0.117190077688363)*pz*r11*sj12*sj13))+(((-0.117190077688363)*cj13*pz*r00*sj12))+(((-0.99310950337382)*cj12*pz*r11*sj11*sj13))+(((0.117190077688363)*cj9*py*r22*sj11*sj12))+(((-0.117190077688363)*cj12*cj13*px*r00*sj11*sj9))+(((-0.99310950337382)*cj13*px*r00*sj12*sj9))+(((-0.000421884279678108)*cj12*px*sj11*sj9))+(((-0.99310950337382)*cj12*cj9*py*r22))+(((-0.99310950337382)*cj11*pz*r00*sj13))+(((-0.99310950337382)*cj9*py*r11*sj12*sj13))+(((0.00035157023306509)*px*sj11*sj9))+(((-0.00035157023306509)*cj9*py*sj11))+(((-0.253242923360324)*px*sj9))+(((-0.99310950337382)*cj11*cj13*pz*r11))+(((-0.0275396682567654)*cj9*py*sj11*sj12))+(((0.117190077688363)*cj11*cj13*px*r11*sj9))+(((-0.0298834698105326)*pz))+(((-0.00357519421214575)*px*sj12*sj9))+(((0.000421884279678108)*cj12*cj9*py*sj11))+(((0.0275396682567654)*px*sj11*sj12*sj9))+(((0.99310950337382)*cj13*cj9*py*r00*sj12))+(((-0.233380733292848)*cj12*px*sj9))+(((0.117190077688363)*cj12*cj13*cj9*py*r00*sj11))+(((0.117190077688363)*cj12*px*r11*sj11*sj13*sj9))+(((0.99310950337382)*pz*r22*sj11*sj12))+(((0.117190077688363)*cj12*pz*r22))+(((-0.00297932851012146)*pz*sj11))+(((0.00357519421214575)*cj12*pz*sj11))+(((-0.117190077688363)*cj11*cj13*cj9*py*r11))+(((0.00357519421214575)*cj9*py*sj12))+(((0.99310950337382)*cj12*px*r22*sj9))+(((-0.117190077688363)*px*r22*sj11*sj12*sj9))+(((0.99310950337382)*cj12*cj13*pz*r00*sj11))+(((-0.117190077688363)*cj12*cj9*py*r11*sj11*sj13))+(((-0.117190077688363)*cj11*cj9*py*r00*sj13))+(((-0.233380733292848)*pz*sj11*sj12))+(((-0.000421884279678108)*pz*sj12))+(((0.99310950337382)*px*r11*sj12*sj13*sj9))+(((-0.0275396682567654)*cj12*pz))+(((0.233380733292848)*cj12*cj9*py))+(((0.117190077688363)*cj11*px*r00*sj13*sj9))+(((0.253242923360324)*cj9*py)))),-1);
if(!x402.valid){
continue;
}
j10array[0]=((-1.5707963267949)+(x401.value)+(((1.5707963267949)*(x402.value))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[5];
IkReal x403=IKsin(j10);
IkReal x404=IKcos(j10);
IkReal x405=(sj11*sj12);
IkReal x406=(cj9*py);
IkReal x407=((0.235)*cj12);
IkReal x408=((0.0036)*cj12);
IkReal x409=(px*sj9);
IkReal x410=((1.0)*r22);
IkReal x411=(cj13*r00);
IkReal x412=((1.0)*r11);
IkReal x413=(sj12*sj13);
IkReal x414=(cj11*cj13);
IkReal x415=(cj12*sj11);
IkReal x416=((0.0036)*sj12);
IkReal x417=((0.006)*cj12);
IkReal x418=((0.003)*sj11);
IkReal x419=(r11*sj13);
IkReal x420=((0.117190077688363)*x404);
IkReal x421=(sj11*x403);
IkReal x422=(cj11*r00*sj13);
IkReal x423=(sj12*x403);
IkReal x424=(pz*x403);
IkReal x425=((0.99310950337382)*x404);
IkReal x426=((0.506485846720648)*x404);
IkReal x427=(r11*x404);
IkReal x428=(x403*x409);
evalcond[0]=((0.255)+((sj12*x411))+(((-1.0)*x412*x413))+(((0.117190077688363)*x403*x406))+(((0.99310950337382)*x424))+((x406*x425))+(((-1.0)*cj12*x410))+x407+x416+(((-1.0)*x409*x425))+(((-0.117190077688363)*x428))+(((-1.0)*pz*x420)));
evalcond[1]=((((-1.0)*x422))+(((-0.99310950337382)*x428))+(((-0.235)*x405))+(((-1.0)*x412*x414))+((x411*x415))+((r22*x405))+(((-1.0)*sj13*x412*x415))+((x409*x420))+(((-1.0)*x406*x420))+(((0.99310950337382)*x403*x406))+(((-0.117190077688363)*x424))+(((-1.0)*pz*x425))+(((-1.0)*x418))+((sj11*x408)));
evalcond[2]=((((-1.0)*sj11*x404*x408))+(((-1.0)*x404*x411*x415))+(((0.235)*x404*x405))+((x404*x418))+(((0.117190077688363)*x406))+((x414*x427))+((x411*x423))+((x404*x415*x419))+(((-1.0)*x403*x412*x413))+((x404*x422))+(((-0.117190077688363)*x409))+(((0.99310950337382)*pz))+(((0.255)*x403))+(((-1.0)*cj12*x403*x410))+(((-1.0)*x404*x405*x410))+((x403*x416))+((x403*x407)));
evalcond[3]=(((x404*x416))+((sj12*x404*x411))+(((-0.235)*x403*x405))+((x404*x407))+(((-1.0)*sj13*x403*x412*x415))+(((-1.0)*x403*x418))+(((-1.0)*x403*x422))+((x403*x411*x415))+(((0.99310950337382)*x406))+(((-1.0)*x403*x412*x414))+((r22*x403*x405))+(((-0.117190077688363)*pz))+((x408*x421))+(((0.255)*x404))+(((-1.0)*cj12*x404*x410))+(((-0.99310950337382)*x409))+(((-1.0)*x404*x412*x413)));
evalcond[4]=((-0.00980508)+(((-0.006)*r22*sj12))+(((-1.0)*(px*px)))+(((-0.0072)*x419))+(((0.0597669396210653)*x428))+(r22*r22)+(r11*r11)+(((-0.0597669396210653)*x403*x406))+(((0.0104)*cj9*px))+((x409*x426))+(r00*r00)+((x417*x419))+(((-0.506485846720648)*x424))+(((0.0072)*x411))+(((-0.47)*r22))+(((-1.0)*x406*x426))+(((0.0597669396210653)*pz*x404))+(((0.0104)*py*sj9))+(((-1.0)*(pz*pz)))+(((0.00141)*sj12))+(((-1.0)*x411*x417))+(((-2.16e-5)*cj12))+(((-1.0)*(py*py))));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(5);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
CheckValue<IkReal> x429=IKPowWithIntegerCheck(IKsign(((((-0.117190077688363)*cj13*cj9*py*r00*sj12))+(((0.99310950337382)*pz*r11*sj12*sj13))+(((0.117190077688363)*cj12*cj9*py*r22))+(((-0.00357519421214575)*pz*sj12))+(((-0.99310950337382)*cj11*cj13*cj9*py*r11))+(((0.0275396682567654)*cj12*px*sj9))+(((0.117190077688363)*cj11*cj13*pz*r11))+(((-0.99310950337382)*cj12*cj13*px*r00*sj11*sj9))+(((0.117190077688363)*cj9*py*r11*sj12*sj13))+(((0.99310950337382)*cj12*cj13*cj9*py*r00*sj11))+(((-0.117190077688363)*pz*r22*sj11*sj12))+(((0.00297932851012146)*px*sj11*sj9))+(((-0.117190077688363)*cj12*px*r22*sj9))+(((-0.99310950337382)*cj12*cj9*py*r11*sj11*sj13))+(((0.00357519421214575)*cj12*cj9*py*sj11))+(((-0.99310950337382)*px*r22*sj11*sj12*sj9))+(((0.117190077688363)*cj11*pz*r00*sj13))+(((-0.00297932851012146)*cj9*py*sj11))+(((0.0275396682567654)*pz*sj11*sj12))+(((-0.000421884279678108)*cj12*pz*sj11))+(((0.117190077688363)*cj12*pz*r11*sj11*sj13))+(((0.00035157023306509)*pz*sj11))+(((0.99310950337382)*cj12*px*r11*sj11*sj13*sj9))+(((0.99310950337382)*cj12*pz*r22))+(((-0.117190077688363)*cj12*cj13*pz*r00*sj11))+(((0.99310950337382)*cj9*py*r22*sj11*sj12))+(((-0.99310950337382)*cj11*cj9*py*r00*sj13))+(((-0.0275396682567654)*cj12*cj9*py))+(((0.0298834698105326)*px*sj9))+(((-0.99310950337382)*cj13*pz*r00*sj12))+(((-0.0298834698105326)*cj9*py))+(((-0.253242923360324)*pz))+(((0.99310950337382)*cj11*cj13*px*r11*sj9))+(((0.117190077688363)*cj13*px*r00*sj12*sj9))+(((-0.000421884279678108)*cj9*py*sj12))+(((0.99310950337382)*cj11*px*r00*sj13*sj9))+(((0.233380733292848)*px*sj11*sj12*sj9))+(((-0.117190077688363)*px*r11*sj12*sj13*sj9))+(((0.000421884279678108)*px*sj12*sj9))+(((-0.233380733292848)*cj9*py*sj11*sj12))+(((-0.233380733292848)*cj12*pz))+(((-0.00357519421214575)*cj12*px*sj11*sj9)))),-1);
if(!x429.valid){
continue;
}
CheckValue<IkReal> x430 = IKatan2WithCheck(IkReal(((0.06503796)+(((-2.0)*cj13*r00*r11*sj13))+(((cj13*cj13)*(r00*r00)))+(((-1.0)*(cj12*cj12)*(r11*r11)))+(((0.001836)*sj12))+(((0.23276515970686)*cj9*py*pz))+(((-0.47)*cj12*r11*sj12*sj13))+(((0.0072)*r11*sj13*(cj12*cj12)))+(((-2.0)*cj12*cj13*r00*r22*sj12))+(((-0.23276515970686)*px*pz*sj9))+(((0.11985)*cj12))+(r11*r11)+(((-0.0072)*cj12*r22*sj12))+(((cj12*cj12)*(cj13*cj13)*(r11*r11)))+(((0.47)*cj12*cj13*r00*sj12))+(((0.05521204)*(cj12*cj12)))+(((-0.47)*r22*(cj12*cj12)))+(((-0.51)*cj12*r22))+(((-0.0072)*r11*sj13))+(((-1.0)*(cj13*cj13)*(r11*r11)))+(((cj12*cj12)*(r22*r22)))+(((2.0)*cj13*r00*r11*sj13*(cj12*cj12)))+(((-1.0)*(cj12*cj12)*(cj13*cj13)*(r00*r00)))+(((-0.986266485691395)*(px*px)))+(((-0.0137335143086046)*(pz*pz)))+(((0.0072)*cj13*r00))+(((2.0)*cj12*r11*r22*sj12*sj13))+(((0.001692)*cj12*sj12))+(((1.97253297138279)*cj9*px*py*sj9))+(((-0.51)*r11*sj12*sj13))+(((-0.986266485691395)*(cj9*cj9)*(py*py)))+(((0.51)*cj13*r00*sj12))+(((-0.0072)*cj13*r00*(cj12*cj12)))+(((0.986266485691395)*(cj9*cj9)*(px*px))))),IkReal(((((-0.23276515970686)*cj9*px*py*sj9))+(((2.0)*cj12*cj13*r00*r11*sj11*sj12*sj13))+(((-1.0)*cj11*cj12*r00*r22*sj13))+((cj12*sj11*sj12*(r22*r22)))+(((-0.0072)*cj12*cj13*r00*sj11*sj12))+(((-2.0)*r11*r22*sj11*sj13*(cj12*cj12)))+(((0.255)*cj11*r00*sj13))+(((0.11638257985343)*(cj9*cj9)*(py*py)))+(((-1.0)*cj11*cj12*cj13*r11*r22))+(((-1.0)*cj13*r00*r22*sj11))+(((0.972532971382791)*cj9*py*pz))+(((-0.47)*cj12*r22*sj11*sj12))+(((0.0036)*cj11*r00*sj12*sj13))+(((-0.003)*r11*sj11*sj12*sj13))+(((-1.0)*cj12*sj11*sj12*(r11*r11)))+(((-0.000213)*cj12*sj11))+(((0.0599358)*sj11*sj12))+(((-0.0036)*r22*sj11))+((cj12*sj11*sj12*(cj13*cj13)*(r11*r11)))+(((2.0)*cj11*r00*r11*sj12*(cj13*cj13)))+(((0.0072)*cj12*r11*sj11*sj12*sj13))+((r11*r22*sj11*sj13))+(((-0.47)*cj13*r00*sj11*(cj12*cj12)))+(((0.0036)*cj11*cj13*r11*sj12))+(((-0.001692)*sj11*(cj12*cj12)))+(((-1.0)*cj12*sj11*sj12*(cj13*cj13)*(r00*r00)))+(((0.001611)*sj11))+(((0.235)*cj13*r00*sj11))+(((-0.235)*r11*sj11*sj13))+((cj11*cj13*sj12*sj13*(r00*r00)))+(((-0.972532971382791)*px*pz*sj9))+(((-0.11638257985343)*(cj9*cj9)*(px*px)))+(((-0.003)*cj12*r22*sj11))+(((0.05521204)*cj12*sj11*sj12))+(((0.255)*cj11*cj13*r11))+(((0.11638257985343)*(px*px)))+(((0.235)*cj11*cj12*cj13*r11))+(((0.255)*cj12*r11*sj11*sj13))+(((-1.0)*cj11*r00*r11*sj12))+(((-0.255)*cj12*cj13*r00*sj11))+(((2.0)*cj13*r00*r22*sj11*(cj12*cj12)))+(((0.003)*cj13*r00*sj11*sj12))+(((0.235)*cj11*cj12*r00*sj13))+(((-1.0)*cj11*cj13*sj12*sj13*(r11*r11)))+(((-0.11638257985343)*(pz*pz)))+(((0.47)*r11*sj11*sj13*(cj12*cj12)))+(((0.0072)*r22*sj11*(cj12*cj12)))+(((-0.255)*r22*sj11*sj12)))),IKFAST_ATAN2_MAGTHRESH);
if(!x430.valid){
continue;
}
j10array[0]=((-1.5707963267949)+(((1.5707963267949)*(x429.value)))+(x430.value));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[5];
IkReal x431=IKsin(j10);
IkReal x432=IKcos(j10);
IkReal x433=(sj11*sj12);
IkReal x434=(cj9*py);
IkReal x435=((0.235)*cj12);
IkReal x436=((0.0036)*cj12);
IkReal x437=(px*sj9);
IkReal x438=((1.0)*r22);
IkReal x439=(cj13*r00);
IkReal x440=((1.0)*r11);
IkReal x441=(sj12*sj13);
IkReal x442=(cj11*cj13);
IkReal x443=(cj12*sj11);
IkReal x444=((0.0036)*sj12);
IkReal x445=((0.006)*cj12);
IkReal x446=((0.003)*sj11);
IkReal x447=(r11*sj13);
IkReal x448=((0.117190077688363)*x432);
IkReal x449=(sj11*x431);
IkReal x450=(cj11*r00*sj13);
IkReal x451=(sj12*x431);
IkReal x452=(pz*x431);
IkReal x453=((0.99310950337382)*x432);
IkReal x454=((0.506485846720648)*x432);
IkReal x455=(r11*x432);
IkReal x456=(x431*x437);
evalcond[0]=((0.255)+(((0.99310950337382)*x452))+(((-0.117190077688363)*x456))+(((-1.0)*x437*x453))+((sj12*x439))+x435+x444+((x434*x453))+(((-1.0)*cj12*x438))+(((-1.0)*pz*x448))+(((-1.0)*x440*x441))+(((0.117190077688363)*x431*x434)));
evalcond[1]=(((x439*x443))+(((-1.0)*x446))+(((-0.117190077688363)*x452))+(((-1.0)*x434*x448))+(((-1.0)*x450))+(((-0.99310950337382)*x456))+(((0.99310950337382)*x431*x434))+(((-1.0)*pz*x453))+((r22*x433))+(((-1.0)*sj13*x440*x443))+((sj11*x436))+(((-1.0)*x440*x442))+((x437*x448))+(((-0.235)*x433)));
evalcond[2]=((((-1.0)*x432*x433*x438))+((x432*x450))+(((-1.0)*x431*x440*x441))+((x432*x443*x447))+(((0.255)*x431))+((x431*x444))+(((-1.0)*cj12*x431*x438))+((x442*x455))+(((0.99310950337382)*pz))+((x431*x435))+(((-1.0)*sj11*x432*x436))+(((-1.0)*x432*x439*x443))+(((0.235)*x432*x433))+((x439*x451))+(((0.117190077688363)*x434))+((x432*x446))+(((-0.117190077688363)*x437)));
evalcond[3]=((((0.99310950337382)*x434))+(((-1.0)*x431*x440*x442))+(((-1.0)*x431*x446))+((sj12*x432*x439))+((x431*x439*x443))+(((0.255)*x432))+(((-1.0)*x431*x450))+(((-0.117190077688363)*pz))+(((-1.0)*sj13*x431*x440*x443))+(((-1.0)*cj12*x432*x438))+(((-1.0)*x432*x440*x441))+(((-0.99310950337382)*x437))+((r22*x431*x433))+((x432*x435))+((x436*x449))+(((-0.235)*x431*x433))+((x432*x444)));
evalcond[4]=((-0.00980508)+(((-0.006)*r22*sj12))+(((-0.0597669396210653)*x431*x434))+(((-1.0)*(px*px)))+(r22*r22)+(((-0.506485846720648)*x452))+(r11*r11)+(((0.0104)*cj9*px))+(((-0.0072)*x447))+(((0.0072)*x439))+(((-1.0)*x439*x445))+(r00*r00)+(((-0.47)*r22))+(((0.0104)*py*sj9))+(((-1.0)*(pz*pz)))+((x445*x447))+(((0.00141)*sj12))+(((0.0597669396210653)*pz*x432))+(((-2.16e-5)*cj12))+(((-1.0)*(py*py)))+(((0.0597669396210653)*x456))+(((-1.0)*x434*x454))+((x437*x454)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(5);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
CheckValue<IkReal> x457=IKPowWithIntegerCheck(IKsign(((((-2.0)*cj9*px*py*sj9))+(px*px)+(pz*pz)+(((-1.0)*(cj9*cj9)*(px*px)))+(((cj9*cj9)*(py*py))))),-1);
if(!x457.valid){
continue;
}
CheckValue<IkReal> x458 = IKatan2WithCheck(IkReal(((((-0.117190077688363)*cj13*cj9*py*r00*sj12))+(((0.00297932851012146)*cj9*py*sj11))+(((0.99310950337382)*pz*r11*sj12*sj13))+(((0.117190077688363)*cj12*cj9*py*r22))+(((-0.00357519421214575)*pz*sj12))+(((-0.99310950337382)*cj9*py*r22*sj11*sj12))+(((0.0275396682567654)*cj12*px*sj9))+(((0.117190077688363)*pz*r22*sj11*sj12))+(((0.99310950337382)*cj12*cj13*px*r00*sj11*sj9))+(((-0.99310950337382)*cj11*px*r00*sj13*sj9))+(((0.117190077688363)*cj9*py*r11*sj12*sj13))+(((0.99310950337382)*cj12*cj9*py*r11*sj11*sj13))+(((0.233380733292848)*cj9*py*sj11*sj12))+(((0.99310950337382)*px*r22*sj11*sj12*sj9))+(((-0.117190077688363)*cj11*cj13*pz*r11))+(((-0.99310950337382)*cj11*cj13*px*r11*sj9))+(((-0.00357519421214575)*cj12*cj9*py*sj11))+(((-0.00035157023306509)*pz*sj11))+(((-0.117190077688363)*cj12*px*r22*sj9))+(((-0.99310950337382)*cj12*cj13*cj9*py*r00*sj11))+(((-0.0275396682567654)*pz*sj11*sj12))+(((0.00357519421214575)*cj12*px*sj11*sj9))+(((0.117190077688363)*cj12*cj13*pz*r00*sj11))+(((-0.00297932851012146)*px*sj11*sj9))+(((0.99310950337382)*cj12*pz*r22))+(((-0.233380733292848)*px*sj11*sj12*sj9))+(((-0.117190077688363)*cj11*pz*r00*sj13))+(((-0.0275396682567654)*cj12*cj9*py))+(((0.0298834698105326)*px*sj9))+(((-0.99310950337382)*cj13*pz*r00*sj12))+(((-0.0298834698105326)*cj9*py))+(((-0.253242923360324)*pz))+(((0.117190077688363)*cj13*px*r00*sj12*sj9))+(((-0.117190077688363)*cj12*pz*r11*sj11*sj13))+(((0.000421884279678108)*cj12*pz*sj11))+(((-0.000421884279678108)*cj9*py*sj12))+(((-0.117190077688363)*px*r11*sj12*sj13*sj9))+(((0.000421884279678108)*px*sj12*sj9))+(((-0.99310950337382)*cj12*px*r11*sj11*sj13*sj9))+(((-0.233380733292848)*cj12*pz))+(((0.99310950337382)*cj11*cj9*py*r00*sj13))+(((0.99310950337382)*cj11*cj13*cj9*py*r11)))),IkReal(((((0.99310950337382)*cj9*py*r11*sj12*sj13))+(((0.00357519421214575)*px*sj12*sj9))+(((-0.99310950337382)*cj12*pz*r11*sj11*sj13))+(((-0.117190077688363)*cj12*pz*r22))+(((0.117190077688363)*cj9*py*r22*sj11*sj12))+(((-0.117190077688363)*cj12*cj13*px*r00*sj11*sj9))+(((0.117190077688363)*cj13*pz*r00*sj12))+(((-0.000421884279678108)*cj12*px*sj11*sj9))+(((0.0275396682567654)*cj12*pz))+(((-0.99310950337382)*cj11*pz*r00*sj13))+(((0.00035157023306509)*px*sj11*sj9))+(((-0.99310950337382)*cj13*cj9*py*r00*sj12))+(((-0.00035157023306509)*cj9*py*sj11))+(((-0.99310950337382)*cj11*cj13*pz*r11))+(((-0.0275396682567654)*cj9*py*sj11*sj12))+(((0.117190077688363)*cj11*cj13*px*r11*sj9))+(((0.000421884279678108)*cj12*cj9*py*sj11))+(((0.233380733292848)*cj12*px*sj9))+(((0.0275396682567654)*px*sj11*sj12*sj9))+(((-0.253242923360324)*cj9*py))+(((-0.99310950337382)*cj12*px*r22*sj9))+(((0.99310950337382)*cj12*cj9*py*r22))+(((0.0298834698105326)*pz))+(((0.117190077688363)*cj12*cj13*cj9*py*r00*sj11))+(((0.117190077688363)*cj12*px*r11*sj11*sj13*sj9))+(((0.99310950337382)*pz*r22*sj11*sj12))+(((-0.233380733292848)*cj12*cj9*py))+(((-0.00297932851012146)*pz*sj11))+(((0.00357519421214575)*cj12*pz*sj11))+(((-0.117190077688363)*cj11*cj13*cj9*py*r11))+(((-0.117190077688363)*px*r22*sj11*sj12*sj9))+(((0.99310950337382)*cj12*cj13*pz*r00*sj11))+(((-0.117190077688363)*cj12*cj9*py*r11*sj11*sj13))+(((-0.117190077688363)*pz*r11*sj12*sj13))+(((-0.117190077688363)*cj11*cj9*py*r00*sj13))+(((0.253242923360324)*px*sj9))+(((-0.233380733292848)*pz*sj11*sj12))+(((0.99310950337382)*cj13*px*r00*sj12*sj9))+(((-0.00357519421214575)*cj9*py*sj12))+(((0.117190077688363)*cj11*px*r00*sj13*sj9))+(((-0.99310950337382)*px*r11*sj12*sj13*sj9))+(((0.000421884279678108)*pz*sj12)))),IKFAST_ATAN2_MAGTHRESH);
if(!x458.valid){
continue;
}
j10array[0]=((-1.5707963267949)+(((1.5707963267949)*(x457.value)))+(x458.value));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[5];
IkReal x459=IKsin(j10);
IkReal x460=IKcos(j10);
IkReal x461=(sj11*sj12);
IkReal x462=(cj9*py);
IkReal x463=((0.235)*cj12);
IkReal x464=((0.0036)*cj12);
IkReal x465=(px*sj9);
IkReal x466=((1.0)*r22);
IkReal x467=(cj13*r00);
IkReal x468=((1.0)*r11);
IkReal x469=(sj12*sj13);
IkReal x470=(cj11*cj13);
IkReal x471=(cj12*sj11);
IkReal x472=((0.0036)*sj12);
IkReal x473=((0.006)*cj12);
IkReal x474=((0.003)*sj11);
IkReal x475=(r11*sj13);
IkReal x476=((0.117190077688363)*x460);
IkReal x477=(sj11*x459);
IkReal x478=(cj11*r00*sj13);
IkReal x479=(sj12*x459);
IkReal x480=(pz*x459);
IkReal x481=((0.99310950337382)*x460);
IkReal x482=((0.506485846720648)*x460);
IkReal x483=(r11*x460);
IkReal x484=(x459*x465);
evalcond[0]=((0.255)+(((-0.117190077688363)*x484))+(((-1.0)*x465*x481))+(((0.117190077688363)*x459*x462))+(((-1.0)*pz*x476))+(((-1.0)*x468*x469))+((x462*x481))+(((0.99310950337382)*x480))+x463+x472+((sj12*x467))+(((-1.0)*cj12*x466)));
evalcond[1]=((((-1.0)*pz*x481))+((r22*x461))+(((-1.0)*x462*x476))+(((-0.117190077688363)*x480))+(((0.99310950337382)*x459*x462))+(((-1.0)*x468*x470))+((x465*x476))+(((-1.0)*x474))+(((-0.99310950337382)*x484))+((sj11*x464))+(((-1.0)*x478))+((x467*x471))+(((-0.235)*x461))+(((-1.0)*sj13*x468*x471)));
evalcond[2]=(((x459*x472))+(((-0.117190077688363)*x465))+((x460*x471*x475))+(((-1.0)*sj11*x460*x464))+(((-1.0)*x460*x461*x466))+(((0.255)*x459))+((x470*x483))+((x460*x474))+((x460*x478))+(((-1.0)*x459*x468*x469))+((x467*x479))+(((0.117190077688363)*x462))+(((-1.0)*x460*x467*x471))+(((-1.0)*cj12*x459*x466))+(((0.99310950337382)*pz))+((x459*x463))+(((0.235)*x460*x461)));
evalcond[3]=((((-1.0)*x459*x478))+(((-1.0)*cj12*x460*x466))+(((-1.0)*x459*x474))+((x459*x467*x471))+(((-1.0)*x459*x468*x470))+(((-0.99310950337382)*x465))+(((0.255)*x460))+(((-1.0)*x460*x468*x469))+(((-0.117190077688363)*pz))+((x460*x472))+(((-0.235)*x459*x461))+((x464*x477))+((sj12*x460*x467))+((x460*x463))+(((-1.0)*sj13*x459*x468*x471))+((r22*x459*x461))+(((0.99310950337382)*x462)));
evalcond[4]=((-0.00980508)+(((-0.006)*r22*sj12))+(((-1.0)*(px*px)))+(((-0.506485846720648)*x480))+(((-1.0)*x467*x473))+(((0.0597669396210653)*x484))+((x473*x475))+(((0.0597669396210653)*pz*x460))+(r22*r22)+(r11*r11)+(((0.0072)*x467))+(((0.0104)*cj9*px))+(r00*r00)+(((-0.47)*r22))+(((0.0104)*py*sj9))+(((-1.0)*(pz*pz)))+(((-0.0072)*x475))+(((0.00141)*sj12))+((x465*x482))+(((-0.0597669396210653)*x459*x462))+(((-2.16e-5)*cj12))+(((-1.0)*(py*py)))+(((-1.0)*x462*x482)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(5);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j9array[2], cj9array[2], sj9array[2];
bool j9valid[2]={false};
_nj9 = 2;
IkReal x485=px*px;
IkReal x486=py*py;
IkReal x487=((0.99310950337382)*px);
IkReal x488=(cj12*px);
IkReal x489=(cj13*r00);
IkReal x490=((0.0071503884242915)*px);
IkReal x491=(r11*sj13);
IkReal x492=(px*r22);
IkReal x493=((0.506485846720648)*px*sj12);
CheckValue<IkReal> x496 = IKatan2WithCheck(IkReal(((0.0103283388350877)*x485)),IkReal(((0.0103283388350877)*px*py)),IKFAST_ATAN2_MAGTHRESH);
if(!x496.valid){
continue;
}
IkReal x494=((1.0)*(x496.value));
if((((((0.000106674583092381)*(x485*x485)))+(((0.000106674583092381)*x485*x486)))) < -0.00001)
continue;
CheckValue<IkReal> x497=IKPowWithIntegerCheck(IKabs(IKsqrt(((((0.000106674583092381)*(x485*x485)))+(((0.000106674583092381)*x485*x486))))),-1);
if(!x497.valid){
continue;
}
if( (((x497.value)*(((((0.00595865702024292)*x488*x491))+(((-0.00595865702024292)*x488*x489))+(((-1.0)*x486*x487))+(((-1.0)*x487*(px*px)))+(((-1.0)*x491*x493))+((x489*x490))+((x489*x493))+((x487*(r11*r11)))+(((-0.00595865702024292)*sj12*x492))+((x487*(r00*r00)))+(((-1.0)*x487*(pz*pz)))+(((-1.0)*x490*x491))+(((-0.506485846720648)*r22*x488))+(((0.119416372784425)*px))+((x487*(r22*r22)))+(((0.119002722814079)*x488))+(((0.00322363344795142)*px*sj12))+(((-0.466761466585695)*x492)))))) < -1-IKFAST_SINCOS_THRESH || (((x497.value)*(((((0.00595865702024292)*x488*x491))+(((-0.00595865702024292)*x488*x489))+(((-1.0)*x486*x487))+(((-1.0)*x487*(px*px)))+(((-1.0)*x491*x493))+((x489*x490))+((x489*x493))+((x487*(r11*r11)))+(((-0.00595865702024292)*sj12*x492))+((x487*(r00*r00)))+(((-1.0)*x487*(pz*pz)))+(((-1.0)*x490*x491))+(((-0.506485846720648)*r22*x488))+(((0.119416372784425)*px))+((x487*(r22*r22)))+(((0.119002722814079)*x488))+(((0.00322363344795142)*px*sj12))+(((-0.466761466585695)*x492)))))) > 1+IKFAST_SINCOS_THRESH )
    continue;
IkReal x495=IKasin(((x497.value)*(((((0.00595865702024292)*x488*x491))+(((-0.00595865702024292)*x488*x489))+(((-1.0)*x486*x487))+(((-1.0)*x487*(px*px)))+(((-1.0)*x491*x493))+((x489*x490))+((x489*x493))+((x487*(r11*r11)))+(((-0.00595865702024292)*sj12*x492))+((x487*(r00*r00)))+(((-1.0)*x487*(pz*pz)))+(((-1.0)*x490*x491))+(((-0.506485846720648)*r22*x488))+(((0.119416372784425)*px))+((x487*(r22*r22)))+(((0.119002722814079)*x488))+(((0.00322363344795142)*px*sj12))+(((-0.466761466585695)*x492))))));
j9array[0]=((((-1.0)*x494))+(((-1.0)*x495)));
sj9array[0]=IKsin(j9array[0]);
cj9array[0]=IKcos(j9array[0]);
j9array[1]=((3.14159265358979)+(((-1.0)*x494))+x495);
sj9array[1]=IKsin(j9array[1]);
cj9array[1]=IKcos(j9array[1]);
if( j9array[0] > IKPI )
{
    j9array[0]-=IK2PI;
}
else if( j9array[0] < -IKPI )
{    j9array[0]+=IK2PI;
}
j9valid[0] = true;
if( j9array[1] > IKPI )
{
    j9array[1]-=IK2PI;
}
else if( j9array[1] < -IKPI )
{    j9array[1]+=IK2PI;
}
j9valid[1] = true;
for(int ij9 = 0; ij9 < 2; ++ij9)
{
if( !j9valid[ij9] )
{
    continue;
}
_ij9[0] = ij9; _ij9[1] = -1;
for(int iij9 = ij9+1; iij9 < 2; ++iij9)
{
if( j9valid[iij9] && IKabs(cj9array[ij9]-cj9array[iij9]) < IKFAST_SOLUTION_THRESH && IKabs(sj9array[ij9]-sj9array[iij9]) < IKFAST_SOLUTION_THRESH )
{
    j9valid[iij9]=false; _ij9[1] = iij9; break; 
}
}
j9 = j9array[ij9]; cj9 = cj9array[ij9]; sj9 = sj9array[ij9];
{
IkReal evalcond[4];
IkReal x498=IKcos(j9);
IkReal x499=IKsin(j9);
IkReal x500=px*px;
IkReal x501=pz*pz;
IkReal x502=r00*r00;
IkReal x503=py*py;
IkReal x504=r22*r22;
IkReal x505=r11*r11;
IkReal x506=py*py*py;
IkReal x507=((0.117190077688363)*py);
IkReal x508=((0.00121877680795898)*py);
IkReal x509=(cj13*r00);
IkReal x510=((0.000843768559356216)*py);
IkReal x511=(py*sj12);
IkReal x512=(r11*sj13);
IkReal x513=(px*sj12);
IkReal x514=(cj12*py);
IkReal x515=(py*r22);
IkReal x516=((0.99310950337382)*py);
IkReal x517=((0.0071503884242915)*py);
IkReal x518=((0.117190077688363)*px);
IkReal x519=(cj11*cj12);
IkReal x520=(cj12*px);
IkReal x521=((0.0597669396210653)*r22);
IkReal x522=((0.00070314046613018)*r22);
IkReal x523=((0.000843768559356216)*px);
IkReal x524=(cj11*sj12);
IkReal x525=(px*x498);
IkReal x526=((0.00070314046613018)*x520);
IkReal x527=(x499*x503);
evalcond[0]=((0.0052)+(((-1.0)*x525))+(((-0.235)*x524))+((cj13*r11*sj11))+(((0.0036)*x519))+(((-0.003)*cj11))+((r22*x524))+(((-1.0)*py*x499))+(((-1.0)*x512*x519))+((r00*sj11*sj13))+((x509*x519)));
evalcond[1]=((((-0.0550793365135308)*px*r22))+(((-1.0)*x501*x518))+(((0.014091511516431)*px))+(((-0.0597669396210653)*x512*x513))+(((-1.0)*x520*x521))+(((-1.0)*x503*x518))+((x502*x518))+(((0.00121877680795898)*x498*x500))+((x504*x518))+((x509*x523))+((x512*x526))+(((0.000380398992176427)*x513))+(((-1.0)*x518*(px*px)))+(((0.0140426995052723)*x520))+(((-1.0)*x509*x526))+(((-1.0)*x512*x523))+(((0.0597669396210653)*x509*x513))+(((-1.0)*x513*x522))+((x505*x518))+((px*x499*x508)));
evalcond[2]=((((-1.0)*x502*x516))+(((0.99310950337382)*x506))+((x501*x516))+(((-0.119002722814079)*x514))+(((0.00595865702024292)*r22*x511))+(((0.506485846720648)*x511*x512))+(((-0.0103283388350877)*x527))+(((-1.0)*x504*x516))+(((-0.00595865702024292)*x512*x514))+(((0.466761466585695)*x515))+(((-0.506485846720648)*x509*x511))+((x512*x517))+((x500*x516))+(((-1.0)*x505*x516))+(((0.00595865702024292)*x509*x514))+(((-0.0103283388350877)*py*x525))+(((-0.00322363344795142)*x511))+(((-0.119416372784425)*py))+(((-1.0)*x509*x517))+(((0.506485846720648)*r22*x514)));
evalcond[3]=(((x500*x507))+((x510*x512))+(((-1.0)*x505*x507))+(((-0.0597669396210653)*x509*x511))+(((-0.00121877680795898)*x527))+(((-0.0140426995052723)*x514))+(((0.117190077688363)*x506))+(((-0.000380398992176427)*x511))+(((0.0597669396210653)*x511*x512))+(((-1.0)*x502*x507))+((x501*x507))+(((-1.0)*x508*x525))+((x514*x521))+(((-1.0)*x504*x507))+(((0.0550793365135308)*x515))+(((0.00070314046613018)*x509*x514))+((x511*x522))+(((-0.00070314046613018)*x512*x514))+(((-1.0)*x509*x510))+(((-0.014091511516431)*py)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j10eval[2];
IkReal x528=cj9*cj9;
IkReal x529=px*px;
IkReal x530=((((-2.0)*cj9*px*py*sj9))+(((-1.0)*x528*x529))+(pz*pz)+x529+((x528*(py*py))));
j10eval[0]=x530;
j10eval[1]=IKsign(x530);
if( IKabs(j10eval[0]) < 0.0000010000000000  || IKabs(j10eval[1]) < 0.0000010000000000  )
{
{
IkReal j10eval[2];
IkReal x531=(cj13*pz);
IkReal x532=(cj11*r11);
IkReal x533=(cj9*py);
IkReal x534=((2824.78267490284)*sj11);
IkReal x535=(cj13*r00);
IkReal x536=((0.99310950337382)*sj12);
IkReal x537=(cj12*pz);
IkReal x538=((333.333333333333)*sj13);
IkReal x539=(r11*sj11);
IkReal x540=((0.117190077688363)*pz);
IkReal x541=(cj11*r00);
IkReal x542=(px*sj9);
IkReal x543=((0.000421884279678108)*sj12);
IkReal x544=(sj11*sj12);
IkReal x545=((10.1692176296502)*sj11);
IkReal x546=((0.99310950337382)*sj13);
IkReal x547=((0.00297932851012146)*sj11);
IkReal x548=(r11*sj13);
IkReal x549=((1.2)*sj12);
IkReal x550=((333.333333333333)*r22);
IkReal x551=((2824.78267490284)*sj13);
IkReal x552=((0.99310950337382)*sj11);
IkReal x553=((8.47434802470852)*sj11);
IkReal x554=(pz*sj11);
IkReal x555=(r22*sj11);
IkReal x556=((2824.78267490284)*sj12);
IkReal x557=((0.117190077688363)*r22);
IkReal x558=((0.99310950337382)*cj13);
IkReal x559=(r22*sj12);
IkReal x560=(pz*sj12);
IkReal x561=(r11*sj12);
IkReal x562=((333.333333333333)*sj12);
IkReal x563=((2824.78267490284)*cj13);
IkReal x564=((0.117190077688363)*sj12);
IkReal x565=((0.00357519421214575)*sj11);
IkReal x566=(cj12*x542);
IkReal x567=(cj12*r00*sj11);
j10eval[0]=((((-1.0)*cj12*x533*x534*x548))+(((-1.0)*x533*x553))+((x542*x553))+((cj12*x533*x534*x535))+(((-1.0)*x533*x535*x562))+(((-1.0)*x533*x541*x551))+((x542*x549))+((x534*x548*x566))+(((-1.0)*x533*x549))+(((-1.0)*x538*x542*x561))+(((-663.823928602168)*x533*x544))+(((-333.333333333333)*x531*x567))+(((78.3333333333333)*pz*x544))+(((-10.1692176296502)*x560))+(((-1.0)*x532*x533*x563))+((cj12*x533*x550))+(((-720.319582100224)*pz))+((pz*x548*x556))+(((663.823928602168)*x542*x544))+(((-1.0)*r00*x531*x556))+((cj12*x533*x545))+((x532*x542*x563))+(((-663.823928602168)*x537))+((x535*x542*x562))+(((333.333333333333)*x531*x532))+(((-1.0)*x534*x535*x566))+x554+((x541*x542*x551))+(((78.3333333333333)*x566))+((x533*x538*x561))+(((-1.0)*x550*x566))+((pz*x538*x541))+(((-85.0)*x533))+((x533*x534*x559))+(((-1.0)*x545*x566))+(((2824.78267490284)*r22*x537))+(((85.0)*x542))+(((-1.0)*x534*x542*x559))+(((-1.2)*sj11*x537))+(((-78.3333333333333)*cj12*x533))+((x537*x538*x539))+(((-1.0)*pz*x544*x550)));
j10eval[1]=IKsign(((((-1.0)*x535*x552*x566))+(((0.00035157023306509)*x554))+(((-0.233380733292848)*x537))+(((0.0275396682567654)*pz*x544))+(((0.99310950337382)*r22*x537))+((x532*x542*x558))+((cj12*x533*x535*x552))+(((-1.0)*x533*x535*x564))+(((-1.0)*x542*x548*x564))+(((-0.0298834698105326)*x533))+((x542*x547))+((x542*x543))+(((-1.0)*x533*x543))+(((-1.0)*x533*x547))+((sj13*x540*x541))+((pz*x536*x548))+(((-1.0)*cj12*x533*x539*x546))+(((-1.0)*r00*x531*x536))+((x539*x546*x566))+(((-1.0)*x533*x541*x546))+(((-0.117190077688363)*x531*x567))+(((-0.233380733292848)*x533*x544))+((cj12*x533*x557))+(((0.117190077688363)*x531*x532))+(((-1.0)*x557*x566))+((x533*x548*x564))+((x535*x542*x564))+(((-0.00357519421214575)*x560))+(((-1.0)*x536*x542*x555))+(((-1.0)*r22*x540*x544))+(((-0.000421884279678108)*sj11*x537))+((x541*x542*x546))+((x533*x536*x555))+(((0.0275396682567654)*x566))+(((-0.253242923360324)*pz))+(((0.233380733292848)*x542*x544))+(((-1.0)*x532*x533*x558))+(((0.117190077688363)*sj13*x537*x539))+((cj12*x533*x565))+(((-0.0275396682567654)*cj12*x533))+(((0.0298834698105326)*x542))+(((-1.0)*x565*x566))));
if( IKabs(j10eval[0]) < 0.0000010000000000  || IKabs(j10eval[1]) < 0.0000010000000000  )
{
{
IkReal j10eval[2];
IkReal x568=((2824.78267490284)*sj13);
IkReal x569=(px*sj9);
IkReal x570=(r11*sj12);
IkReal x571=(cj11*r00);
IkReal x572=(cj12*sj11);
IkReal x573=(cj9*py);
IkReal x574=(pz*sj11);
IkReal x575=((333.333333333333)*sj13);
IkReal x576=(cj12*r22);
IkReal x577=((333.333333333333)*cj13);
IkReal x578=(cj11*r11);
IkReal x579=(sj11*sj12);
IkReal x580=((0.117190077688363)*r22);
IkReal x581=((0.99310950337382)*sj13);
IkReal x582=((0.117190077688363)*sj13);
IkReal x583=(cj13*r00);
IkReal x584=((2824.78267490284)*sj12);
IkReal x585=(pz*sj12);
IkReal x586=((663.823928602168)*cj12);
IkReal x587=((0.99310950337382)*pz);
IkReal x588=((333.333333333333)*r22);
IkReal x589=(pz*r11);
IkReal x590=((0.00035157023306509)*sj11);
IkReal x591=((0.99310950337382)*sj12);
IkReal x592=(cj12*pz);
IkReal x593=((0.117190077688363)*cj13);
IkReal x594=((0.00357519421214575)*sj12);
IkReal x595=((2824.78267490284)*pz);
IkReal x596=((0.233380733292848)*cj12);
IkReal x597=((10.1692176296502)*sj12);
j10eval[0]=((((-1.0)*cj13*x578*x595))+((x573*x597))+((r22*x574*x584))+((x569*x577*x578))+(((-1.2)*x585))+(((-1.0)*x569*x583*x584))+((sj11*x569))+(((-1.0)*r00*x577*x585))+(((-1.0)*x568*x570*x573))+(((-8.47434802470852)*x574))+(((-720.319582100224)*x569))+((r11*x569*x572*x575))+(((78.3333333333333)*x569*x579))+((pz*x570*x575))+(((-1.0)*r11*x572*x573*x575))+(((-85.0)*pz))+(((-1.0)*x569*x597))+((x568*x569*x570))+(((-1.0)*x573*x577*x578))+((x573*x583*x584))+(((-1.0)*x571*x573*x575))+((x573*x586))+(((-78.3333333333333)*x592))+((x573*x579*x588))+(((1.2)*x572*x573))+(((2824.78267490284)*x569*x576))+((x569*x571*x575))+(((-1.0)*x568*x572*x589))+(((-2824.78267490284)*x573*x576))+(((720.319582100224)*x573))+((r00*x572*x573*x577))+(((-1.0)*r00*x569*x572*x577))+(((10.1692176296502)*pz*x572))+(((-1.0)*x569*x579*x588))+(((-1.0)*pz*x568*x571))+(((-1.0)*x569*x586))+(((-1.0)*sj11*x573))+(((-1.2)*x569*x572))+(((-663.823928602168)*sj12*x574))+(((333.333333333333)*pz*x576))+((x572*x583*x595))+(((-78.3333333333333)*x573*x579)));
j10eval[1]=IKsign(((((0.117190077688363)*pz*x576))+((x569*x570*x581))+((x573*x596))+((x573*x594))+(((-1.0)*pz*x571*x581))+((pz*x570*x582))+((r11*x569*x572*x582))+(((-0.000421884279678108)*x569*x572))+(((-1.0)*x572*x581*x589))+(((-1.0)*x573*x590))+(((-0.00297932851012146)*x574))+(((-1.0)*x571*x573*x582))+(((-1.0)*x570*x573*x581))+((x569*x590))+(((0.253242923360324)*x573))+(((-0.99310950337382)*x573*x576))+(((-0.117190077688363)*x583*x585))+(((-0.0298834698105326)*pz))+(((0.00357519421214575)*pz*x572))+(((-1.0)*x569*x594))+(((-1.0)*x569*x596))+(((-0.0275396682567654)*x573*x579))+(((-0.0275396682567654)*x592))+(((-0.000421884279678108)*x585))+(((-1.0)*x569*x583*x591))+(((-1.0)*x573*x578*x593))+((r22*x574*x591))+(((-0.117190077688363)*x569*x572*x583))+(((-1.0)*r11*x572*x573*x582))+((x573*x579*x580))+((x569*x578*x593))+((x572*x583*x587))+(((-1.0)*cj13*x578*x587))+(((0.99310950337382)*x569*x576))+((x573*x583*x591))+(((-1.0)*x569*x579*x580))+(((0.117190077688363)*x572*x573*x583))+(((0.0275396682567654)*x569*x579))+(((-0.233380733292848)*sj12*x574))+(((-0.253242923360324)*x569))+((x569*x571*x582))+(((0.000421884279678108)*x572*x573))));
if( IKabs(j10eval[0]) < 0.0000010000000000  || IKabs(j10eval[1]) < 0.0000010000000000  )
{
continue; // no branches [j10]

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
CheckValue<IkReal> x598 = IKatan2WithCheck(IkReal(((((0.23276515970686)*cj9*px*py*sj9))+(((2.0)*cj12*cj13*r00*r11*sj11*sj12*sj13))+(((-1.0)*cj11*cj12*r00*r22*sj13))+((cj12*sj11*sj12*(r22*r22)))+(((-0.0072)*cj12*cj13*r00*sj11*sj12))+(((-2.0)*r11*r22*sj11*sj13*(cj12*cj12)))+(((0.255)*cj11*r00*sj13))+(((-1.0)*cj11*cj12*cj13*r11*r22))+(((-1.0)*cj13*r00*r22*sj11))+(((-0.47)*cj12*r22*sj11*sj12))+(((0.0036)*cj11*r00*sj12*sj13))+(((-0.972532971382791)*cj9*py*pz))+(((-0.003)*r11*sj11*sj12*sj13))+(((-0.11638257985343)*(cj9*cj9)*(py*py)))+(((-1.0)*cj12*sj11*sj12*(r11*r11)))+(((-0.000213)*cj12*sj11))+(((0.0599358)*sj11*sj12))+(((-0.0036)*r22*sj11))+((cj12*sj11*sj12*(cj13*cj13)*(r11*r11)))+(((2.0)*cj11*r00*r11*sj12*(cj13*cj13)))+(((0.0072)*cj12*r11*sj11*sj12*sj13))+((r11*r22*sj11*sj13))+(((-0.47)*cj13*r00*sj11*(cj12*cj12)))+(((0.0036)*cj11*cj13*r11*sj12))+(((-0.001692)*sj11*(cj12*cj12)))+(((-1.0)*cj12*sj11*sj12*(cj13*cj13)*(r00*r00)))+(((0.001611)*sj11))+(((0.972532971382791)*px*pz*sj9))+(((0.11638257985343)*(cj9*cj9)*(px*px)))+(((0.235)*cj13*r00*sj11))+(((-0.235)*r11*sj11*sj13))+((cj11*cj13*sj12*sj13*(r00*r00)))+(((-0.003)*cj12*r22*sj11))+(((0.05521204)*cj12*sj11*sj12))+(((0.255)*cj11*cj13*r11))+(((-0.11638257985343)*(px*px)))+(((0.235)*cj11*cj12*cj13*r11))+(((0.255)*cj12*r11*sj11*sj13))+(((-1.0)*cj11*r00*r11*sj12))+(((-0.255)*cj12*cj13*r00*sj11))+(((2.0)*cj13*r00*r22*sj11*(cj12*cj12)))+(((0.003)*cj13*r00*sj11*sj12))+(((0.235)*cj11*cj12*r00*sj13))+(((-1.0)*cj11*cj13*sj12*sj13*(r11*r11)))+(((0.47)*r11*sj11*sj13*(cj12*cj12)))+(((0.0072)*r22*sj11*(cj12*cj12)))+(((0.11638257985343)*(pz*pz)))+(((-0.255)*r22*sj11*sj12)))),IkReal(((-0.06503796)+(((-1.0)*(cj13*cj13)*(r00*r00)))+(((2.0)*cj12*cj13*r00*r22*sj12))+(((0.23276515970686)*cj9*py*pz))+(((-1.0)*(cj12*cj12)*(r22*r22)))+(((cj13*cj13)*(r11*r11)))+(((-2.0)*cj13*r00*r11*sj13*(cj12*cj12)))+(((0.47)*r22*(cj12*cj12)))+(((-0.0274670286172093)*cj9*px*py*sj9))+(((0.0072)*r11*sj13))+(((-0.23276515970686)*px*pz*sj9))+(((-0.0072)*r11*sj13*(cj12*cj12)))+(((0.0072)*cj12*r22*sj12))+(((0.986266485691395)*(pz*pz)))+(((0.0137335143086046)*(px*px)))+(((2.0)*cj13*r00*r11*sj13))+(((0.0137335143086046)*(cj9*cj9)*(py*py)))+(((-0.11985)*cj12))+(((0.0072)*cj13*r00*(cj12*cj12)))+(((-1.0)*(r11*r11)))+(((0.51)*r11*sj12*sj13))+(((0.47)*cj12*r11*sj12*sj13))+(((cj12*cj12)*(cj13*cj13)*(r00*r00)))+(((0.51)*cj12*r22))+(((-0.05521204)*(cj12*cj12)))+(((-1.0)*(cj12*cj12)*(cj13*cj13)*(r11*r11)))+(((-0.47)*cj12*cj13*r00*sj12))+(((-0.0137335143086046)*(cj9*cj9)*(px*px)))+(((-0.001692)*cj12*sj12))+(((-0.001836)*sj12))+(((cj12*cj12)*(r11*r11)))+(((-2.0)*cj12*r11*r22*sj12*sj13))+(((-0.51)*cj13*r00*sj12))+(((-0.0072)*cj13*r00)))),IKFAST_ATAN2_MAGTHRESH);
if(!x598.valid){
continue;
}
CheckValue<IkReal> x599=IKPowWithIntegerCheck(IKsign(((((0.117190077688363)*pz*r11*sj12*sj13))+(((-0.117190077688363)*cj13*pz*r00*sj12))+(((-0.99310950337382)*cj12*pz*r11*sj11*sj13))+(((0.117190077688363)*cj9*py*r22*sj11*sj12))+(((-0.117190077688363)*cj12*cj13*px*r00*sj11*sj9))+(((-0.99310950337382)*cj13*px*r00*sj12*sj9))+(((-0.000421884279678108)*cj12*px*sj11*sj9))+(((-0.99310950337382)*cj12*cj9*py*r22))+(((-0.99310950337382)*cj11*pz*r00*sj13))+(((-0.99310950337382)*cj9*py*r11*sj12*sj13))+(((0.00035157023306509)*px*sj11*sj9))+(((-0.00035157023306509)*cj9*py*sj11))+(((-0.253242923360324)*px*sj9))+(((-0.99310950337382)*cj11*cj13*pz*r11))+(((-0.0275396682567654)*cj9*py*sj11*sj12))+(((0.117190077688363)*cj11*cj13*px*r11*sj9))+(((-0.0298834698105326)*pz))+(((-0.00357519421214575)*px*sj12*sj9))+(((0.000421884279678108)*cj12*cj9*py*sj11))+(((0.0275396682567654)*px*sj11*sj12*sj9))+(((0.99310950337382)*cj13*cj9*py*r00*sj12))+(((-0.233380733292848)*cj12*px*sj9))+(((0.117190077688363)*cj12*cj13*cj9*py*r00*sj11))+(((0.117190077688363)*cj12*px*r11*sj11*sj13*sj9))+(((0.99310950337382)*pz*r22*sj11*sj12))+(((0.117190077688363)*cj12*pz*r22))+(((-0.00297932851012146)*pz*sj11))+(((0.00357519421214575)*cj12*pz*sj11))+(((-0.117190077688363)*cj11*cj13*cj9*py*r11))+(((0.00357519421214575)*cj9*py*sj12))+(((0.99310950337382)*cj12*px*r22*sj9))+(((-0.117190077688363)*px*r22*sj11*sj12*sj9))+(((0.99310950337382)*cj12*cj13*pz*r00*sj11))+(((-0.117190077688363)*cj12*cj9*py*r11*sj11*sj13))+(((-0.117190077688363)*cj11*cj9*py*r00*sj13))+(((-0.233380733292848)*pz*sj11*sj12))+(((-0.000421884279678108)*pz*sj12))+(((0.99310950337382)*px*r11*sj12*sj13*sj9))+(((-0.0275396682567654)*cj12*pz))+(((0.233380733292848)*cj12*cj9*py))+(((0.117190077688363)*cj11*px*r00*sj13*sj9))+(((0.253242923360324)*cj9*py)))),-1);
if(!x599.valid){
continue;
}
j10array[0]=((-1.5707963267949)+(x598.value)+(((1.5707963267949)*(x599.value))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[5];
IkReal x600=IKsin(j10);
IkReal x601=IKcos(j10);
IkReal x602=(sj11*sj12);
IkReal x603=(cj9*py);
IkReal x604=((0.235)*cj12);
IkReal x605=((0.0036)*cj12);
IkReal x606=(px*sj9);
IkReal x607=((1.0)*r22);
IkReal x608=(cj13*r00);
IkReal x609=((1.0)*r11);
IkReal x610=(sj12*sj13);
IkReal x611=(cj11*cj13);
IkReal x612=(cj12*sj11);
IkReal x613=((0.0036)*sj12);
IkReal x614=((0.006)*cj12);
IkReal x615=((0.003)*sj11);
IkReal x616=(r11*sj13);
IkReal x617=((0.117190077688363)*x601);
IkReal x618=(sj11*x600);
IkReal x619=(cj11*r00*sj13);
IkReal x620=(sj12*x600);
IkReal x621=(pz*x600);
IkReal x622=((0.99310950337382)*x601);
IkReal x623=((0.506485846720648)*x601);
IkReal x624=(r11*x601);
IkReal x625=(x600*x606);
evalcond[0]=((0.255)+((x603*x622))+(((0.117190077688363)*x600*x603))+(((-1.0)*x609*x610))+(((-0.117190077688363)*x625))+((sj12*x608))+(((-1.0)*cj12*x607))+(((-1.0)*x606*x622))+(((-1.0)*pz*x617))+x604+x613+(((0.99310950337382)*x621)));
evalcond[1]=((((-1.0)*pz*x622))+(((-0.235)*x602))+((x608*x612))+(((-1.0)*x609*x611))+(((-0.117190077688363)*x621))+(((-1.0)*sj13*x609*x612))+(((-1.0)*x619))+((sj11*x605))+((x606*x617))+(((-1.0)*x615))+(((0.99310950337382)*x600*x603))+(((-0.99310950337382)*x625))+(((-1.0)*x603*x617))+((r22*x602)));
evalcond[2]=((((-1.0)*x601*x602*x607))+((x600*x613))+(((0.117190077688363)*x603))+((x600*x604))+((x601*x615))+((x601*x619))+(((-1.0)*x601*x608*x612))+(((-1.0)*sj11*x601*x605))+((x608*x620))+((x611*x624))+(((0.99310950337382)*pz))+(((0.235)*x601*x602))+((x601*x612*x616))+(((-1.0)*x600*x609*x610))+(((0.255)*x600))+(((-0.117190077688363)*x606))+(((-1.0)*cj12*x600*x607)));
evalcond[3]=((((-1.0)*cj12*x601*x607))+((x601*x604))+(((-1.0)*sj13*x600*x609*x612))+(((0.99310950337382)*x603))+((x605*x618))+((x601*x613))+(((-0.99310950337382)*x606))+(((-0.117190077688363)*pz))+(((-1.0)*x601*x609*x610))+((x600*x608*x612))+(((-1.0)*x600*x615))+(((-0.235)*x600*x602))+(((-1.0)*x600*x609*x611))+(((0.255)*x601))+((sj12*x601*x608))+((r22*x600*x602))+(((-1.0)*x600*x619)));
evalcond[4]=((-0.00980508)+(((-0.006)*r22*sj12))+(((0.0072)*x608))+(((-1.0)*(px*px)))+(r22*r22)+(r11*r11)+(((-0.0597669396210653)*x600*x603))+(((0.0104)*cj9*px))+(r00*r00)+(((-0.47)*r22))+(((-0.506485846720648)*x621))+(((0.0104)*py*sj9))+((x614*x616))+(((-1.0)*(pz*pz)))+(((-1.0)*x603*x623))+(((0.00141)*sj12))+(((0.0597669396210653)*x625))+(((-2.16e-5)*cj12))+(((-1.0)*(py*py)))+((x606*x623))+(((-1.0)*x608*x614))+(((0.0597669396210653)*pz*x601))+(((-0.0072)*x616)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(5);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
CheckValue<IkReal> x626=IKPowWithIntegerCheck(IKsign(((((-0.117190077688363)*cj13*cj9*py*r00*sj12))+(((0.99310950337382)*pz*r11*sj12*sj13))+(((0.117190077688363)*cj12*cj9*py*r22))+(((-0.00357519421214575)*pz*sj12))+(((-0.99310950337382)*cj11*cj13*cj9*py*r11))+(((0.0275396682567654)*cj12*px*sj9))+(((0.117190077688363)*cj11*cj13*pz*r11))+(((-0.99310950337382)*cj12*cj13*px*r00*sj11*sj9))+(((0.117190077688363)*cj9*py*r11*sj12*sj13))+(((0.99310950337382)*cj12*cj13*cj9*py*r00*sj11))+(((-0.117190077688363)*pz*r22*sj11*sj12))+(((0.00297932851012146)*px*sj11*sj9))+(((-0.117190077688363)*cj12*px*r22*sj9))+(((-0.99310950337382)*cj12*cj9*py*r11*sj11*sj13))+(((0.00357519421214575)*cj12*cj9*py*sj11))+(((-0.99310950337382)*px*r22*sj11*sj12*sj9))+(((0.117190077688363)*cj11*pz*r00*sj13))+(((-0.00297932851012146)*cj9*py*sj11))+(((0.0275396682567654)*pz*sj11*sj12))+(((-0.000421884279678108)*cj12*pz*sj11))+(((0.117190077688363)*cj12*pz*r11*sj11*sj13))+(((0.00035157023306509)*pz*sj11))+(((0.99310950337382)*cj12*px*r11*sj11*sj13*sj9))+(((0.99310950337382)*cj12*pz*r22))+(((-0.117190077688363)*cj12*cj13*pz*r00*sj11))+(((0.99310950337382)*cj9*py*r22*sj11*sj12))+(((-0.99310950337382)*cj11*cj9*py*r00*sj13))+(((-0.0275396682567654)*cj12*cj9*py))+(((0.0298834698105326)*px*sj9))+(((-0.99310950337382)*cj13*pz*r00*sj12))+(((-0.0298834698105326)*cj9*py))+(((-0.253242923360324)*pz))+(((0.99310950337382)*cj11*cj13*px*r11*sj9))+(((0.117190077688363)*cj13*px*r00*sj12*sj9))+(((-0.000421884279678108)*cj9*py*sj12))+(((0.99310950337382)*cj11*px*r00*sj13*sj9))+(((0.233380733292848)*px*sj11*sj12*sj9))+(((-0.117190077688363)*px*r11*sj12*sj13*sj9))+(((0.000421884279678108)*px*sj12*sj9))+(((-0.233380733292848)*cj9*py*sj11*sj12))+(((-0.233380733292848)*cj12*pz))+(((-0.00357519421214575)*cj12*px*sj11*sj9)))),-1);
if(!x626.valid){
continue;
}
CheckValue<IkReal> x627 = IKatan2WithCheck(IkReal(((0.06503796)+(((-2.0)*cj13*r00*r11*sj13))+(((cj13*cj13)*(r00*r00)))+(((-1.0)*(cj12*cj12)*(r11*r11)))+(((0.001836)*sj12))+(((0.23276515970686)*cj9*py*pz))+(((-0.47)*cj12*r11*sj12*sj13))+(((0.0072)*r11*sj13*(cj12*cj12)))+(((-2.0)*cj12*cj13*r00*r22*sj12))+(((-0.23276515970686)*px*pz*sj9))+(((0.11985)*cj12))+(r11*r11)+(((-0.0072)*cj12*r22*sj12))+(((cj12*cj12)*(cj13*cj13)*(r11*r11)))+(((0.47)*cj12*cj13*r00*sj12))+(((0.05521204)*(cj12*cj12)))+(((-0.47)*r22*(cj12*cj12)))+(((-0.51)*cj12*r22))+(((-0.0072)*r11*sj13))+(((-1.0)*(cj13*cj13)*(r11*r11)))+(((cj12*cj12)*(r22*r22)))+(((2.0)*cj13*r00*r11*sj13*(cj12*cj12)))+(((-1.0)*(cj12*cj12)*(cj13*cj13)*(r00*r00)))+(((-0.986266485691395)*(px*px)))+(((-0.0137335143086046)*(pz*pz)))+(((0.0072)*cj13*r00))+(((2.0)*cj12*r11*r22*sj12*sj13))+(((0.001692)*cj12*sj12))+(((1.97253297138279)*cj9*px*py*sj9))+(((-0.51)*r11*sj12*sj13))+(((-0.986266485691395)*(cj9*cj9)*(py*py)))+(((0.51)*cj13*r00*sj12))+(((-0.0072)*cj13*r00*(cj12*cj12)))+(((0.986266485691395)*(cj9*cj9)*(px*px))))),IkReal(((((-0.23276515970686)*cj9*px*py*sj9))+(((2.0)*cj12*cj13*r00*r11*sj11*sj12*sj13))+(((-1.0)*cj11*cj12*r00*r22*sj13))+((cj12*sj11*sj12*(r22*r22)))+(((-0.0072)*cj12*cj13*r00*sj11*sj12))+(((-2.0)*r11*r22*sj11*sj13*(cj12*cj12)))+(((0.255)*cj11*r00*sj13))+(((0.11638257985343)*(cj9*cj9)*(py*py)))+(((-1.0)*cj11*cj12*cj13*r11*r22))+(((-1.0)*cj13*r00*r22*sj11))+(((0.972532971382791)*cj9*py*pz))+(((-0.47)*cj12*r22*sj11*sj12))+(((0.0036)*cj11*r00*sj12*sj13))+(((-0.003)*r11*sj11*sj12*sj13))+(((-1.0)*cj12*sj11*sj12*(r11*r11)))+(((-0.000213)*cj12*sj11))+(((0.0599358)*sj11*sj12))+(((-0.0036)*r22*sj11))+((cj12*sj11*sj12*(cj13*cj13)*(r11*r11)))+(((2.0)*cj11*r00*r11*sj12*(cj13*cj13)))+(((0.0072)*cj12*r11*sj11*sj12*sj13))+((r11*r22*sj11*sj13))+(((-0.47)*cj13*r00*sj11*(cj12*cj12)))+(((0.0036)*cj11*cj13*r11*sj12))+(((-0.001692)*sj11*(cj12*cj12)))+(((-1.0)*cj12*sj11*sj12*(cj13*cj13)*(r00*r00)))+(((0.001611)*sj11))+(((0.235)*cj13*r00*sj11))+(((-0.235)*r11*sj11*sj13))+((cj11*cj13*sj12*sj13*(r00*r00)))+(((-0.972532971382791)*px*pz*sj9))+(((-0.11638257985343)*(cj9*cj9)*(px*px)))+(((-0.003)*cj12*r22*sj11))+(((0.05521204)*cj12*sj11*sj12))+(((0.255)*cj11*cj13*r11))+(((0.11638257985343)*(px*px)))+(((0.235)*cj11*cj12*cj13*r11))+(((0.255)*cj12*r11*sj11*sj13))+(((-1.0)*cj11*r00*r11*sj12))+(((-0.255)*cj12*cj13*r00*sj11))+(((2.0)*cj13*r00*r22*sj11*(cj12*cj12)))+(((0.003)*cj13*r00*sj11*sj12))+(((0.235)*cj11*cj12*r00*sj13))+(((-1.0)*cj11*cj13*sj12*sj13*(r11*r11)))+(((-0.11638257985343)*(pz*pz)))+(((0.47)*r11*sj11*sj13*(cj12*cj12)))+(((0.0072)*r22*sj11*(cj12*cj12)))+(((-0.255)*r22*sj11*sj12)))),IKFAST_ATAN2_MAGTHRESH);
if(!x627.valid){
continue;
}
j10array[0]=((-1.5707963267949)+(((1.5707963267949)*(x626.value)))+(x627.value));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[5];
IkReal x628=IKsin(j10);
IkReal x629=IKcos(j10);
IkReal x630=(sj11*sj12);
IkReal x631=(cj9*py);
IkReal x632=((0.235)*cj12);
IkReal x633=((0.0036)*cj12);
IkReal x634=(px*sj9);
IkReal x635=((1.0)*r22);
IkReal x636=(cj13*r00);
IkReal x637=((1.0)*r11);
IkReal x638=(sj12*sj13);
IkReal x639=(cj11*cj13);
IkReal x640=(cj12*sj11);
IkReal x641=((0.0036)*sj12);
IkReal x642=((0.006)*cj12);
IkReal x643=((0.003)*sj11);
IkReal x644=(r11*sj13);
IkReal x645=((0.117190077688363)*x629);
IkReal x646=(sj11*x628);
IkReal x647=(cj11*r00*sj13);
IkReal x648=(sj12*x628);
IkReal x649=(pz*x628);
IkReal x650=((0.99310950337382)*x629);
IkReal x651=((0.506485846720648)*x629);
IkReal x652=(r11*x629);
IkReal x653=(x628*x634);
evalcond[0]=((0.255)+(((-1.0)*x637*x638))+(((0.99310950337382)*x649))+((x631*x650))+(((0.117190077688363)*x628*x631))+x641+x632+(((-1.0)*cj12*x635))+((sj12*x636))+(((-0.117190077688363)*x653))+(((-1.0)*x634*x650))+(((-1.0)*pz*x645)));
evalcond[1]=(((sj11*x633))+(((-1.0)*x647))+(((-1.0)*x631*x645))+((x636*x640))+(((-0.99310950337382)*x653))+(((-1.0)*x637*x639))+((r22*x630))+((x634*x645))+(((-1.0)*x643))+(((-0.235)*x630))+(((-0.117190077688363)*x649))+(((-1.0)*pz*x650))+(((-1.0)*sj13*x637*x640))+(((0.99310950337382)*x628*x631)));
evalcond[2]=((((-1.0)*x629*x630*x635))+((x628*x641))+((x636*x648))+((x629*x647))+((x629*x643))+((x628*x632))+(((-0.117190077688363)*x634))+((x639*x652))+(((-1.0)*x628*x637*x638))+(((0.255)*x628))+(((-1.0)*cj12*x628*x635))+((x629*x640*x644))+(((0.117190077688363)*x631))+(((0.235)*x629*x630))+(((0.99310950337382)*pz))+(((-1.0)*x629*x636*x640))+(((-1.0)*sj11*x629*x633)));
evalcond[3]=(((sj12*x629*x636))+((x629*x641))+((r22*x628*x630))+((x629*x632))+(((-1.0)*x628*x637*x639))+(((-0.235)*x628*x630))+(((0.255)*x629))+(((-0.117190077688363)*pz))+(((-1.0)*x629*x637*x638))+(((-1.0)*cj12*x629*x635))+((x628*x636*x640))+(((-1.0)*x628*x647))+(((0.99310950337382)*x631))+(((-1.0)*x628*x643))+((x633*x646))+(((-1.0)*sj13*x628*x637*x640))+(((-0.99310950337382)*x634)));
evalcond[4]=((-0.00980508)+(((-0.006)*r22*sj12))+(((-1.0)*(px*px)))+(((-0.0597669396210653)*x628*x631))+(r22*r22)+(r11*r11)+((x634*x651))+(((0.0104)*cj9*px))+(((-0.506485846720648)*x649))+(((0.0597669396210653)*pz*x629))+(((-1.0)*x631*x651))+(r00*r00)+(((0.0072)*x636))+(((-0.47)*r22))+(((0.0597669396210653)*x653))+(((0.0104)*py*sj9))+(((-1.0)*(pz*pz)))+(((-0.0072)*x644))+(((-1.0)*x636*x642))+(((0.00141)*sj12))+(((-2.16e-5)*cj12))+(((-1.0)*(py*py)))+((x642*x644)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(5);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
CheckValue<IkReal> x654=IKPowWithIntegerCheck(IKsign(((((-2.0)*cj9*px*py*sj9))+(px*px)+(pz*pz)+(((-1.0)*(cj9*cj9)*(px*px)))+(((cj9*cj9)*(py*py))))),-1);
if(!x654.valid){
continue;
}
CheckValue<IkReal> x655 = IKatan2WithCheck(IkReal(((((-0.117190077688363)*cj13*cj9*py*r00*sj12))+(((0.00297932851012146)*cj9*py*sj11))+(((0.99310950337382)*pz*r11*sj12*sj13))+(((0.117190077688363)*cj12*cj9*py*r22))+(((-0.00357519421214575)*pz*sj12))+(((-0.99310950337382)*cj9*py*r22*sj11*sj12))+(((0.0275396682567654)*cj12*px*sj9))+(((0.117190077688363)*pz*r22*sj11*sj12))+(((0.99310950337382)*cj12*cj13*px*r00*sj11*sj9))+(((-0.99310950337382)*cj11*px*r00*sj13*sj9))+(((0.117190077688363)*cj9*py*r11*sj12*sj13))+(((0.99310950337382)*cj12*cj9*py*r11*sj11*sj13))+(((0.233380733292848)*cj9*py*sj11*sj12))+(((0.99310950337382)*px*r22*sj11*sj12*sj9))+(((-0.117190077688363)*cj11*cj13*pz*r11))+(((-0.99310950337382)*cj11*cj13*px*r11*sj9))+(((-0.00357519421214575)*cj12*cj9*py*sj11))+(((-0.00035157023306509)*pz*sj11))+(((-0.117190077688363)*cj12*px*r22*sj9))+(((-0.99310950337382)*cj12*cj13*cj9*py*r00*sj11))+(((-0.0275396682567654)*pz*sj11*sj12))+(((0.00357519421214575)*cj12*px*sj11*sj9))+(((0.117190077688363)*cj12*cj13*pz*r00*sj11))+(((-0.00297932851012146)*px*sj11*sj9))+(((0.99310950337382)*cj12*pz*r22))+(((-0.233380733292848)*px*sj11*sj12*sj9))+(((-0.117190077688363)*cj11*pz*r00*sj13))+(((-0.0275396682567654)*cj12*cj9*py))+(((0.0298834698105326)*px*sj9))+(((-0.99310950337382)*cj13*pz*r00*sj12))+(((-0.0298834698105326)*cj9*py))+(((-0.253242923360324)*pz))+(((0.117190077688363)*cj13*px*r00*sj12*sj9))+(((-0.117190077688363)*cj12*pz*r11*sj11*sj13))+(((0.000421884279678108)*cj12*pz*sj11))+(((-0.000421884279678108)*cj9*py*sj12))+(((-0.117190077688363)*px*r11*sj12*sj13*sj9))+(((0.000421884279678108)*px*sj12*sj9))+(((-0.99310950337382)*cj12*px*r11*sj11*sj13*sj9))+(((-0.233380733292848)*cj12*pz))+(((0.99310950337382)*cj11*cj9*py*r00*sj13))+(((0.99310950337382)*cj11*cj13*cj9*py*r11)))),IkReal(((((0.99310950337382)*cj9*py*r11*sj12*sj13))+(((0.00357519421214575)*px*sj12*sj9))+(((-0.99310950337382)*cj12*pz*r11*sj11*sj13))+(((-0.117190077688363)*cj12*pz*r22))+(((0.117190077688363)*cj9*py*r22*sj11*sj12))+(((-0.117190077688363)*cj12*cj13*px*r00*sj11*sj9))+(((0.117190077688363)*cj13*pz*r00*sj12))+(((-0.000421884279678108)*cj12*px*sj11*sj9))+(((0.0275396682567654)*cj12*pz))+(((-0.99310950337382)*cj11*pz*r00*sj13))+(((0.00035157023306509)*px*sj11*sj9))+(((-0.99310950337382)*cj13*cj9*py*r00*sj12))+(((-0.00035157023306509)*cj9*py*sj11))+(((-0.99310950337382)*cj11*cj13*pz*r11))+(((-0.0275396682567654)*cj9*py*sj11*sj12))+(((0.117190077688363)*cj11*cj13*px*r11*sj9))+(((0.000421884279678108)*cj12*cj9*py*sj11))+(((0.233380733292848)*cj12*px*sj9))+(((0.0275396682567654)*px*sj11*sj12*sj9))+(((-0.253242923360324)*cj9*py))+(((-0.99310950337382)*cj12*px*r22*sj9))+(((0.99310950337382)*cj12*cj9*py*r22))+(((0.0298834698105326)*pz))+(((0.117190077688363)*cj12*cj13*cj9*py*r00*sj11))+(((0.117190077688363)*cj12*px*r11*sj11*sj13*sj9))+(((0.99310950337382)*pz*r22*sj11*sj12))+(((-0.233380733292848)*cj12*cj9*py))+(((-0.00297932851012146)*pz*sj11))+(((0.00357519421214575)*cj12*pz*sj11))+(((-0.117190077688363)*cj11*cj13*cj9*py*r11))+(((-0.117190077688363)*px*r22*sj11*sj12*sj9))+(((0.99310950337382)*cj12*cj13*pz*r00*sj11))+(((-0.117190077688363)*cj12*cj9*py*r11*sj11*sj13))+(((-0.117190077688363)*pz*r11*sj12*sj13))+(((-0.117190077688363)*cj11*cj9*py*r00*sj13))+(((0.253242923360324)*px*sj9))+(((-0.233380733292848)*pz*sj11*sj12))+(((0.99310950337382)*cj13*px*r00*sj12*sj9))+(((-0.00357519421214575)*cj9*py*sj12))+(((0.117190077688363)*cj11*px*r00*sj13*sj9))+(((-0.99310950337382)*px*r11*sj12*sj13*sj9))+(((0.000421884279678108)*pz*sj12)))),IKFAST_ATAN2_MAGTHRESH);
if(!x655.valid){
continue;
}
j10array[0]=((-1.5707963267949)+(((1.5707963267949)*(x654.value)))+(x655.value));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[5];
IkReal x656=IKsin(j10);
IkReal x657=IKcos(j10);
IkReal x658=(sj11*sj12);
IkReal x659=(cj9*py);
IkReal x660=((0.235)*cj12);
IkReal x661=((0.0036)*cj12);
IkReal x662=(px*sj9);
IkReal x663=((1.0)*r22);
IkReal x664=(cj13*r00);
IkReal x665=((1.0)*r11);
IkReal x666=(sj12*sj13);
IkReal x667=(cj11*cj13);
IkReal x668=(cj12*sj11);
IkReal x669=((0.0036)*sj12);
IkReal x670=((0.006)*cj12);
IkReal x671=((0.003)*sj11);
IkReal x672=(r11*sj13);
IkReal x673=((0.117190077688363)*x657);
IkReal x674=(sj11*x656);
IkReal x675=(cj11*r00*sj13);
IkReal x676=(sj12*x656);
IkReal x677=(pz*x656);
IkReal x678=((0.99310950337382)*x657);
IkReal x679=((0.506485846720648)*x657);
IkReal x680=(r11*x657);
IkReal x681=(x656*x662);
evalcond[0]=((0.255)+(((-1.0)*x665*x666))+(((0.117190077688363)*x656*x659))+((sj12*x664))+(((-1.0)*x662*x678))+((x659*x678))+(((-0.117190077688363)*x681))+(((-1.0)*cj12*x663))+(((-1.0)*pz*x673))+x669+x660+(((0.99310950337382)*x677)));
evalcond[1]=((((-1.0)*x665*x667))+(((-0.235)*x658))+((x662*x673))+((x664*x668))+(((-0.117190077688363)*x677))+(((-1.0)*x659*x673))+(((0.99310950337382)*x656*x659))+((sj11*x661))+((r22*x658))+(((-1.0)*pz*x678))+(((-1.0)*x675))+(((-0.99310950337382)*x681))+(((-1.0)*sj13*x665*x668))+(((-1.0)*x671)));
evalcond[2]=((((-0.117190077688363)*x662))+(((0.255)*x656))+(((-1.0)*sj11*x657*x661))+((x657*x668*x672))+(((-1.0)*x657*x664*x668))+((x664*x676))+((x656*x669))+((x656*x660))+(((-1.0)*cj12*x656*x663))+(((-1.0)*x656*x665*x666))+((x667*x680))+(((0.117190077688363)*x659))+(((0.99310950337382)*pz))+((x657*x675))+((x657*x671))+(((0.235)*x657*x658))+(((-1.0)*x657*x658*x663)));
evalcond[3]=(((r22*x656*x658))+(((0.255)*x657))+((x661*x674))+(((-1.0)*x657*x665*x666))+(((-1.0)*x656*x675))+((x657*x660))+((x657*x669))+(((-0.99310950337382)*x662))+(((0.99310950337382)*x659))+(((-0.117190077688363)*pz))+(((-1.0)*x656*x665*x667))+((sj12*x657*x664))+((x656*x664*x668))+(((-1.0)*sj13*x656*x665*x668))+(((-0.235)*x656*x658))+(((-1.0)*cj12*x657*x663))+(((-1.0)*x656*x671)));
evalcond[4]=((-0.00980508)+(((-0.006)*r22*sj12))+(((-0.0597669396210653)*x656*x659))+(((-1.0)*(px*px)))+(((-0.0072)*x672))+((x662*x679))+(r22*r22)+(r11*r11)+(((-1.0)*x659*x679))+(((0.0104)*cj9*px))+((x670*x672))+(((-1.0)*x664*x670))+(r00*r00)+(((-0.47)*r22))+(((0.0104)*py*sj9))+(((-1.0)*(pz*pz)))+(((0.00141)*sj12))+(((0.0597669396210653)*pz*x657))+(((-2.16e-5)*cj12))+(((-1.0)*(py*py)))+(((0.0072)*x664))+(((0.0597669396210653)*x681))+(((-0.506485846720648)*x677)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(5);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j9array[2], cj9array[2], sj9array[2];
bool j9valid[2]={false};
_nj9 = 2;
IkReal x682=(cj11*sj12);
IkReal x683=(cj11*cj12);
CheckValue<IkReal> x686 = IKatan2WithCheck(IkReal(((-1.0)*px)),IkReal(((-1.0)*py)),IKFAST_ATAN2_MAGTHRESH);
if(!x686.valid){
continue;
}
IkReal x684=((1.0)*(x686.value));
if((((px*px)+(py*py))) < -0.00001)
continue;
CheckValue<IkReal> x687=IKPowWithIntegerCheck(IKabs(IKsqrt(((px*px)+(py*py)))),-1);
if(!x687.valid){
continue;
}
if( (((x687.value)*(((0.0052)+((cj13*r00*x683))+(((0.0036)*x683))+((r22*x682))+((cj13*r11*sj11))+(((-0.235)*x682))+(((-0.003)*cj11))+((r00*sj11*sj13))+(((-1.0)*r11*sj13*x683)))))) < -1-IKFAST_SINCOS_THRESH || (((x687.value)*(((0.0052)+((cj13*r00*x683))+(((0.0036)*x683))+((r22*x682))+((cj13*r11*sj11))+(((-0.235)*x682))+(((-0.003)*cj11))+((r00*sj11*sj13))+(((-1.0)*r11*sj13*x683)))))) > 1+IKFAST_SINCOS_THRESH )
    continue;
IkReal x685=IKasin(((x687.value)*(((0.0052)+((cj13*r00*x683))+(((0.0036)*x683))+((r22*x682))+((cj13*r11*sj11))+(((-0.235)*x682))+(((-0.003)*cj11))+((r00*sj11*sj13))+(((-1.0)*r11*sj13*x683))))));
j9array[0]=((((-1.0)*x684))+(((-1.0)*x685)));
sj9array[0]=IKsin(j9array[0]);
cj9array[0]=IKcos(j9array[0]);
j9array[1]=((3.14159265358979)+(((-1.0)*x684))+x685);
sj9array[1]=IKsin(j9array[1]);
cj9array[1]=IKcos(j9array[1]);
if( j9array[0] > IKPI )
{
    j9array[0]-=IK2PI;
}
else if( j9array[0] < -IKPI )
{    j9array[0]+=IK2PI;
}
j9valid[0] = true;
if( j9array[1] > IKPI )
{
    j9array[1]-=IK2PI;
}
else if( j9array[1] < -IKPI )
{    j9array[1]+=IK2PI;
}
j9valid[1] = true;
for(int ij9 = 0; ij9 < 2; ++ij9)
{
if( !j9valid[ij9] )
{
    continue;
}
_ij9[0] = ij9; _ij9[1] = -1;
for(int iij9 = ij9+1; iij9 < 2; ++iij9)
{
if( j9valid[iij9] && IKabs(cj9array[ij9]-cj9array[iij9]) < IKFAST_SOLUTION_THRESH && IKabs(sj9array[ij9]-sj9array[iij9]) < IKFAST_SOLUTION_THRESH )
{
    j9valid[iij9]=false; _ij9[1] = iij9; break; 
}
}
j9 = j9array[ij9]; cj9 = cj9array[ij9]; sj9 = sj9array[ij9];

{
IkReal j10eval[2];
IkReal x688=cj9*cj9;
IkReal x689=px*px;
IkReal x690=((((-2.0)*cj9*px*py*sj9))+((x688*(py*py)))+(pz*pz)+x689+(((-1.0)*x688*x689)));
j10eval[0]=x690;
j10eval[1]=IKsign(x690);
if( IKabs(j10eval[0]) < 0.0000010000000000  || IKabs(j10eval[1]) < 0.0000010000000000  )
{
{
IkReal j10eval[2];
IkReal x691=(cj13*pz);
IkReal x692=(cj11*r11);
IkReal x693=(cj9*py);
IkReal x694=((2824.78267490284)*sj11);
IkReal x695=(cj13*r00);
IkReal x696=((0.99310950337382)*sj12);
IkReal x697=(cj12*pz);
IkReal x698=((333.333333333333)*sj13);
IkReal x699=(r11*sj11);
IkReal x700=((0.117190077688363)*pz);
IkReal x701=(cj11*r00);
IkReal x702=(px*sj9);
IkReal x703=((0.000421884279678108)*sj12);
IkReal x704=(sj11*sj12);
IkReal x705=((10.1692176296502)*sj11);
IkReal x706=((0.99310950337382)*sj13);
IkReal x707=((0.00297932851012146)*sj11);
IkReal x708=(r11*sj13);
IkReal x709=((1.2)*sj12);
IkReal x710=((333.333333333333)*r22);
IkReal x711=((2824.78267490284)*sj13);
IkReal x712=((0.99310950337382)*sj11);
IkReal x713=((8.47434802470852)*sj11);
IkReal x714=(pz*sj11);
IkReal x715=(r22*sj11);
IkReal x716=((2824.78267490284)*sj12);
IkReal x717=((0.117190077688363)*r22);
IkReal x718=((0.99310950337382)*cj13);
IkReal x719=(r22*sj12);
IkReal x720=(pz*sj12);
IkReal x721=(r11*sj12);
IkReal x722=((333.333333333333)*sj12);
IkReal x723=((2824.78267490284)*cj13);
IkReal x724=((0.117190077688363)*sj12);
IkReal x725=((0.00357519421214575)*sj11);
IkReal x726=(cj12*x702);
IkReal x727=(cj12*r00*sj11);
j10eval[0]=((((-1.0)*x693*x713))+(((-1.0)*x694*x702*x719))+(((-1.0)*pz*x704*x710))+(((78.3333333333333)*pz*x704))+(((-1.0)*x693*x709))+(((-1.0)*x698*x702*x721))+(((2824.78267490284)*r22*x697))+((x692*x702*x723))+(((-10.1692176296502)*x720))+(((-1.0)*x710*x726))+((x694*x708*x726))+((x702*x709))+((x702*x713))+((cj12*x693*x694*x695))+((x693*x694*x719))+(((-1.2)*sj11*x697))+(((-663.823928602168)*x693*x704))+((x701*x702*x711))+(((-333.333333333333)*x691*x727))+(((78.3333333333333)*x726))+((pz*x698*x701))+((x697*x698*x699))+(((-85.0)*x693))+((x695*x702*x722))+(((-720.319582100224)*pz))+(((333.333333333333)*x691*x692))+(((-1.0)*x693*x701*x711))+(((-1.0)*r00*x691*x716))+((x693*x698*x721))+((cj12*x693*x710))+(((85.0)*x702))+(((-1.0)*x692*x693*x723))+((cj12*x693*x705))+x714+(((-1.0)*cj12*x693*x694*x708))+(((-1.0)*x705*x726))+(((-78.3333333333333)*cj12*x693))+(((-1.0)*x694*x695*x726))+(((663.823928602168)*x702*x704))+((pz*x708*x716))+(((-1.0)*x693*x695*x722))+(((-663.823928602168)*x697)));
j10eval[1]=IKsign((((x699*x706*x726))+(((-0.233380733292848)*x693*x704))+((cj12*x693*x695*x712))+(((-0.233380733292848)*x697))+(((-0.117190077688363)*x691*x727))+(((-1.0)*x693*x707))+(((-1.0)*x693*x703))+(((0.233380733292848)*x702*x704))+(((-1.0)*x695*x712*x726))+(((-0.0298834698105326)*x693))+((sj13*x700*x701))+((x702*x703))+((x702*x707))+(((-1.0)*r00*x691*x696))+((pz*x696*x708))+(((-1.0)*x696*x702*x715))+((x693*x696*x715))+((x701*x702*x706))+(((-1.0)*x717*x726))+(((0.00035157023306509)*x714))+(((0.0275396682567654)*pz*x704))+(((-1.0)*cj12*x693*x699*x706))+((x695*x702*x724))+(((-1.0)*x725*x726))+((x693*x708*x724))+(((0.117190077688363)*sj13*x697*x699))+((cj12*x693*x725))+(((-1.0)*x693*x701*x706))+(((0.0275396682567654)*x726))+(((-1.0)*r22*x700*x704))+((cj12*x693*x717))+(((0.99310950337382)*r22*x697))+(((-1.0)*x702*x708*x724))+(((0.117190077688363)*x691*x692))+(((0.0298834698105326)*x702))+(((-0.253242923360324)*pz))+(((-0.0275396682567654)*cj12*x693))+(((-0.00357519421214575)*x720))+(((-1.0)*x693*x695*x724))+(((-0.000421884279678108)*sj11*x697))+(((-1.0)*x692*x693*x718))+((x692*x702*x718))));
if( IKabs(j10eval[0]) < 0.0000010000000000  || IKabs(j10eval[1]) < 0.0000010000000000  )
{
{
IkReal j10eval[2];
IkReal x728=((2824.78267490284)*sj13);
IkReal x729=(px*sj9);
IkReal x730=(r11*sj12);
IkReal x731=(cj11*r00);
IkReal x732=(cj12*sj11);
IkReal x733=(cj9*py);
IkReal x734=(pz*sj11);
IkReal x735=((333.333333333333)*sj13);
IkReal x736=(cj12*r22);
IkReal x737=((333.333333333333)*cj13);
IkReal x738=(cj11*r11);
IkReal x739=(sj11*sj12);
IkReal x740=((0.117190077688363)*r22);
IkReal x741=((0.99310950337382)*sj13);
IkReal x742=((0.117190077688363)*sj13);
IkReal x743=(cj13*r00);
IkReal x744=((2824.78267490284)*sj12);
IkReal x745=(pz*sj12);
IkReal x746=((663.823928602168)*cj12);
IkReal x747=((0.99310950337382)*pz);
IkReal x748=((333.333333333333)*r22);
IkReal x749=(pz*r11);
IkReal x750=((0.00035157023306509)*sj11);
IkReal x751=((0.99310950337382)*sj12);
IkReal x752=(cj12*pz);
IkReal x753=((0.117190077688363)*cj13);
IkReal x754=((0.00357519421214575)*sj12);
IkReal x755=((2824.78267490284)*pz);
IkReal x756=((0.233380733292848)*cj12);
IkReal x757=((10.1692176296502)*sj12);
j10eval[0]=((((-1.0)*x729*x739*x748))+(((-1.0)*x729*x743*x744))+(((-1.2)*x729*x732))+(((-1.0)*pz*x728*x731))+((r11*x729*x732*x735))+(((-78.3333333333333)*x752))+(((-1.0)*x728*x730*x733))+(((1.2)*x732*x733))+((pz*x730*x735))+(((-1.0)*x729*x746))+(((-1.0)*r00*x737*x745))+(((-720.319582100224)*x729))+(((78.3333333333333)*x729*x739))+((x733*x743*x744))+((x728*x729*x730))+(((10.1692176296502)*pz*x732))+(((-1.0)*x729*x757))+(((-85.0)*pz))+(((-1.0)*r11*x732*x733*x735))+((r00*x732*x733*x737))+((x729*x731*x735))+(((-78.3333333333333)*x733*x739))+(((333.333333333333)*pz*x736))+((x732*x743*x755))+(((2824.78267490284)*x729*x736))+(((-1.0)*x728*x732*x749))+(((-1.0)*r00*x729*x732*x737))+((r22*x734*x744))+(((-1.0)*sj11*x733))+(((-1.2)*x745))+((x733*x757))+(((-1.0)*cj13*x738*x755))+((x733*x746))+(((-2824.78267490284)*x733*x736))+(((-663.823928602168)*sj12*x734))+(((-1.0)*x731*x733*x735))+(((720.319582100224)*x733))+(((-1.0)*x733*x737*x738))+((sj11*x729))+((x729*x737*x738))+((x733*x739*x748))+(((-8.47434802470852)*x734)));
j10eval[1]=IKsign(((((0.000421884279678108)*x732*x733))+(((-1.0)*pz*x731*x741))+(((-1.0)*x729*x739*x740))+(((-1.0)*r11*x732*x733*x742))+((x729*x738*x753))+(((-0.117190077688363)*x729*x732*x743))+(((0.117190077688363)*x732*x733*x743))+(((-0.000421884279678108)*x745))+(((-1.0)*x729*x756))+(((-1.0)*x729*x754))+(((-1.0)*x733*x738*x753))+((x733*x743*x751))+(((-1.0)*x730*x733*x741))+((x732*x743*x747))+((r11*x729*x732*x742))+(((-0.0298834698105326)*pz))+(((-0.000421884279678108)*x729*x732))+((r22*x734*x751))+(((0.99310950337382)*x729*x736))+(((-1.0)*cj13*x738*x747))+(((-1.0)*x733*x750))+(((0.253242923360324)*x733))+(((0.0275396682567654)*x729*x739))+((x729*x730*x741))+(((-1.0)*x731*x733*x742))+((x729*x750))+(((-0.00297932851012146)*x734))+(((-0.253242923360324)*x729))+((x733*x754))+((x733*x756))+(((-0.0275396682567654)*x733*x739))+(((-0.0275396682567654)*x752))+((x729*x731*x742))+(((-1.0)*x729*x743*x751))+(((0.117190077688363)*pz*x736))+(((-0.99310950337382)*x733*x736))+(((0.00357519421214575)*pz*x732))+(((-0.117190077688363)*x743*x745))+(((-1.0)*x732*x741*x749))+((pz*x730*x742))+(((-0.233380733292848)*sj12*x734))+((x733*x739*x740))));
if( IKabs(j10eval[0]) < 0.0000010000000000  || IKabs(j10eval[1]) < 0.0000010000000000  )
{
continue; // no branches [j10]

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
CheckValue<IkReal> x758 = IKatan2WithCheck(IkReal(((((0.23276515970686)*cj9*px*py*sj9))+(((2.0)*cj12*cj13*r00*r11*sj11*sj12*sj13))+(((-1.0)*cj11*cj12*r00*r22*sj13))+((cj12*sj11*sj12*(r22*r22)))+(((-0.0072)*cj12*cj13*r00*sj11*sj12))+(((-2.0)*r11*r22*sj11*sj13*(cj12*cj12)))+(((0.255)*cj11*r00*sj13))+(((-1.0)*cj11*cj12*cj13*r11*r22))+(((-1.0)*cj13*r00*r22*sj11))+(((-0.47)*cj12*r22*sj11*sj12))+(((0.0036)*cj11*r00*sj12*sj13))+(((-0.972532971382791)*cj9*py*pz))+(((-0.003)*r11*sj11*sj12*sj13))+(((-0.11638257985343)*(cj9*cj9)*(py*py)))+(((-1.0)*cj12*sj11*sj12*(r11*r11)))+(((-0.000213)*cj12*sj11))+(((0.0599358)*sj11*sj12))+(((-0.0036)*r22*sj11))+((cj12*sj11*sj12*(cj13*cj13)*(r11*r11)))+(((2.0)*cj11*r00*r11*sj12*(cj13*cj13)))+(((0.0072)*cj12*r11*sj11*sj12*sj13))+((r11*r22*sj11*sj13))+(((-0.47)*cj13*r00*sj11*(cj12*cj12)))+(((0.0036)*cj11*cj13*r11*sj12))+(((-0.001692)*sj11*(cj12*cj12)))+(((-1.0)*cj12*sj11*sj12*(cj13*cj13)*(r00*r00)))+(((0.001611)*sj11))+(((0.972532971382791)*px*pz*sj9))+(((0.11638257985343)*(cj9*cj9)*(px*px)))+(((0.235)*cj13*r00*sj11))+(((-0.235)*r11*sj11*sj13))+((cj11*cj13*sj12*sj13*(r00*r00)))+(((-0.003)*cj12*r22*sj11))+(((0.05521204)*cj12*sj11*sj12))+(((0.255)*cj11*cj13*r11))+(((-0.11638257985343)*(px*px)))+(((0.235)*cj11*cj12*cj13*r11))+(((0.255)*cj12*r11*sj11*sj13))+(((-1.0)*cj11*r00*r11*sj12))+(((-0.255)*cj12*cj13*r00*sj11))+(((2.0)*cj13*r00*r22*sj11*(cj12*cj12)))+(((0.003)*cj13*r00*sj11*sj12))+(((0.235)*cj11*cj12*r00*sj13))+(((-1.0)*cj11*cj13*sj12*sj13*(r11*r11)))+(((0.47)*r11*sj11*sj13*(cj12*cj12)))+(((0.0072)*r22*sj11*(cj12*cj12)))+(((0.11638257985343)*(pz*pz)))+(((-0.255)*r22*sj11*sj12)))),IkReal(((-0.06503796)+(((-1.0)*(cj13*cj13)*(r00*r00)))+(((2.0)*cj12*cj13*r00*r22*sj12))+(((0.23276515970686)*cj9*py*pz))+(((-1.0)*(cj12*cj12)*(r22*r22)))+(((cj13*cj13)*(r11*r11)))+(((-2.0)*cj13*r00*r11*sj13*(cj12*cj12)))+(((0.47)*r22*(cj12*cj12)))+(((-0.0274670286172093)*cj9*px*py*sj9))+(((0.0072)*r11*sj13))+(((-0.23276515970686)*px*pz*sj9))+(((-0.0072)*r11*sj13*(cj12*cj12)))+(((0.0072)*cj12*r22*sj12))+(((0.986266485691395)*(pz*pz)))+(((0.0137335143086046)*(px*px)))+(((2.0)*cj13*r00*r11*sj13))+(((0.0137335143086046)*(cj9*cj9)*(py*py)))+(((-0.11985)*cj12))+(((0.0072)*cj13*r00*(cj12*cj12)))+(((-1.0)*(r11*r11)))+(((0.51)*r11*sj12*sj13))+(((0.47)*cj12*r11*sj12*sj13))+(((cj12*cj12)*(cj13*cj13)*(r00*r00)))+(((0.51)*cj12*r22))+(((-0.05521204)*(cj12*cj12)))+(((-1.0)*(cj12*cj12)*(cj13*cj13)*(r11*r11)))+(((-0.47)*cj12*cj13*r00*sj12))+(((-0.0137335143086046)*(cj9*cj9)*(px*px)))+(((-0.001692)*cj12*sj12))+(((-0.001836)*sj12))+(((cj12*cj12)*(r11*r11)))+(((-2.0)*cj12*r11*r22*sj12*sj13))+(((-0.51)*cj13*r00*sj12))+(((-0.0072)*cj13*r00)))),IKFAST_ATAN2_MAGTHRESH);
if(!x758.valid){
continue;
}
CheckValue<IkReal> x759=IKPowWithIntegerCheck(IKsign(((((0.117190077688363)*pz*r11*sj12*sj13))+(((-0.117190077688363)*cj13*pz*r00*sj12))+(((-0.99310950337382)*cj12*pz*r11*sj11*sj13))+(((0.117190077688363)*cj9*py*r22*sj11*sj12))+(((-0.117190077688363)*cj12*cj13*px*r00*sj11*sj9))+(((-0.99310950337382)*cj13*px*r00*sj12*sj9))+(((-0.000421884279678108)*cj12*px*sj11*sj9))+(((-0.99310950337382)*cj12*cj9*py*r22))+(((-0.99310950337382)*cj11*pz*r00*sj13))+(((-0.99310950337382)*cj9*py*r11*sj12*sj13))+(((0.00035157023306509)*px*sj11*sj9))+(((-0.00035157023306509)*cj9*py*sj11))+(((-0.253242923360324)*px*sj9))+(((-0.99310950337382)*cj11*cj13*pz*r11))+(((-0.0275396682567654)*cj9*py*sj11*sj12))+(((0.117190077688363)*cj11*cj13*px*r11*sj9))+(((-0.0298834698105326)*pz))+(((-0.00357519421214575)*px*sj12*sj9))+(((0.000421884279678108)*cj12*cj9*py*sj11))+(((0.0275396682567654)*px*sj11*sj12*sj9))+(((0.99310950337382)*cj13*cj9*py*r00*sj12))+(((-0.233380733292848)*cj12*px*sj9))+(((0.117190077688363)*cj12*cj13*cj9*py*r00*sj11))+(((0.117190077688363)*cj12*px*r11*sj11*sj13*sj9))+(((0.99310950337382)*pz*r22*sj11*sj12))+(((0.117190077688363)*cj12*pz*r22))+(((-0.00297932851012146)*pz*sj11))+(((0.00357519421214575)*cj12*pz*sj11))+(((-0.117190077688363)*cj11*cj13*cj9*py*r11))+(((0.00357519421214575)*cj9*py*sj12))+(((0.99310950337382)*cj12*px*r22*sj9))+(((-0.117190077688363)*px*r22*sj11*sj12*sj9))+(((0.99310950337382)*cj12*cj13*pz*r00*sj11))+(((-0.117190077688363)*cj12*cj9*py*r11*sj11*sj13))+(((-0.117190077688363)*cj11*cj9*py*r00*sj13))+(((-0.233380733292848)*pz*sj11*sj12))+(((-0.000421884279678108)*pz*sj12))+(((0.99310950337382)*px*r11*sj12*sj13*sj9))+(((-0.0275396682567654)*cj12*pz))+(((0.233380733292848)*cj12*cj9*py))+(((0.117190077688363)*cj11*px*r00*sj13*sj9))+(((0.253242923360324)*cj9*py)))),-1);
if(!x759.valid){
continue;
}
j10array[0]=((-1.5707963267949)+(x758.value)+(((1.5707963267949)*(x759.value))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[5];
IkReal x760=IKsin(j10);
IkReal x761=IKcos(j10);
IkReal x762=(sj11*sj12);
IkReal x763=(cj9*py);
IkReal x764=((0.235)*cj12);
IkReal x765=((0.0036)*cj12);
IkReal x766=(px*sj9);
IkReal x767=((1.0)*r22);
IkReal x768=(cj13*r00);
IkReal x769=((1.0)*r11);
IkReal x770=(sj12*sj13);
IkReal x771=(cj11*cj13);
IkReal x772=(cj12*sj11);
IkReal x773=((0.0036)*sj12);
IkReal x774=((0.006)*cj12);
IkReal x775=((0.003)*sj11);
IkReal x776=(r11*sj13);
IkReal x777=((0.117190077688363)*x761);
IkReal x778=(sj11*x760);
IkReal x779=(cj11*r00*sj13);
IkReal x780=(sj12*x760);
IkReal x781=(pz*x760);
IkReal x782=((0.99310950337382)*x761);
IkReal x783=((0.506485846720648)*x761);
IkReal x784=(r11*x761);
IkReal x785=(x760*x766);
evalcond[0]=((0.255)+(((-1.0)*cj12*x767))+(((0.117190077688363)*x760*x763))+(((-1.0)*x766*x782))+((x763*x782))+(((-1.0)*pz*x777))+(((-1.0)*x769*x770))+(((0.99310950337382)*x781))+((sj12*x768))+x773+x764+(((-0.117190077688363)*x785)));
evalcond[1]=(((sj11*x765))+(((-0.99310950337382)*x785))+((x766*x777))+(((0.99310950337382)*x760*x763))+(((-1.0)*x769*x771))+((r22*x762))+(((-1.0)*x775))+(((-0.235)*x762))+(((-1.0)*x763*x777))+(((-1.0)*x779))+(((-1.0)*pz*x782))+(((-0.117190077688363)*x781))+(((-1.0)*sj13*x769*x772))+((x768*x772)));
evalcond[2]=((((-1.0)*x761*x762*x767))+(((0.255)*x760))+(((0.235)*x761*x762))+((x760*x764))+(((-1.0)*cj12*x760*x767))+((x768*x780))+((x761*x772*x776))+(((-1.0)*sj11*x761*x765))+(((0.99310950337382)*pz))+(((-0.117190077688363)*x766))+(((-1.0)*x761*x768*x772))+(((0.117190077688363)*x763))+((x761*x779))+((x761*x775))+((x771*x784))+((x760*x773))+(((-1.0)*x760*x769*x770)));
evalcond[3]=((((-0.235)*x760*x762))+(((0.255)*x761))+(((-1.0)*cj12*x761*x767))+(((-0.99310950337382)*x766))+(((-1.0)*x760*x779))+((x761*x764))+(((-0.117190077688363)*pz))+((x760*x768*x772))+((x765*x778))+((r22*x760*x762))+((sj12*x761*x768))+((x761*x773))+(((0.99310950337382)*x763))+(((-1.0)*x761*x769*x770))+(((-1.0)*x760*x769*x771))+(((-1.0)*sj13*x760*x769*x772))+(((-1.0)*x760*x775)));
evalcond[4]=((-0.00980508)+(((-0.006)*r22*sj12))+((x774*x776))+(((-1.0)*x768*x774))+(((-1.0)*(px*px)))+(r22*r22)+(((-0.506485846720648)*x781))+(r11*r11)+(((0.0104)*cj9*px))+(((-0.0597669396210653)*x760*x763))+(r00*r00)+(((-0.47)*r22))+((x766*x783))+(((0.0104)*py*sj9))+(((-1.0)*(pz*pz)))+(((0.00141)*sj12))+(((0.0597669396210653)*x785))+(((-2.16e-5)*cj12))+(((-1.0)*(py*py)))+(((-0.0072)*x776))+(((0.0072)*x768))+(((0.0597669396210653)*pz*x761))+(((-1.0)*x763*x783)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(5);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
CheckValue<IkReal> x786=IKPowWithIntegerCheck(IKsign(((((-0.117190077688363)*cj13*cj9*py*r00*sj12))+(((0.99310950337382)*pz*r11*sj12*sj13))+(((0.117190077688363)*cj12*cj9*py*r22))+(((-0.00357519421214575)*pz*sj12))+(((-0.99310950337382)*cj11*cj13*cj9*py*r11))+(((0.0275396682567654)*cj12*px*sj9))+(((0.117190077688363)*cj11*cj13*pz*r11))+(((-0.99310950337382)*cj12*cj13*px*r00*sj11*sj9))+(((0.117190077688363)*cj9*py*r11*sj12*sj13))+(((0.99310950337382)*cj12*cj13*cj9*py*r00*sj11))+(((-0.117190077688363)*pz*r22*sj11*sj12))+(((0.00297932851012146)*px*sj11*sj9))+(((-0.117190077688363)*cj12*px*r22*sj9))+(((-0.99310950337382)*cj12*cj9*py*r11*sj11*sj13))+(((0.00357519421214575)*cj12*cj9*py*sj11))+(((-0.99310950337382)*px*r22*sj11*sj12*sj9))+(((0.117190077688363)*cj11*pz*r00*sj13))+(((-0.00297932851012146)*cj9*py*sj11))+(((0.0275396682567654)*pz*sj11*sj12))+(((-0.000421884279678108)*cj12*pz*sj11))+(((0.117190077688363)*cj12*pz*r11*sj11*sj13))+(((0.00035157023306509)*pz*sj11))+(((0.99310950337382)*cj12*px*r11*sj11*sj13*sj9))+(((0.99310950337382)*cj12*pz*r22))+(((-0.117190077688363)*cj12*cj13*pz*r00*sj11))+(((0.99310950337382)*cj9*py*r22*sj11*sj12))+(((-0.99310950337382)*cj11*cj9*py*r00*sj13))+(((-0.0275396682567654)*cj12*cj9*py))+(((0.0298834698105326)*px*sj9))+(((-0.99310950337382)*cj13*pz*r00*sj12))+(((-0.0298834698105326)*cj9*py))+(((-0.253242923360324)*pz))+(((0.99310950337382)*cj11*cj13*px*r11*sj9))+(((0.117190077688363)*cj13*px*r00*sj12*sj9))+(((-0.000421884279678108)*cj9*py*sj12))+(((0.99310950337382)*cj11*px*r00*sj13*sj9))+(((0.233380733292848)*px*sj11*sj12*sj9))+(((-0.117190077688363)*px*r11*sj12*sj13*sj9))+(((0.000421884279678108)*px*sj12*sj9))+(((-0.233380733292848)*cj9*py*sj11*sj12))+(((-0.233380733292848)*cj12*pz))+(((-0.00357519421214575)*cj12*px*sj11*sj9)))),-1);
if(!x786.valid){
continue;
}
CheckValue<IkReal> x787 = IKatan2WithCheck(IkReal(((0.06503796)+(((-2.0)*cj13*r00*r11*sj13))+(((cj13*cj13)*(r00*r00)))+(((-1.0)*(cj12*cj12)*(r11*r11)))+(((0.001836)*sj12))+(((0.23276515970686)*cj9*py*pz))+(((-0.47)*cj12*r11*sj12*sj13))+(((0.0072)*r11*sj13*(cj12*cj12)))+(((-2.0)*cj12*cj13*r00*r22*sj12))+(((-0.23276515970686)*px*pz*sj9))+(((0.11985)*cj12))+(r11*r11)+(((-0.0072)*cj12*r22*sj12))+(((cj12*cj12)*(cj13*cj13)*(r11*r11)))+(((0.47)*cj12*cj13*r00*sj12))+(((0.05521204)*(cj12*cj12)))+(((-0.47)*r22*(cj12*cj12)))+(((-0.51)*cj12*r22))+(((-0.0072)*r11*sj13))+(((-1.0)*(cj13*cj13)*(r11*r11)))+(((cj12*cj12)*(r22*r22)))+(((2.0)*cj13*r00*r11*sj13*(cj12*cj12)))+(((-1.0)*(cj12*cj12)*(cj13*cj13)*(r00*r00)))+(((-0.986266485691395)*(px*px)))+(((-0.0137335143086046)*(pz*pz)))+(((0.0072)*cj13*r00))+(((2.0)*cj12*r11*r22*sj12*sj13))+(((0.001692)*cj12*sj12))+(((1.97253297138279)*cj9*px*py*sj9))+(((-0.51)*r11*sj12*sj13))+(((-0.986266485691395)*(cj9*cj9)*(py*py)))+(((0.51)*cj13*r00*sj12))+(((-0.0072)*cj13*r00*(cj12*cj12)))+(((0.986266485691395)*(cj9*cj9)*(px*px))))),IkReal(((((-0.23276515970686)*cj9*px*py*sj9))+(((2.0)*cj12*cj13*r00*r11*sj11*sj12*sj13))+(((-1.0)*cj11*cj12*r00*r22*sj13))+((cj12*sj11*sj12*(r22*r22)))+(((-0.0072)*cj12*cj13*r00*sj11*sj12))+(((-2.0)*r11*r22*sj11*sj13*(cj12*cj12)))+(((0.255)*cj11*r00*sj13))+(((0.11638257985343)*(cj9*cj9)*(py*py)))+(((-1.0)*cj11*cj12*cj13*r11*r22))+(((-1.0)*cj13*r00*r22*sj11))+(((0.972532971382791)*cj9*py*pz))+(((-0.47)*cj12*r22*sj11*sj12))+(((0.0036)*cj11*r00*sj12*sj13))+(((-0.003)*r11*sj11*sj12*sj13))+(((-1.0)*cj12*sj11*sj12*(r11*r11)))+(((-0.000213)*cj12*sj11))+(((0.0599358)*sj11*sj12))+(((-0.0036)*r22*sj11))+((cj12*sj11*sj12*(cj13*cj13)*(r11*r11)))+(((2.0)*cj11*r00*r11*sj12*(cj13*cj13)))+(((0.0072)*cj12*r11*sj11*sj12*sj13))+((r11*r22*sj11*sj13))+(((-0.47)*cj13*r00*sj11*(cj12*cj12)))+(((0.0036)*cj11*cj13*r11*sj12))+(((-0.001692)*sj11*(cj12*cj12)))+(((-1.0)*cj12*sj11*sj12*(cj13*cj13)*(r00*r00)))+(((0.001611)*sj11))+(((0.235)*cj13*r00*sj11))+(((-0.235)*r11*sj11*sj13))+((cj11*cj13*sj12*sj13*(r00*r00)))+(((-0.972532971382791)*px*pz*sj9))+(((-0.11638257985343)*(cj9*cj9)*(px*px)))+(((-0.003)*cj12*r22*sj11))+(((0.05521204)*cj12*sj11*sj12))+(((0.255)*cj11*cj13*r11))+(((0.11638257985343)*(px*px)))+(((0.235)*cj11*cj12*cj13*r11))+(((0.255)*cj12*r11*sj11*sj13))+(((-1.0)*cj11*r00*r11*sj12))+(((-0.255)*cj12*cj13*r00*sj11))+(((2.0)*cj13*r00*r22*sj11*(cj12*cj12)))+(((0.003)*cj13*r00*sj11*sj12))+(((0.235)*cj11*cj12*r00*sj13))+(((-1.0)*cj11*cj13*sj12*sj13*(r11*r11)))+(((-0.11638257985343)*(pz*pz)))+(((0.47)*r11*sj11*sj13*(cj12*cj12)))+(((0.0072)*r22*sj11*(cj12*cj12)))+(((-0.255)*r22*sj11*sj12)))),IKFAST_ATAN2_MAGTHRESH);
if(!x787.valid){
continue;
}
j10array[0]=((-1.5707963267949)+(((1.5707963267949)*(x786.value)))+(x787.value));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[5];
IkReal x788=IKsin(j10);
IkReal x789=IKcos(j10);
IkReal x790=(sj11*sj12);
IkReal x791=(cj9*py);
IkReal x792=((0.235)*cj12);
IkReal x793=((0.0036)*cj12);
IkReal x794=(px*sj9);
IkReal x795=((1.0)*r22);
IkReal x796=(cj13*r00);
IkReal x797=((1.0)*r11);
IkReal x798=(sj12*sj13);
IkReal x799=(cj11*cj13);
IkReal x800=(cj12*sj11);
IkReal x801=((0.0036)*sj12);
IkReal x802=((0.006)*cj12);
IkReal x803=((0.003)*sj11);
IkReal x804=(r11*sj13);
IkReal x805=((0.117190077688363)*x789);
IkReal x806=(sj11*x788);
IkReal x807=(cj11*r00*sj13);
IkReal x808=(sj12*x788);
IkReal x809=(pz*x788);
IkReal x810=((0.99310950337382)*x789);
IkReal x811=((0.506485846720648)*x789);
IkReal x812=(r11*x789);
IkReal x813=(x788*x794);
evalcond[0]=((0.255)+((x791*x810))+(((0.117190077688363)*x788*x791))+(((-1.0)*cj12*x795))+(((-1.0)*x794*x810))+(((-1.0)*x797*x798))+(((0.99310950337382)*x809))+(((-0.117190077688363)*x813))+((sj12*x796))+x792+x801+(((-1.0)*pz*x805)));
evalcond[1]=((((-1.0)*x807))+(((-0.117190077688363)*x809))+(((-1.0)*x791*x805))+(((-0.99310950337382)*x813))+(((-1.0)*pz*x810))+(((-1.0)*x797*x799))+((x794*x805))+(((-0.235)*x790))+((r22*x790))+(((0.99310950337382)*x788*x791))+(((-1.0)*x803))+(((-1.0)*sj13*x797*x800))+((sj11*x793))+((x796*x800)));
evalcond[2]=(((x788*x801))+((x799*x812))+(((0.255)*x788))+(((-1.0)*x789*x796*x800))+((x788*x792))+(((-1.0)*sj11*x789*x793))+((x789*x807))+((x789*x803))+(((-1.0)*x788*x797*x798))+(((-1.0)*x789*x790*x795))+(((0.99310950337382)*pz))+(((0.235)*x789*x790))+((x789*x800*x804))+(((-0.117190077688363)*x794))+((x796*x808))+(((-1.0)*cj12*x788*x795))+(((0.117190077688363)*x791)));
evalcond[3]=((((-1.0)*x789*x797*x798))+(((0.255)*x789))+((x793*x806))+((r22*x788*x790))+(((-1.0)*sj13*x788*x797*x800))+(((-0.99310950337382)*x794))+(((-1.0)*cj12*x789*x795))+(((-0.117190077688363)*pz))+((x789*x801))+(((-1.0)*x788*x807))+(((-1.0)*x788*x797*x799))+(((-1.0)*x788*x803))+((sj12*x789*x796))+(((0.99310950337382)*x791))+(((-0.235)*x788*x790))+((x789*x792))+((x788*x796*x800)));
evalcond[4]=((-0.00980508)+(((-0.006)*r22*sj12))+(((-0.506485846720648)*x809))+(((-1.0)*x796*x802))+(((0.0597669396210653)*x813))+(((-1.0)*(px*px)))+((x794*x811))+(r22*r22)+(r11*r11)+(((0.0104)*cj9*px))+(r00*r00)+(((-0.47)*r22))+(((-0.0597669396210653)*x788*x791))+(((0.0104)*py*sj9))+(((-0.0072)*x804))+(((-1.0)*(pz*pz)))+(((0.00141)*sj12))+(((0.0597669396210653)*pz*x789))+(((0.0072)*x796))+(((-2.16e-5)*cj12))+(((-1.0)*(py*py)))+((x802*x804))+(((-1.0)*x791*x811)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(5);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
CheckValue<IkReal> x814=IKPowWithIntegerCheck(IKsign(((((-2.0)*cj9*px*py*sj9))+(px*px)+(pz*pz)+(((-1.0)*(cj9*cj9)*(px*px)))+(((cj9*cj9)*(py*py))))),-1);
if(!x814.valid){
continue;
}
CheckValue<IkReal> x815 = IKatan2WithCheck(IkReal(((((-0.117190077688363)*cj13*cj9*py*r00*sj12))+(((0.00297932851012146)*cj9*py*sj11))+(((0.99310950337382)*pz*r11*sj12*sj13))+(((0.117190077688363)*cj12*cj9*py*r22))+(((-0.00357519421214575)*pz*sj12))+(((-0.99310950337382)*cj9*py*r22*sj11*sj12))+(((0.0275396682567654)*cj12*px*sj9))+(((0.117190077688363)*pz*r22*sj11*sj12))+(((0.99310950337382)*cj12*cj13*px*r00*sj11*sj9))+(((-0.99310950337382)*cj11*px*r00*sj13*sj9))+(((0.117190077688363)*cj9*py*r11*sj12*sj13))+(((0.99310950337382)*cj12*cj9*py*r11*sj11*sj13))+(((0.233380733292848)*cj9*py*sj11*sj12))+(((0.99310950337382)*px*r22*sj11*sj12*sj9))+(((-0.117190077688363)*cj11*cj13*pz*r11))+(((-0.99310950337382)*cj11*cj13*px*r11*sj9))+(((-0.00357519421214575)*cj12*cj9*py*sj11))+(((-0.00035157023306509)*pz*sj11))+(((-0.117190077688363)*cj12*px*r22*sj9))+(((-0.99310950337382)*cj12*cj13*cj9*py*r00*sj11))+(((-0.0275396682567654)*pz*sj11*sj12))+(((0.00357519421214575)*cj12*px*sj11*sj9))+(((0.117190077688363)*cj12*cj13*pz*r00*sj11))+(((-0.00297932851012146)*px*sj11*sj9))+(((0.99310950337382)*cj12*pz*r22))+(((-0.233380733292848)*px*sj11*sj12*sj9))+(((-0.117190077688363)*cj11*pz*r00*sj13))+(((-0.0275396682567654)*cj12*cj9*py))+(((0.0298834698105326)*px*sj9))+(((-0.99310950337382)*cj13*pz*r00*sj12))+(((-0.0298834698105326)*cj9*py))+(((-0.253242923360324)*pz))+(((0.117190077688363)*cj13*px*r00*sj12*sj9))+(((-0.117190077688363)*cj12*pz*r11*sj11*sj13))+(((0.000421884279678108)*cj12*pz*sj11))+(((-0.000421884279678108)*cj9*py*sj12))+(((-0.117190077688363)*px*r11*sj12*sj13*sj9))+(((0.000421884279678108)*px*sj12*sj9))+(((-0.99310950337382)*cj12*px*r11*sj11*sj13*sj9))+(((-0.233380733292848)*cj12*pz))+(((0.99310950337382)*cj11*cj9*py*r00*sj13))+(((0.99310950337382)*cj11*cj13*cj9*py*r11)))),IkReal(((((0.99310950337382)*cj9*py*r11*sj12*sj13))+(((0.00357519421214575)*px*sj12*sj9))+(((-0.99310950337382)*cj12*pz*r11*sj11*sj13))+(((-0.117190077688363)*cj12*pz*r22))+(((0.117190077688363)*cj9*py*r22*sj11*sj12))+(((-0.117190077688363)*cj12*cj13*px*r00*sj11*sj9))+(((0.117190077688363)*cj13*pz*r00*sj12))+(((-0.000421884279678108)*cj12*px*sj11*sj9))+(((0.0275396682567654)*cj12*pz))+(((-0.99310950337382)*cj11*pz*r00*sj13))+(((0.00035157023306509)*px*sj11*sj9))+(((-0.99310950337382)*cj13*cj9*py*r00*sj12))+(((-0.00035157023306509)*cj9*py*sj11))+(((-0.99310950337382)*cj11*cj13*pz*r11))+(((-0.0275396682567654)*cj9*py*sj11*sj12))+(((0.117190077688363)*cj11*cj13*px*r11*sj9))+(((0.000421884279678108)*cj12*cj9*py*sj11))+(((0.233380733292848)*cj12*px*sj9))+(((0.0275396682567654)*px*sj11*sj12*sj9))+(((-0.253242923360324)*cj9*py))+(((-0.99310950337382)*cj12*px*r22*sj9))+(((0.99310950337382)*cj12*cj9*py*r22))+(((0.0298834698105326)*pz))+(((0.117190077688363)*cj12*cj13*cj9*py*r00*sj11))+(((0.117190077688363)*cj12*px*r11*sj11*sj13*sj9))+(((0.99310950337382)*pz*r22*sj11*sj12))+(((-0.233380733292848)*cj12*cj9*py))+(((-0.00297932851012146)*pz*sj11))+(((0.00357519421214575)*cj12*pz*sj11))+(((-0.117190077688363)*cj11*cj13*cj9*py*r11))+(((-0.117190077688363)*px*r22*sj11*sj12*sj9))+(((0.99310950337382)*cj12*cj13*pz*r00*sj11))+(((-0.117190077688363)*cj12*cj9*py*r11*sj11*sj13))+(((-0.117190077688363)*pz*r11*sj12*sj13))+(((-0.117190077688363)*cj11*cj9*py*r00*sj13))+(((0.253242923360324)*px*sj9))+(((-0.233380733292848)*pz*sj11*sj12))+(((0.99310950337382)*cj13*px*r00*sj12*sj9))+(((-0.00357519421214575)*cj9*py*sj12))+(((0.117190077688363)*cj11*px*r00*sj13*sj9))+(((-0.99310950337382)*px*r11*sj12*sj13*sj9))+(((0.000421884279678108)*pz*sj12)))),IKFAST_ATAN2_MAGTHRESH);
if(!x815.valid){
continue;
}
j10array[0]=((-1.5707963267949)+(((1.5707963267949)*(x814.value)))+(x815.value));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[5];
IkReal x816=IKsin(j10);
IkReal x817=IKcos(j10);
IkReal x818=(sj11*sj12);
IkReal x819=(cj9*py);
IkReal x820=((0.235)*cj12);
IkReal x821=((0.0036)*cj12);
IkReal x822=(px*sj9);
IkReal x823=((1.0)*r22);
IkReal x824=(cj13*r00);
IkReal x825=((1.0)*r11);
IkReal x826=(sj12*sj13);
IkReal x827=(cj11*cj13);
IkReal x828=(cj12*sj11);
IkReal x829=((0.0036)*sj12);
IkReal x830=((0.006)*cj12);
IkReal x831=((0.003)*sj11);
IkReal x832=(r11*sj13);
IkReal x833=((0.117190077688363)*x817);
IkReal x834=(sj11*x816);
IkReal x835=(cj11*r00*sj13);
IkReal x836=(sj12*x816);
IkReal x837=(pz*x816);
IkReal x838=((0.99310950337382)*x817);
IkReal x839=((0.506485846720648)*x817);
IkReal x840=(r11*x817);
IkReal x841=(x816*x822);
evalcond[0]=((0.255)+(((0.99310950337382)*x837))+(((0.117190077688363)*x816*x819))+((x819*x838))+(((-1.0)*pz*x833))+((sj12*x824))+(((-1.0)*cj12*x823))+(((-1.0)*x822*x838))+x829+x820+(((-1.0)*x825*x826))+(((-0.117190077688363)*x841)));
evalcond[1]=((((-1.0)*sj13*x825*x828))+((sj11*x821))+(((-0.117190077688363)*x837))+(((-0.235)*x818))+(((-1.0)*pz*x838))+((x824*x828))+(((0.99310950337382)*x816*x819))+(((-1.0)*x819*x833))+(((-0.99310950337382)*x841))+(((-1.0)*x831))+((x822*x833))+(((-1.0)*x835))+((r22*x818))+(((-1.0)*x825*x827)));
evalcond[2]=(((x824*x836))+((x827*x840))+((x816*x820))+((x816*x829))+(((0.235)*x817*x818))+(((-1.0)*x817*x824*x828))+(((-1.0)*cj12*x816*x823))+(((-1.0)*x817*x818*x823))+(((0.255)*x816))+(((0.117190077688363)*x819))+((x817*x828*x832))+(((0.99310950337382)*pz))+(((-1.0)*sj11*x817*x821))+((x817*x835))+((x817*x831))+(((-0.117190077688363)*x822))+(((-1.0)*x816*x825*x826)));
evalcond[3]=((((0.99310950337382)*x819))+((r22*x816*x818))+((sj12*x817*x824))+((x821*x834))+(((-0.99310950337382)*x822))+((x817*x820))+((x817*x829))+(((-0.117190077688363)*pz))+(((-1.0)*x817*x825*x826))+(((-1.0)*x816*x831))+(((-1.0)*cj12*x817*x823))+((x816*x824*x828))+(((0.255)*x817))+(((-1.0)*sj13*x816*x825*x828))+(((-0.235)*x816*x818))+(((-1.0)*x816*x835))+(((-1.0)*x816*x825*x827)));
evalcond[4]=((-0.00980508)+(((-0.006)*r22*sj12))+(((-1.0)*(px*px)))+(r22*r22)+(((-0.506485846720648)*x837))+(r11*r11)+(((0.0104)*cj9*px))+(((-0.0072)*x832))+(((-1.0)*x819*x839))+(((0.0597669396210653)*pz*x817))+(r00*r00)+(((-1.0)*x824*x830))+(((-0.47)*r22))+((x830*x832))+(((0.0104)*py*sj9))+((x822*x839))+(((-1.0)*(pz*pz)))+(((0.00141)*sj12))+(((-2.16e-5)*cj12))+(((-1.0)*(py*py)))+(((-0.0597669396210653)*x816*x819))+(((0.0072)*x824))+(((0.0597669396210653)*x841)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(5);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}
}
}

}

}
}
return solutions.GetNumSolutions()>0;
}
};


/// solves the inverse kinematics equations.
/// \param pfree is an array specifying the free joints of the chain.
IKFAST_API bool ComputeIk(const IkReal* eetrans, const IkReal* eerot, const IkReal* pfree, IkSolutionListBase<IkReal>& solutions) {
IKSolver solver;
return solver.ComputeIk(eetrans,eerot,pfree,solutions);
}

IKFAST_API bool ComputeIk2(const IkReal* eetrans, const IkReal* eerot, const IkReal* pfree, IkSolutionListBase<IkReal>& solutions, void* pOpenRAVEManip) {
IKSolver solver;
return solver.ComputeIk(eetrans,eerot,pfree,solutions);
}

IKFAST_API const char* GetKinematicsHash() { return "aaa340f8785ba4be7d88a32e988f70ff"; }

IKFAST_API const char* GetIkFastVersion() { return "0x10000049"; }

#ifdef IKFAST_NAMESPACE
} // end namespace
#endif

#ifndef IKFAST_NO_MAIN
#include <stdio.h>
#include <stdlib.h>
#ifdef IKFAST_NAMESPACE
using namespace IKFAST_NAMESPACE;
#endif
int main(int argc, char** argv)
{
    if( argc != 12+GetNumFreeParameters()+1 ) {
        printf("\nUsage: ./ik r00 r01 r02 t0 r10 r11 r12 t1 r20 r21 r22 t2 free0 ...\n\n"
               "Returns the ik solutions given the transformation of the end effector specified by\n"
               "a 3x3 rotation R (rXX), and a 3x1 translation (tX).\n"
               "There are %d free parameters that have to be specified.\n\n",GetNumFreeParameters());
        return 1;
    }

    IkSolutionList<IkReal> solutions;
    std::vector<IkReal> vfree(GetNumFreeParameters());
    IkReal eerot[9],eetrans[3];
    eerot[0] = atof(argv[1]); eerot[1] = atof(argv[2]); eerot[2] = atof(argv[3]); eetrans[0] = atof(argv[4]);
    eerot[3] = atof(argv[5]); eerot[4] = atof(argv[6]); eerot[5] = atof(argv[7]); eetrans[1] = atof(argv[8]);
    eerot[6] = atof(argv[9]); eerot[7] = atof(argv[10]); eerot[8] = atof(argv[11]); eetrans[2] = atof(argv[12]);
    for(std::size_t i = 0; i < vfree.size(); ++i)
        vfree[i] = atof(argv[13+i]);
    bool bSuccess = ComputeIk(eetrans, eerot, vfree.size() > 0 ? &vfree[0] : NULL, solutions);

    if( !bSuccess ) {
        fprintf(stderr,"Failed to get ik solution\n");
        return -1;
    }

    printf("Found %d ik solutions:\n", (int)solutions.GetNumSolutions());
    std::vector<IkReal> solvalues(GetNumJoints());
    for(std::size_t i = 0; i < solutions.GetNumSolutions(); ++i) {
        const IkSolutionBase<IkReal>& sol = solutions.GetSolution(i);
        printf("sol%d (free=%d): ", (int)i, (int)sol.GetFree().size());
        std::vector<IkReal> vsolfree(sol.GetFree().size());
        sol.GetSolution(&solvalues[0],vsolfree.size()>0?&vsolfree[0]:NULL);
        for( std::size_t j = 0; j < solvalues.size(); ++j)
            printf("%.15f, ", solvalues[j]);
        printf("\n");
    }
    return 0;
}

#endif
